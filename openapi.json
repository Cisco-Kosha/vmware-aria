{
  "openapi": "3.0.0",
  "info": {
    "description": "<p><span style=\"color: #9F6000; background-color: #FEEFB3; padding:7px;\">&#9888; All APIs executed from this API Explorer are done against your live environment, please execute with caution.</span></p><b>Officially supported API(s)</b> are documented.",
    "title": "VMware Aria Operations API",
    "version": ""
  },
  "servers": [
    {
      "url": "https://www.mgmt.cloud.vmware.com/suite-api"
    }
  ],
  "paths": {
    "/api/actiondefinitions": {
      "get": {
        "parameters": [
          {
            "explode": true,
            "in": "query",
            "name": "others",
            "required": false,
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          {
            "description": "Page number from which data needs to be displayed (0-based)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Expected number of entries per page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Filtering action definitions by the availability of being scheduled",
            "in": "query",
            "name": "scheduleEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"pageInfo\" : {\n    \"totalCount\" : 2,\n    \"page\" : 0,\n    \"pageSize\" : 10\n  },\n  \"links\" : [ {\n    \"href\" : \"/suite-api/api/actiondefinitions?page=0&pageSize=10\",\n    \"rel\" : \"SELF\",\n    \"name\" : \"current\",\n    \"description\" : \"self\"\n  }, {\n    \"href\" : \"/suite-api/api/actiondefinitions?page=0&pageSize=10\",\n    \"rel\" : \"RELATED\",\n    \"name\" : \"first\",\n    \"description\" : \"first\"\n  }, {\n    \"href\" : \"/suite-api/api/actiondefinitions?page=0&pageSize=10\",\n    \"rel\" : \"RELATED\",\n    \"name\" : \"last\",\n    \"description\" : \"last\"\n  } ],\n  \"actionDefinitions\" : [ {\n    \"id\" : \"VMWARE-Power Off VM\",\n    \"displayName\" : \"Power Off VM\",\n    \"type\" : \"UPDATE\",\n    \"actionAdapterKindKey\" : \"VMWARE\",\n    \"contextAdapterKindKey\" : \"VMWARE\",\n    \"contextResourceKindKey\" : \"VirtualMachine\",\n    \"contextIds\" : [ \"PowerOffVM\" ],\n    \"scheduleEnabled\" : true,\n    \"canRecommend\" : true\n  }, {\n    \"id\" : \"VMWARE-Power On VM\",\n    \"displayName\" : \"Power On VM\",\n    \"type\" : \"UPDATE\",\n    \"actionAdapterKindKey\" : \"VMWARE\",\n    \"contextAdapterKindKey\" : \"VMWARE\",\n    \"contextResourceKindKey\" : \"VirtualMachine\",\n    \"contextIds\" : [ \"PowerOnVM\" ],\n    \"scheduleEnabled\" : true,\n    \"canRecommend\" : true\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/action-definitions"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:action-definitions xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:pageInfo totalCount=\"2\">\n        <ops:page>0</ops:page>\n        <ops:pageSize>10</ops:pageSize>\n    </ops:pageInfo>\n    <ops:links>\n        <ops:link href=\"/suite-api/api/actiondefinitions?page=0&amp;pageSize=10\" rel=\"SELF\" name=\"current\">\n            <ops:description>self</ops:description>\n        </ops:link>\n        <ops:link href=\"/suite-api/api/actiondefinitions?page=0&amp;pageSize=10\" rel=\"RELATED\" name=\"first\">\n            <ops:description>first</ops:description>\n        </ops:link>\n        <ops:link href=\"/suite-api/api/actiondefinitions?page=0&amp;pageSize=10\" rel=\"RELATED\" name=\"last\">\n            <ops:description>last</ops:description>\n        </ops:link>\n    </ops:links>\n    <ops:action-definition id=\"VMWARE-Power Off VM\" type=\"UPDATE\" canRecommend=\"true\">\n        <ops:displayName>Power Off VM</ops:displayName>\n        <ops:actionAdapterKindKey>VMWARE</ops:actionAdapterKindKey>\n        <ops:contextAdapterKindKey>VMWARE</ops:contextAdapterKindKey>\n        <ops:contextResourceKindKey>VirtualMachine</ops:contextResourceKindKey>\n        <ops:contextIds>PowerOffVM</ops:contextIds>\n        <ops:scheduleEnabled>true</ops:scheduleEnabled>\n    </ops:action-definition>\n    <ops:action-definition id=\"VMWARE-Power On VM\" type=\"UPDATE\" canRecommend=\"true\">\n        <ops:displayName>Power On VM</ops:displayName>\n        <ops:actionAdapterKindKey>VMWARE</ops:actionAdapterKindKey>\n        <ops:contextAdapterKindKey>VMWARE</ops:contextAdapterKindKey>\n        <ops:contextResourceKindKey>VirtualMachine</ops:contextResourceKindKey>\n        <ops:contextIds>PowerOnVM</ops:contextIds>\n        <ops:scheduleEnabled>true</ops:scheduleEnabled>\n    </ops:action-definition>\n</ops:action-definitions>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/action-definitions"
                }
              }
            },
            "description": "List of ActionDefinitions in the system"
          }
        },

        "tags": [
          "Actions"
        ],
        "deprecated": false,
        "description": "Performing a <code>GET /api/actiondefinitions</code> call will query for   \navailable Actions defined in the system. This includes the data needed \nto populate an <i>Action</i> in the system.<br>",
        "operationId": "getAllActionsUsingGET",
        "summary": "Look up Action Definitions in the system"
      }
    },
    "/api/actions/{id}": {
      "post": {
        "parameters": [
          {
            "description": "The id for the action to be executed (can be retrieved via: GET /api/actiondefinitions)",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"values\" : [ \"e1c015da-5c50-46e0-89c4-72a34f449bab\" ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/str-values"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:str-values xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:values>d9ea4f0f-96a4-4841-b994-d78868dff375</ops:values>\n</ops:str-values>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/str-values"
                }
              }
            },
            "description": "List of Task Ids for the action run."
          }
        },

        "tags": [
          "Actions"
        ],
        "deprecated": false,
        "description": "<br>Performing a <code>POST /api/actions/{id}</code> will attempt to trigger the \naction with specified id. It is considered a best practice to use the <i>actionExecution</i> field from the\n<code>POST /api/action/{id}/query</code> that has been previously executed to populate      \nthe body of the request. Please note that additional values may be required in order to make\nthe <i>populateAction</i> response body valid.<br>",
        "operationId": "performActionUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/action-execution"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/action-execution"
              }
            }
          },
          "description": "Describe instance data about performing an action."
        },
        "summary": "Perform an Action on one or more resources"
      }
    },
    "/api/actions/{id}/query": {
      "post": {
        "parameters": [
          {
            "description": "The Id for the action to be populate.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"VMWARE-Power Off VM\",\n  \"actionContext\" : {\n    \"id\" : \"Power Off VM\",\n    \"fields\" : [ {\n      \"id\" : \"Name\",\n      \"name\" : \"VM Name\",\n      \"component\" : \"textfield\",\n      \"input\" : false,\n      \"displayOrder\" : 0,\n      \"hidden\" : false,\n      \"expressionResults\" : [ \"MyVMName\" ]\n    } ]\n  },\n  \"methodParameters\" : [ {\n    \"id\" : \"mOR\",\n    \"dataType\" : \"String\",\n    \"isRequired\" : true,\n    \"isList\" : false\n  } ],\n  \"action-execution\" : {\n    \"contextId\" : \"PowerOffVM\",\n    \"contextResourceId\" : [ \"7e780215-da07-4da1-9167-cd6892dcfdd8\" ],\n    \"parameterGroup\" : [ {\n      \"resourceId\" : \"7e780215-da07-4da1-9167-cd6892dcfdd8\"\n    } ]\n  }\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/populated-action"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:populated-action id=\"VMWARE-Power Off VM\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:actionContext id=\"Power Off VM\">\n        <ops:fields>\n            <ops:field id=\"Name\" name=\"VM Name\" component=\"textfield\" input=\"false\" displayOrder=\"0\" hidden=\"false\">\n                <ops:expressionResults>\n                    <ops:expressionResult>MyVMName</ops:expressionResult>\n                </ops:expressionResults>\n            </ops:field>\n        </ops:fields>\n    </ops:actionContext>\n    <ops:methodParameters>\n        <ops:methodParameter id=\"mOR\" dataType=\"String\" isRequired=\"true\" isList=\"false\"/>\n    </ops:methodParameters>\n    <ops:action-execution contextId=\"PowerOffVM\">\n        <ops:contextResourceId>7e780215-da07-4da1-9167-cd6892dcfdd8</ops:contextResourceId>\n        <ops:parameterGroup resourceId=\"7e780215-da07-4da1-9167-cd6892dcfdd8\"/>\n    </ops:action-execution>\n</ops:populated-action>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/populated-action"
                }
              }
            },
            "description": "The populated action information"
          }
        },

        "tags": [
          "Actions"
        ],
        "deprecated": false,
        "description": "<br>Performing a <code>POST /api/actions/{id}/query</code> would yield a response object that    \nincludes the resources that the action would apply to with the populated values of each action   \ncontext field for the resource.  The response contains information about the parameters to the   \naction's method.  It also includes a sample input that would be used for running the action with \n<code>POST /api/actions/{id}</code> if you chose to run it on all applicable resources           \nand not change the default input values.<br>                                                     <br>The json result inside actionExecution can be used directly as input perform the action.  In the xml\nresult, the xml element ops:action-execution will need namespace binding added to it in order to use it \nin the request.\n<code>xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\"</code> \n",
        "operationId": "populateActionUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/action-population"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/action-population"
              }
            }
          },
          "description": "The additional information needed to populate the action.",
          "required": true
        },
        "summary": "Populate the information needed to run an action"
      }
    },
    "/api/actions/{taskId}/status": {
      "get": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Information about action status objects",
            "example": false,
            "in": "query",
            "name": "detail",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Action identifier (result of the action: POST /api/actions/{id})",
            "in": "path",
            "name": "taskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"taskId\" : \"760730bd-4be0-4340-83c7-aec8a9c3dc86\",\n  \"name\" : \"VMWARE-Power Off VM\",\n  \"state\" : \"Completed\",\n  \"resourceKind\" : \"Virtual Machine\",\n  \"submittedBy\" : \"admin\",\n  \"authSource\" : \"LOCAL\",\n  \"startDate\" : \"2019-12-05T09:57:20.439Z\",\n  \"completeDate\" : \"2019-12-05T09:57:22.439Z\",\n  \"actionResult\" : \"ActionResult\",\n  \"messages\" : [ {\n    \"message\" : \"Cannot power Off: Another task is already in progress\",\n    \"level\" : \"ERROR\",\n    \"timestamp\" : \"2019-12-05T09:57:20.439Z\"\n  }, {\n    \"message\" : \"The operation is not allowed in current state\",\n    \"level\" : \"WARN\",\n    \"timestamp\" : \"2019-12-05T09:57:20.439Z\"\n  }, {\n    \"message\" : \"The virtual machine is powered Off\",\n    \"level\" : \"INFO\",\n    \"timestamp\" : \"2019-12-05T09:57:20.439Z\"\n  } ],\n  \"triggeredAutomatically\" : true,\n  \"triggeringSource\" : \"Source\",\n  \"triggeringEventId\" : \"f95f70a4-e08c-46e7-aed0-6792b337ac0e\",\n  \"triggeringEventName\" : \"Virtual machine disk I/O write latency is high\",\n  \"triggeringSourceEvent\" : \"Source Event\",\n  \"actionObjectStatuses\" : [ {\n    \"id\" : \"67e51aba-bdf9-4787-b43d-0daee2eb6c28\",\n    \"state\" : \"COMPLETED_SUCCESSFULLY\",\n    \"creationDate\" : \"2019-12-05T09:57:20.439Z\",\n    \"messages\" : [ {\n      \"message\" : \"Cannot power On VM 'VM-1'\",\n      \"level\" : \"ERROR\",\n      \"timestamp\" : \"2019-12-05T09:57:20.439Z\"\n    }, {\n      \"message\" : \"The operation is not allowed in current state\",\n      \"level\" : \"WARN\",\n      \"timestamp\" : \"2019-12-05T09:57:20.439Z\"\n    }, {\n      \"message\" : \"Powering on VM 'VM-1'\",\n      \"level\" : \"INFO\",\n      \"timestamp\" : \"2019-12-05T09:57:20.439Z\"\n    } ]\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/action-status-info"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:action-status-info taskId=\"3cc83dfb-95e7-47e7-a2d9-90c42b43bd40\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:name>VMWARE-Power Off VM</ops:name>\n    <ops:state>Completed</ops:state>\n    <ops:resourceKind>Virtual Machine</ops:resourceKind>\n    <ops:submittedBy>admin</ops:submittedBy>\n    <ops:authSource>LOCAL</ops:authSource>\n    <ops:startDate>2019-12-05T09:57:20.439Z</ops:startDate>\n    <ops:completeDate>2019-12-05T09:57:22.439Z</ops:completeDate>\n    <ops:actionResult>ActionResult</ops:actionResult>\n    <ops:messages>\n        <ops:message>\n            <ops:message>Cannot power Off: Another task is already in progress</ops:message>\n            <ops:level>ERROR</ops:level>\n            <ops:timestamp>2019-12-05T09:57:20.439Z</ops:timestamp>\n        </ops:message>\n        <ops:message>\n            <ops:message>The operation is not allowed in current state</ops:message>\n            <ops:level>WARN</ops:level>\n            <ops:timestamp>2019-12-05T09:57:20.439Z</ops:timestamp>\n        </ops:message>\n        <ops:message>\n            <ops:message>The virtual machine is powered Off</ops:message>\n            <ops:level>INFO</ops:level>\n            <ops:timestamp>2019-12-05T09:57:20.439Z</ops:timestamp>\n        </ops:message>\n    </ops:messages>\n    <ops:triggeredAutomatically>true</ops:triggeredAutomatically>\n    <ops:triggeringSource>Source</ops:triggeringSource>\n    <ops:triggeringEventId>baa31d46-dbbf-4aa2-8429-3fcc21d17b26</ops:triggeringEventId>\n    <ops:triggeringEventName>Virtual machine disk I/O write latency is high</ops:triggeringEventName>\n    <ops:triggeringSourceEvent>Source Event</ops:triggeringSourceEvent>\n    <ops:actionObjectStatuses>\n        <ops:action-object-status id=\"2ed30486-66f8-440a-9df3-b9217b78d21b\">\n            <ops:state>COMPLETED_SUCCESSFULLY</ops:state>\n            <ops:creationDate>2019-12-05T09:57:20.439Z</ops:creationDate>\n            <ops:messages>\n                <ops:message>\n                    <ops:message>Cannot power On VM 'VM-1'</ops:message>\n                    <ops:level>ERROR</ops:level>\n                    <ops:timestamp>2019-12-05T09:57:20.439Z</ops:timestamp>\n                </ops:message>\n                <ops:message>\n                    <ops:message>The operation is not allowed in current state</ops:message>\n                    <ops:level>WARN</ops:level>\n                    <ops:timestamp>2019-12-05T09:57:20.439Z</ops:timestamp>\n                </ops:message>\n                <ops:message>\n                    <ops:message>Powering on VM 'VM-1'</ops:message>\n                    <ops:level>INFO</ops:level>\n                    <ops:timestamp>2019-12-05T09:57:20.439Z</ops:timestamp>\n                </ops:message>\n            </ops:messages>\n        </ops:action-object-status>\n    </ops:actionObjectStatuses>\n</ops:action-status-info>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/action-status-info"
                }
              }
            },
            "description": "The populated action information"
          }
        },

        "tags": [
          "Actions"
        ],
        "deprecated": false,
        "description": "The response contains information about the action status by the given taskId",
        "operationId": "getActionStatusUsingGET",
        "summary": "Get action status by the given task Id"
      }
    },
    "/api/adapterkinds": {
      "get": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Optional list of identifiers to filter by",
            "explode": true,
            "in": "query",
            "name": "adapterKindKey",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "Optional param that specifies whether need to report resource-kind-keys",
            "in": "query",
            "name": "retrieveResourceKindInfos",
            "required": false,
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"adapter-kind\" : [ {\n    \"key\" : \"VMWARE\",\n    \"name\" : \"vCenter Adapter\",\n    \"description\" : \"VMWare vCenter Adapter\",\n    \"adapterKindType\" : \"GENERAL\",\n    \"describeVersion\" : 100\n  }, {\n    \"key\" : \"vCenter Operations Adapter\",\n    \"name\" : \"vCenter Operations Adapter\",\n    \"description\" : \"vC Ops Adapter for self-monitoring\",\n    \"adapterKindType\" : \"GENERAL\",\n    \"describeVersion\" : 101\n  }, {\n    \"key\" : \"HttpPost\",\n    \"name\" : \"HTTP Post\",\n    \"adapterKindType\" : \"OPENAPI\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/adapter-kinds"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:adapter-kinds xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:adapter-kind key=\"VMWARE\">\n        <ops:name>vCenter Adapter</ops:name>\n        <ops:description>VMWare vCenter Adapter</ops:description>\n        <ops:adapterKindType>GENERAL</ops:adapterKindType>\n        <ops:describeVersion>100</ops:describeVersion>\n    </ops:adapter-kind>\n    <ops:adapter-kind key=\"vCenter Operations Adapter\">\n        <ops:name>vCenter Operations Adapter</ops:name>\n        <ops:description>vC Ops Adapter for self-monitoring</ops:description>\n        <ops:adapterKindType>GENERAL</ops:adapterKindType>\n        <ops:describeVersion>101</ops:describeVersion>\n    </ops:adapter-kind>\n    <ops:adapter-kind key=\"HttpPost\">\n        <ops:name>HTTP Post</ops:name>\n        <ops:description></ops:description>\n        <ops:adapterKindType>OPENAPI</ops:adapterKindType>\n    </ops:adapter-kind>\n</ops:adapter-kinds>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/adapter-kinds"
                }
              }
            },
            "description": "The Adapter Kinds defined within VMware Aria Operations"
          }
        },

        "tags": [
          "Adapter Kinds"
        ],
        "deprecated": false,
        "description": "Get Adapter Types identified by the specified identifiers or all if 'null' is specified",
        "operationId": "getAdapterTypesUsingGET",
        "summary": "Get Adapter Types"
      }
    },
    "/api/adapterkinds/{adapterKindKey}/resourcekinds/{resourceKindKey}": {
      "get": {
        "parameters": [
          {
            "description": "The Adapter Kind Identifier",
            "in": "path",
            "name": "adapterKindKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Resource Kind Identifier",
            "in": "path",
            "name": "resourceKindKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"key\" : \"VirtualMachine\",\n  \"name\" : \"VirtualMachine\",\n  \"adapterKind\" : \"VMWARE\"\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resource-kind"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:resource-kind key=\"VirtualMachine\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:name>VirtualMachine</ops:name>\n    <ops:adapterKind>VMWARE</ops:adapterKind>\n</ops:resource-kind>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resource-kind"
                }
              }
            },
            "description": "The Resource Kind"
          }
        },

        "tags": [
          "Adapter Kinds"
        ],
        "deprecated": false,
        "description": "Get a specific Resource Kind supported by a specific Adapter Kind",
        "operationId": "getResourceTypeForAdapterTypeUsingGET",
        "summary": "Get a specific Resource Kind supported by a specific Adapter Kind"
      }
    },
    "/api/adapterkinds/{adapterKindKey}/resourcekinds/{resourceKindKey}/properties": {
      "get": {
        "parameters": [
          {
            "description": "The Adapter Kind Identifier",
            "in": "path",
            "name": "adapterKindKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "Optional list of property names to filter by",
            "explode": true,
            "in": "query",
            "name": "properties",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The Resource Kind Identifier",
            "in": "path",
            "name": "resourceKindKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "Optional param that specifies whether need to report names in all localizations",
            "example": false,
            "in": "query",
            "name": "retrieveAllLocalizations",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "Optional param that specifies whether need to report attribute keys or no.",
            "example": false,
            "in": "query",
            "name": "retrieveAttributeKeys",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"resourceTypeAttributes\" : [ {\n    \"key\" : \"key-1\",\n    \"description\" : \"Some description\",\n    \"defaultMonitored\" : false,\n    \"rollupType\" : \"LATEST\",\n    \"instanceType\" : \"INSTANCED\",\n    \"unit\" : \"units\",\n    \"dataType\" : \"INTEGER\",\n    \"monitoring\" : true,\n    \"dtSubType\" : \"common\",\n    \"property\" : true\n  }, {\n    \"key\" : \"key-2\",\n    \"description\" : \"Some description\",\n    \"defaultMonitored\" : false,\n    \"rollupType\" : \"LATEST\",\n    \"instanceType\" : \"INSTANCED\",\n    \"unit\" : \"units\",\n    \"dataType\" : \"INTEGER\",\n    \"monitoring\" : true,\n    \"dtSubType\" : \"common\",\n    \"property\" : true\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resource-kind-attributes"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:resource-kind-attributes xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:resource-kind-attribute>\n        <ops:key>key-1</ops:key>\n        <ops:description>Some description</ops:description>\n        <ops:defaultMonitored>false</ops:defaultMonitored>\n        <ops:rollupType>LATEST</ops:rollupType>\n        <ops:instanceType>INSTANCED</ops:instanceType>\n        <ops:unit>units</ops:unit>\n        <ops:dataType>INTEGER</ops:dataType>\n        <ops:monitoring>true</ops:monitoring>\n        <ops:dtSubType>common</ops:dtSubType>\n        <ops:property>true</ops:property>\n    </ops:resource-kind-attribute>\n    <ops:resource-kind-attribute>\n        <ops:key>key-2</ops:key>\n        <ops:description>Some description</ops:description>\n        <ops:defaultMonitored>false</ops:defaultMonitored>\n        <ops:rollupType>LATEST</ops:rollupType>\n        <ops:instanceType>INSTANCED</ops:instanceType>\n        <ops:unit>units</ops:unit>\n        <ops:dataType>INTEGER</ops:dataType>\n        <ops:monitoring>true</ops:monitoring>\n        <ops:dtSubType>common</ops:dtSubType>\n        <ops:property>true</ops:property>\n    </ops:resource-kind-attribute>\n</ops:resource-kind-attributes>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resource-kind-attributes"
                }
              }
            },
            "description": "The Resource Attribute Type List"
          }
        },

        "tags": [
          "Adapter Kinds"
        ],
        "deprecated": false,
        "description": "Supports optional parameters to get specific Resource Type Properties",
        "operationId": "getResourceTypePropertiesForAdapterTypeUsingGET",
        "summary": "Get the meta-data for properties for a specific Resource Kind supported by a specific Adapter Kind"
      }
    },
    "/api/adapterkinds/{adapterKindKey}/resourcekinds/{resourceKindKey}/resources": {
      "get": {
        "parameters": [
          {
            "description": "The Adapter Kind Identifier",
            "in": "path",
            "name": "adapterKindKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key,value pairs representing the resource identifiers of a Resource",
            "in": "query",
            "name": "identifiers",
            "required": false,
            "schema": {
              "type": "map[string,string]"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "The Resource Name (partial match)",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number from which data needs to be displayed (0-based)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Expected number of entries per page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The Resource Kind Identifier",
            "in": "path",
            "name": "resourceKindKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resources"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resources"
                }
              }
            },
            "description": "The set of Resources"
          }
        },

        "tags": [
          "Adapter Kinds"
        ],
        "deprecated": false,
        "description": "Optionally filter these resources based on resource name. The resource name (specified as a query parameter) will be used for doing a partial match. However, if the resource identifiers and their values are specified, <i>name</i> is ignored and the API enforces all the mandatory (both uniquely identifying and required) identifiers are specified. This allows for looking up a single resource using a ResourceKey and allows the translation between a ResourceKey and a Resource UUID.\n\nExample how to use the <i>identifiers</i> parameter (currently it cannot be used in our Swagger documentation): \n<i> /api/adapterkinds/{adapterKindKey}/resourcekinds/{resourceKindKey}/resources?identifiers[key1]=value1&identifiers[key2]=value2</i>",
        "operationId": "getResourcesWithAdapterAndResourceKindUsingGET",
        "summary": "Query for Resources within a particular Adapter Kind and Resource Kind "
      }
    },
    "/api/adapterkinds/{adapterKindKey}/resourcekinds/{resourceKindKey}/statkeys": {
      "get": {
        "parameters": [
          {
            "description": "The Adapter Kind Identifier",
            "in": "path",
            "name": "adapterKindKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "Optional list of attribute-keys to filter by",
            "explode": true,
            "in": "query",
            "name": "attributeKeys",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The Resource Kind Identifier",
            "in": "path",
            "name": "resourceKindKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "Optional param that specifies whether need to report names in all localizations",
            "example": false,
            "in": "query",
            "name": "retrieveAllLocalizations",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "Optional param that specifies whether need to report attribute keys or no.",
            "example": false,
            "in": "query",
            "name": "retrieveAttributeKeys",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "Optional param that indicate whether need to return only stats or stats and properties together",
            "in": "query",
            "name": "statOnly",
            "required": false,
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"resourceTypeAttributes\" : [ {\n    \"key\" : \"key-1\",\n    \"description\" : \"Some description\",\n    \"defaultMonitored\" : false,\n    \"rollupType\" : \"LATEST\",\n    \"instanceType\" : \"INSTANCED\",\n    \"unit\" : \"units\",\n    \"dataType\" : \"INTEGER\",\n    \"monitoring\" : true,\n    \"dtSubType\" : \"common\",\n    \"property\" : true\n  }, {\n    \"key\" : \"key-2\",\n    \"description\" : \"Some description\",\n    \"defaultMonitored\" : false,\n    \"rollupType\" : \"LATEST\",\n    \"instanceType\" : \"INSTANCED\",\n    \"unit\" : \"units\",\n    \"dataType\" : \"INTEGER\",\n    \"monitoring\" : true,\n    \"dtSubType\" : \"common\",\n    \"property\" : true\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resource-kind-attributes"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:resource-kind-attributes xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:resource-kind-attribute>\n        <ops:key>key-1</ops:key>\n        <ops:description>Some description</ops:description>\n        <ops:defaultMonitored>false</ops:defaultMonitored>\n        <ops:rollupType>LATEST</ops:rollupType>\n        <ops:instanceType>INSTANCED</ops:instanceType>\n        <ops:unit>units</ops:unit>\n        <ops:dataType>INTEGER</ops:dataType>\n        <ops:monitoring>true</ops:monitoring>\n        <ops:dtSubType>common</ops:dtSubType>\n        <ops:property>true</ops:property>\n    </ops:resource-kind-attribute>\n    <ops:resource-kind-attribute>\n        <ops:key>key-2</ops:key>\n        <ops:description>Some description</ops:description>\n        <ops:defaultMonitored>false</ops:defaultMonitored>\n        <ops:rollupType>LATEST</ops:rollupType>\n        <ops:instanceType>INSTANCED</ops:instanceType>\n        <ops:unit>units</ops:unit>\n        <ops:dataType>INTEGER</ops:dataType>\n        <ops:monitoring>true</ops:monitoring>\n        <ops:dtSubType>common</ops:dtSubType>\n        <ops:property>true</ops:property>\n    </ops:resource-kind-attribute>\n</ops:resource-kind-attributes>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resource-kind-attributes"
                }
              }
            },
            "description": "The Resource Attribute Type List"
          }
        },

        "tags": [
          "Adapter Kinds"
        ],
        "deprecated": false,
        "description": "Supports optional parameters to get specific Resource Type Attributes",
        "operationId": "getResourceTypeAttributesForAdapterTypeUsingGET",
        "summary": "Get the meta-data for attributes (excluding properties) for a specific Resource Kind supported by a specific Adapter Kind"
      }
    },
    "/api/adapterkinds/{adapterKindKey}/resources": {
      "get": {
        "parameters": [
          {
            "description": "The Adapter Kind Identifier",
            "in": "path",
            "name": "adapterKindKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number from which data needs to be displayed (0-based)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Expected number of entries per page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resources"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resources"
                }
              }
            },
            "description": "The set of Resources"
          }
        },

        "tags": [
          "Adapter Kinds"
        ],
        "deprecated": false,
        "description": "This API provides the Resources by passing specified Adapter Kind Key",
        "operationId": "getResourcesWithAdapterKindUsingGET",
        "summary": "Query for Resources of a particular Adapter Kind"
      }
    },
    "/api/adapterkinds/{id}": {
      "get": {
        "parameters": [
          {
            "description": "The Adapter Kind Identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "Optional param that specifies whether need to report resource-kind-keys",
            "in": "query",
            "name": "retrieveResourceKindInfos",
            "required": false,
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"key\" : \"VMWARE\",\n  \"name\" : \"vCenter Adapter\",\n  \"description\" : \"VMWare vCenter Adapter\",\n  \"adapterKindType\" : \"GENERAL\",\n  \"describeVersion\" : 100\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/adapter-kind"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:adapter-kind key=\"VMWARE\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:name>vCenter Adapter</ops:name>\n    <ops:description>VMWare vCenter Adapter</ops:description>\n    <ops:adapterKindType>GENERAL</ops:adapterKindType>\n    <ops:describeVersion>100</ops:describeVersion>\n</ops:adapter-kind>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/adapter-kind"
                }
              }
            },
            "description": "The detailed information about the Adapter Kind"
          }
        },

        "tags": [
          "Adapter Kinds"
        ],
        "deprecated": false,
        "description": "This API provides the Adapter Kinds by passing specified identifier",
        "operationId": "getAdapterTypeUsingGET",
        "summary": "Get an Adapter Kind using the specified identifier"
      }
    },
    "/api/adapterkinds/{key}/resourcekinds": {
      "get": {
        "parameters": [
          {
            "description": "The identifier of the adapter kind",
            "in": "path",
            "name": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number from which data needs to be displayed (0-based)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Expected number of entries per page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "The Category to which a Resource Kind belongs to",
            "in": "query",
            "name": "resourceKindType",
            "required": false,
            "schema": {
              "enum": [
                "GENERAL",
                "BUSINESS_SERVICE",
                "TIER",
                "TAG",
                "ADAPTER_INSTANCE",
                "GROUP",
                "APPLICATION",
                "NONE"
              ],
              "type": "string"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "Optional param that specifies whether need to report names in all localizations",
            "example": false,
            "in": "query",
            "name": "retrieveAllLocalizations",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"adapterKind\" : \"VMWARE\",\n  \"resource-kind\" : [ {\n    \"key\" : \"Datacenter\",\n    \"name\" : \"Datacenter\",\n    \"adapterKind\" : \"VMWARE\"\n  }, {\n    \"key\" : \"ClusterComputeResource\",\n    \"name\" : \"ClusterComputeResource\",\n    \"adapterKind\" : \"VMWARE\"\n  }, {\n    \"key\" : \"HostSystem\",\n    \"name\" : \"HostSystem\",\n    \"adapterKind\" : \"VMWARE\"\n  }, {\n    \"key\" : \"ResourcePool\",\n    \"name\" : \"ResourcePool\",\n    \"adapterKind\" : \"VMWARE\"\n  }, {\n    \"key\" : \"VirtualMachine\",\n    \"name\" : \"VirtualMachine\",\n    \"adapterKind\" : \"VMWARE\"\n  }, {\n    \"key\" : \"Datastore\",\n    \"name\" : \"Datastore\",\n    \"adapterKind\" : \"VMWARE\"\n  }, {\n    \"key\" : \"VmwareDistributedVirtualSwitch\",\n    \"name\" : \"VmwareDistributedVirtualSwitch\",\n    \"adapterKind\" : \"VMWARE\"\n  }, {\n    \"key\" : \"StoragePod\",\n    \"name\" : \"StoragePod\",\n    \"adapterKind\" : \"VMWARE\"\n  }, {\n    \"key\" : \"Folder\",\n    \"name\" : \"Folder\",\n    \"adapterKind\" : \"VMWARE\"\n  }, {\n    \"key\" : \"VMwareAdapter Instance\",\n    \"name\" : \"VMwareAdapter Instance\",\n    \"adapterKind\" : \"VMWARE\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resource-kinds"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:resource-kinds xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:adapterKind>VMWARE</ops:adapterKind>\n    <ops:resource-kind key=\"Datacenter\">\n        <ops:name>Datacenter</ops:name>\n        <ops:adapterKind>VMWARE</ops:adapterKind>\n    </ops:resource-kind>\n    <ops:resource-kind key=\"ClusterComputeResource\">\n        <ops:name>ClusterComputeResource</ops:name>\n        <ops:adapterKind>VMWARE</ops:adapterKind>\n    </ops:resource-kind>\n    <ops:resource-kind key=\"HostSystem\">\n        <ops:name>HostSystem</ops:name>\n        <ops:adapterKind>VMWARE</ops:adapterKind>\n    </ops:resource-kind>\n    <ops:resource-kind key=\"ResourcePool\">\n        <ops:name>ResourcePool</ops:name>\n        <ops:adapterKind>VMWARE</ops:adapterKind>\n    </ops:resource-kind>\n    <ops:resource-kind key=\"VirtualMachine\">\n        <ops:name>VirtualMachine</ops:name>\n        <ops:adapterKind>VMWARE</ops:adapterKind>\n    </ops:resource-kind>\n    <ops:resource-kind key=\"Datastore\">\n        <ops:name>Datastore</ops:name>\n        <ops:adapterKind>VMWARE</ops:adapterKind>\n    </ops:resource-kind>\n    <ops:resource-kind key=\"VmwareDistributedVirtualSwitch\">\n        <ops:name>VmwareDistributedVirtualSwitch</ops:name>\n        <ops:adapterKind>VMWARE</ops:adapterKind>\n    </ops:resource-kind>\n    <ops:resource-kind key=\"StoragePod\">\n        <ops:name>StoragePod</ops:name>\n        <ops:adapterKind>VMWARE</ops:adapterKind>\n    </ops:resource-kind>\n    <ops:resource-kind key=\"Folder\">\n        <ops:name>Folder</ops:name>\n        <ops:adapterKind>VMWARE</ops:adapterKind>\n    </ops:resource-kind>\n    <ops:resource-kind key=\"VMwareAdapter Instance\">\n        <ops:name>VMwareAdapter Instance</ops:name>\n        <ops:adapterKind>VMWARE</ops:adapterKind>\n    </ops:resource-kind>\n</ops:resource-kinds>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resource-kinds"
                }
              }
            },
            "description": "The Resource Kinds of this Adapter"
          }
        },

        "tags": [
          "Adapter Kinds"
        ],
        "deprecated": false,
        "description": "Contains optional parameter that specifies whether there is a need to report names in all localizations",
        "operationId": "getResourceTypesForAdapterTypeUsingGET",
        "summary": "Get all the Resource Kinds supported by a specific Adapter Kind"
      }
    },
    "/api/adapters": {
      "get": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "If this parameter is specified, the API returns only instances of this Adapter Kind.",
            "in": "query",
            "name": "adapterKindKey",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"adapterInstancesInfoDto\" : [ {\n    \"resourceKey\" : {\n      \"name\" : \"VC Adapter for 10.20.88.111\",\n      \"adapterKindKey\" : \"VMWARE\",\n      \"resourceKindKey\" : \"Adapter\"\n    },\n    \"description\" : \"A vCenter Adapter Instance\",\n    \"collectorId\" : 1,\n    \"credentialInstanceId\" : \"73eebef4-e1e7-4844-acc3-d2ed7ffced16\",\n    \"id\" : \"bc61d62f-eb81-42ab-9698-6eee5da33fd1\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/adapter-instances"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:adapter-instances xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:adapter-instance id=\"b87d6e39-7b97-4198-9885-72aa9e73e04d\">\n        <ops:resourceKey>\n            <ops:name>VC Adapter for 10.20.88.111</ops:name>\n            <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n            <ops:resourceKindKey>Adapter</ops:resourceKindKey>\n            <ops:resourceIdentifiers/>\n        </ops:resourceKey>\n        <ops:description>A vCenter Adapter Instance</ops:description>\n        <ops:collectorId>1</ops:collectorId>\n        <ops:credentialInstanceId>d56273d0-d92d-4da5-899e-92f8cbb77668</ops:credentialInstanceId>\n    </ops:adapter-instance>\n</ops:adapter-instances>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/adapter-instances"
                }
              }
            },
            "description": "The adapter instances managed by the system."
          },
          "404": {
            "description": "No adapter instance is found with the specified identifier"
          }
        },

        "tags": [
          "Adapters"
        ],
        "deprecated": false,
        "description": "If Adapter Kind is passed as parameter, the API returns only the instances of that Adapter Kind",
        "operationId": "enumerateAdapterInstancesUsingGET",
        "summary": "Get all the adapter instance resources in the system"
      },
      "patch": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"resourceKey\" : {\n    \"name\" : \"VC Adapter for 10.20.88.111\",\n    \"adapterKindKey\" : \"VMWARE\",\n    \"resourceKindKey\" : \"Adapter\"\n  },\n  \"description\" : \"A vCenter Adapter Instance\",\n  \"collectorId\" : 1,\n  \"credentialInstanceId\" : \"f0f324ee-3e87-464a-a548-a178e3d0004b\",\n  \"id\" : \"2508cccc-ccb8-48bd-acfc-1ddb89f860ed\"\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/adapter-instance"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:adapter-instance id=\"00ed30e9-d859-4d2e-8cda-39f33922fee6\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:resourceKey>\n        <ops:name>VC Adapter for 10.20.88.111</ops:name>\n        <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n        <ops:resourceKindKey>Adapter</ops:resourceKindKey>\n        <ops:resourceIdentifiers/>\n    </ops:resourceKey>\n    <ops:description>A vCenter Adapter Instance</ops:description>\n    <ops:collectorId>1</ops:collectorId>\n    <ops:credentialInstanceId>d182e91d-df07-402f-9528-e9cdd3f77e00</ops:credentialInstanceId>\n</ops:adapter-instance>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/adapter-instance"
                }
              }
            },
            "description": "The adapter instance that was updated"
          },
          "400": {
            "description": "If <b>patch</b> 'adapter instance' failed. Typically the service will return extra information as to why update failed."
          }
        },

        "tags": [
          "Adapters"
        ],
        "deprecated": false,
        "description": "This is typically used to indicate VMware Aria operations that the certificates presented by \nthe (data source for which the adapter instance) was created are indeed valid                     \ncertificates.                                                                               \nTypically the response of the <code>POST /api/adapters</code> API in its entirety needs to be    \nsent as request body when making this <code>PATCH /api/adapters</code> API invocation. \n<b>NOTE:</b> In case the provided certificate list is empty, the adapter instance self-signed certificates will be reset.",
        "operationId": "patchAdapterInstanceUsingPATCH",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/adapter-instance"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/adapter-instance"
              }
            }
          },
          "description": "The adapter instance creation request.",
          "required": true
        },
        "summary": "Patch an Adapter Instance"
      },
      "post": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Indicates whether need to return default value or null in a result for\nidentifiers that have no/null value in request body",
            "example": false,
            "in": "query",
            "name": "extractIdentifierDefaults",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "Proceed with adapter instance creation even if connection is not established",
            "in": "query",
            "name": "force",
            "required": false,
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"resourceKey\" : {\n    \"name\" : \"VC Adapter for 10.20.88.111\",\n    \"adapterKindKey\" : \"VMWARE\",\n    \"resourceKindKey\" : \"Adapter\"\n  },\n  \"description\" : \"A vCenter Adapter Instance\",\n  \"collectorId\" : 1,\n  \"credentialInstanceId\" : \"fca06e6e-5447-48a3-9c86-3d726c31d680\",\n  \"id\" : \"ae53bd7e-7afe-4e89-9057-000b07d75c45\"\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/adapter-instance"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:adapter-instance id=\"5fa9f7d9-dcb7-4b84-807b-575b0256c6e7\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:resourceKey>\n        <ops:name>VC Adapter for 10.20.88.111</ops:name>\n        <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n        <ops:resourceKindKey>Adapter</ops:resourceKindKey>\n        <ops:resourceIdentifiers/>\n    </ops:resourceKey>\n    <ops:description>A vCenter Adapter Instance</ops:description>\n    <ops:collectorId>1</ops:collectorId>\n    <ops:credentialInstanceId>c92075b9-da64-4d94-a68e-65a919acbaa7</ops:credentialInstanceId>\n</ops:adapter-instance>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/adapter-instance"
                }
              }
            },
            "description": "The adapter instance that was created"
          },
          "400": {
            "description": "If <b>create</b> 'adapter instance' failed. Typically the service will return extra information as to why the creation failed."
          }
        },

        "tags": [
          "Adapters"
        ],
        "deprecated": false,
        "description": "Pass the not-required parameters to indicate whether need to return default value or null in a result for identifiers that have no/null value in request body and continue instantiating adapter even if no connection is established",
        "operationId": "createAdapterInstanceUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create-adapter-instance"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/create-adapter-instance"
              }
            }
          },
          "description": "The adapter instance creation request",
          "required": true
        },
        "summary": "Create an Adapter Instance"
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"resourceKey\" : {\n    \"name\" : \"VC Adapter for 10.20.88.111\",\n    \"adapterKindKey\" : \"VMWARE\",\n    \"resourceKindKey\" : \"Adapter\"\n  },\n  \"description\" : \"A vCenter Adapter Instance\",\n  \"collectorId\" : 1,\n  \"credentialInstanceId\" : \"419ba334-10d2-45a8-b280-dc522a5d396b\",\n  \"id\" : \"b622f818-b282-4e72-afbd-0d6b0490aca7\"\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/adapter-instance"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:adapter-instance id=\"809a8c99-d7f3-4721-a8ef-722e48219f00\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:resourceKey>\n        <ops:name>VC Adapter for 10.20.88.111</ops:name>\n        <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n        <ops:resourceKindKey>Adapter</ops:resourceKindKey>\n        <ops:resourceIdentifiers/>\n    </ops:resourceKey>\n    <ops:description>A vCenter Adapter Instance</ops:description>\n    <ops:collectorId>1</ops:collectorId>\n    <ops:credentialInstanceId>54a0c04d-4468-4276-92ed-5b7699677778</ops:credentialInstanceId>\n</ops:adapter-instance>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/adapter-instance"
                }
              }
            },
            "description": "The adapter instance that was updated"
          },
          "400": {
            "description": "If <b>update</b> 'adapter instance' failed. Typically the service will return extra information as to why update failed."
          }
        },

        "tags": [
          "Adapters"
        ],
        "deprecated": false,
        "description": "The request body can accept a collectorId or a collectorGroupId, but not both.",
        "operationId": "updateAdapterInstanceUsingPUT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/adapter-instance"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/adapter-instance"
              }
            }
          },
          "description": "The adapter instance request for the update",
          "required": true
        },
        "summary": "Update an Adapter Instance"
      }
    },
    "/api/adapters/testConnection": {
      "patch": {
        "responses": {
          "200": {
            "description": "The connection is successful."
          },
          "400": {
            "description": "If <b>Patch</b> 'adapter instance connection' failed. Typically the service will return extra information as to why update failed."
          }
        },

        "tags": [
          "Adapters"
        ],
        "deprecated": false,
        "description": "This is typically used to indicate VMware Aria operations that the certificates presented by \nthe (data source for which the adapter instance) was tested are indeed valid                      \ncertificates.                                                                              \nTypically the response of the <code>POST /api/adapters</code> API in its entirety needs to be    \nsent as request body when making this <code>PATCH /api/adapters</code> API invocation.    ",
        "operationId": "patchTestConnectionUsingPATCH",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/adapter-instance"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/adapter-instance"
              }
            }
          },
          "description": "The adapter instance connection request",
          "required": true
        },
        "summary": "Patch an Adapter Instance Connection"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"resourceKey\" : {\n    \"name\" : \"VC Adapter Instance\",\n    \"adapterKindKey\" : \"VMWARE\",\n    \"resourceKindKey\" : \"VMwareAdapter Instance\"\n  },\n  \"description\" : \"A vCenter Adapter Instance\",\n  \"collectorId\" : 1,\n  \"credentialInstanceId\" : \"28ce0cae-6a06-444f-afdd-f4fc7f1207a7\",\n  \"adapter-certificates\" : [ {\n    \"thumbprint\" : \"26df0597-8418-459d-8a97-089cf4bce019\",\n    \"certificateDetails\" : \"Issued by VMware, Inc. Expires: 01/01/2020\"\n  } ],\n  \"id\" : \"b660f346-9404-4b2f-80d3-14bdbf0fe38d\"\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/adapter-instance"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:adapter-instance id=\"0ec9b2fa-3776-4569-884a-388048c8f81d\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:resourceKey>\n        <ops:name>VC Adapter Instance</ops:name>\n        <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n        <ops:resourceKindKey>VMwareAdapter Instance</ops:resourceKindKey>\n        <ops:resourceIdentifiers/>\n    </ops:resourceKey>\n    <ops:description>A vCenter Adapter Instance</ops:description>\n    <ops:collectorId>1</ops:collectorId>\n    <ops:credentialInstanceId>e6223e2d-5f6e-419c-9ef6-499f0533e2de</ops:credentialInstanceId>\n    <ops:adapter-certificates>\n        <ops:adapter-certificate>\n            <ops:thumbprint>e1c64a9d-31a9-42c1-abcd-ed543870bd78</ops:thumbprint>\n            <ops:certificateDetails>Issued by VMware, Inc. Expires: 01/01/2020</ops:certificateDetails>\n        </ops:adapter-certificate>\n    </ops:adapter-certificates>\n</ops:adapter-instance>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/adapter-instance"
                }
              }
            },
            "description": "The adapter instance that was created"
          },
          "400": {
            "description": "If <b>Test</b> 'adapter instance connection' failed. Typically the service will return extra information as to why the creation failed."
          }
        },

        "tags": [
          "Adapters"
        ],
        "deprecated": false,
        "description": "Test Adapter Instance connection",
        "operationId": "testConnectionUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create-adapter-instance"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/create-adapter-instance"
              }
            }
          },
          "description": "The adapter instance connection request",
          "required": true
        },
        "summary": "Test Adapter Instance connection"
      }
    },
    "/api/adapters/{adapterId}": {
      "delete": {
        "parameters": [
          {
            "description": "The identifier of the adapter instance.",
            "in": "path",
            "name": "adapterId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "If set to true, resources discovered by this adapter instance would be deleted as well.",
            "example": false,
            "in": "query",
            "name": "deleteResources",
            "required": true,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The adapter instance is deleted successfully"
          },
          "404": {
            "description": "No adapter instance is found with the specified identifier."
          }
        },

        "tags": [
          "Adapters"
        ],
        "deprecated": false,
        "description": "<b>NOTE:</b> Deleting an adapter instance is <em>not synchronous.</em>",
        "operationId": "deleteAdapterInstanceUsingDELETE",
        "summary": "Delete an Adapter Instance"
      },
      "get": {
        "parameters": [
          {
            "description": "The identifier of the adapter instance in UUID format.",
            "in": "path",
            "name": "adapterId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"resourceKey\" : {\n    \"name\" : \"VC Adapter for 10.20.88.111\",\n    \"adapterKindKey\" : \"VMWARE\",\n    \"resourceKindKey\" : \"Adapter\"\n  },\n  \"description\" : \"A vCenter Adapter Instance\",\n  \"collectorId\" : 1,\n  \"credentialInstanceId\" : \"339ae4d3-e920-4a3f-a3d0-ddc4d4f96209\",\n  \"id\" : \"823b6a0e-d5b3-44fc-8621-dba4ee85a905\"\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/adapter-instance"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:adapter-instance id=\"d0229f76-de6a-4975-9d36-dea8b796671c\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:resourceKey>\n        <ops:name>VC Adapter for 10.20.88.111</ops:name>\n        <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n        <ops:resourceKindKey>Adapter</ops:resourceKindKey>\n        <ops:resourceIdentifiers/>\n    </ops:resourceKey>\n    <ops:description>A vCenter Adapter Instance</ops:description>\n    <ops:collectorId>1</ops:collectorId>\n    <ops:credentialInstanceId>4c79b6ac-f507-4864-839b-4570bcaeccdb</ops:credentialInstanceId>\n</ops:adapter-instance>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/adapter-instance"
                }
              }
            },
            "description": "The Adapter Instance for the specified UUID"
          },
          "404": {
            "description": "No adapter instance is found with the specified identifier."
          }
        },

        "tags": [
          "Adapters"
        ],
        "deprecated": false,
        "description": "Returns a specific adapter instance identified by the specified UUID.",
        "operationId": "getAdapterInstanceUsingGET",
        "summary": "Look up a single adapter instance using an identifier"
      }
    },
    "/api/adapters/{adapterId}/maintained": {
      "delete": {
        "parameters": [
          {
            "description": "The identifier of the adapter instance.",
            "in": "path",
            "name": "adapterId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The adapter instance is marked as being STARTED successfully"
          },
          "404": {
            "description": "No adapter instance is found with the specified identifier"
          }
        },

        "tags": [
          "Adapters"
        ],
        "deprecated": false,
        "description": "Removes the adapter instance from being in an maintenance window. The adapter instance will be notified to start collection process immediately.",
        "operationId": "unmarkAdapterInstanceAsBeingMaintainedUsingDELETE",
        "summary": "Mark the adapter instance as being STARTED"
      },
      "put": {
        "parameters": [
          {
            "description": "The identifier of the adapter instance.",
            "in": "path",
            "name": "adapterId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "The duration in minutes for which this resource will not be monitored.",
            "in": "query",
            "name": "duration",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The adapter instance is marked as being MAINTAINED successfully"
          },
          "404": {
            "description": "No adapter instance is found with the specified identifier"
          }
        },

        "tags": [
          "Adapters"
        ],
        "deprecated": false,
        "description": "After the duration expires, the adapter instance state is automatically set to <b>STARTED</b>.",
        "operationId": "markAdapterInstanceAsBeingMaintainedUsingPUT",
        "summary": "Mark the adapter instance as being MAINTAINED for the given duration"
      }
    },
    "/api/adapters/{adapterId}/monitoringstate/start": {
      "put": {
        "parameters": [
          {
            "description": "The identifier of the adapter instance.",
            "in": "path",
            "name": "adapterId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The adapter instance is started successfully"
          }
        },

        "tags": [
          "Adapters"
        ],
        "deprecated": false,
        "description": "Start the adapter instance from monitoring its resources",
        "operationId": "startMonitoringResourcesOfAdapterInstanceUsingPUT",
        "summary": "Start the adapter instance from monitoring its resources"
      }
    },
    "/api/adapters/{adapterId}/monitoringstate/stop": {
      "put": {
        "parameters": [
          {
            "description": "The identifier of the adapter instance.",
            "in": "path",
            "name": "adapterId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The adapter instance is stopped successfully"
          }
        },

        "tags": [
          "Adapters"
        ],
        "deprecated": false,
        "description": "Stop the adapter instance from monitoring its resources",
        "operationId": "stopMonitoringResourcesOfAdapterInstanceUsingPUT",
        "summary": "Stop the adapter instance from monitoring its resources"
      }
    },
    "/api/adapters/{adapterId}/resources": {
      "get": {
        "parameters": [
          {
            "description": "The identifier of the adapter instance.",
            "in": "path",
            "name": "adapterId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Page number from which data needs to be displayed (0-based)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Expected number of entries per page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resources"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resources"
                }
              }
            },
            "description": "The list of resources reported by this adapter"
          },
          "404": {
            "description": "No adapter instance is found with the specified identifier"
          }
        },

        "tags": [
          "Adapters"
        ],
        "deprecated": false,
        "description": "Get all resources that are managed by specific Adapter Instance",
        "operationId": "getResourcesOfAdapterInstanceUsingGET",
        "summary": "Enumerate all resources managed by an adapter instance"
      }
    },
    "/api/alertdefinitions": {
      "get": {
        "parameters": [
          {
            "description": "The Adapter Kind key of the Alert Definitions to search for",
            "in": "query",
            "name": "adapterKind",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier(s) of the Alert Definitions to search for.\nDo not specify <i>adapterKind</i> or <i>resourceKind</i> if searching by the identifier",
            "explode": true,
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Page number from which data needs to be displayed (0-based)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Expected number of entries per page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The Resource Kind key of the Alert Definitions to search for",
            "in": "query",
            "name": "resourceKind",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"alertDefinitions\" : [ {\n    \"id\" : \"f080147f-c60d-4f08-8801-b602e2931b6f\",\n    \"name\" : \"High CPU/Memory Usage\",\n    \"description\" : \"CPU or MEM usage too High\",\n    \"adapterKindKey\" : \"VMWARE\",\n    \"resourceKindKey\" : \"HostSystem\",\n    \"waitCycles\" : 3,\n    \"cancelCycles\" : 2,\n    \"type\" : 0,\n    \"subType\" : 0,\n    \"states\" : [ {\n      \"severity\" : \"WARNING\",\n      \"base-symptom-set\" : {\n        \"type\" : \"SYMPTOM_SET_COMPOSITE\",\n        \"operator\" : \"AND\",\n        \"symptom-sets\" : [ {\n          \"type\" : \"SYMPTOM_SET\",\n          \"adapterKindKey\" : \"VMWARE\",\n          \"resourceKindKey\" : \"Datastore\",\n          \"relation\" : \"DESCENDANT\",\n          \"aggregation\" : \"ALL\",\n          \"symptomSetOperator\" : \"AND\",\n          \"symptomDefinitionIds\" : [ \"Symptom5\", \"!Symptom6\" ],\n          \"alertConditions\" : [ {\n            \"waitCycles\" : 5,\n            \"cancelCycles\" : 5,\n            \"severity\" : \"CRITICAL\",\n            \"condition\" : {\n              \"type\" : \"CONDITION_HT\",\n              \"key\" : \"cpu|demandmhz\",\n              \"operator\" : \"GT_EQ\",\n              \"valueType\" : \"NUMERIC\",\n              \"instanced\" : false,\n              \"targetKey\" : \"cpu|availablemhz\",\n              \"thresholdType\" : \"STATKEY\"\n            }\n          } ]\n        }, {\n          \"type\" : \"SYMPTOM_SET\",\n          \"relation\" : \"SELF\",\n          \"aggregation\" : \"ALL\",\n          \"symptomSetOperator\" : \"OR\",\n          \"symptomDefinitionIds\" : [ \"Symptom100\", \"Symptom101\" ]\n        } ]\n      },\n      \"impact\" : {\n        \"impactType\" : \"BADGE\",\n        \"detail\" : \"health\"\n      }\n    } ]\n  }, {\n    \"id\" : \"AlertDefinition-147ff080-8801-c60d-4f08-931b6fb602e2\",\n    \"name\" : \"MyAlertDefinition\",\n    \"description\" : \"An Alert Definition associated with ESX host\",\n    \"adapterKindKey\" : \"VMWARE\",\n    \"resourceKindKey\" : \"HostSystem\",\n    \"waitCycles\" : 3,\n    \"cancelCycles\" : 2,\n    \"type\" : 0,\n    \"subType\" : 0,\n    \"states\" : [ {\n      \"severity\" : \"CRITICAL\",\n      \"base-symptom-set\" : {\n        \"type\" : \"SYMPTOM_SET\",\n        \"relation\" : \"SELF\",\n        \"aggregation\" : \"ALL\",\n        \"symptomDefinitionIds\" : [ \"SymptomDefinition-5\" ]\n      },\n      \"impact\" : {\n        \"impactType\" : \"BADGE\",\n        \"detail\" : \"Health\"\n      }\n    } ]\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert-definitions"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:alert-definitions xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:alert-definition>\n        <ops:id>f080147f-c60d-4f08-8801-b602e2931b6f</ops:id>\n        <ops:name>High CPU/Memory Usage</ops:name>\n        <ops:description>CPU or MEM usage too High</ops:description>\n        <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n        <ops:resourceKindKey>HostSystem</ops:resourceKindKey>\n        <ops:waitCycles>3</ops:waitCycles>\n        <ops:cancelCycles>2</ops:cancelCycles>\n        <ops:type>0</ops:type>\n        <ops:subType>0</ops:subType>\n        <ops:states>\n            <ops:state severity=\"WARNING\">\n                <ops:composite-symptom-set>\n                    <ops:operator>AND</ops:operator>\n                    <ops:symptom-sets>\n                        <ops:symptom-set>\n                            <ops:symptomDefinitionIds>\n                                <ops:symptomDefinitionId>Symptom5</ops:symptomDefinitionId>\n                                <ops:symptomDefinitionId>!Symptom6</ops:symptomDefinitionId>\n                            </ops:symptomDefinitionIds>\n                            <ops:alertConditions>\n                                <ops:alertCondition>\n                                    <ops:waitCycles>5</ops:waitCycles>\n                                    <ops:cancelCycles>5</ops:cancelCycles>\n                                    <ops:severity>CRITICAL</ops:severity>\n                                    <ops:condition xsi:type=\"ops:htCondition\">\n                                        <ops:key>cpu|demandmhz</ops:key>\n                                        <ops:operator>GT_EQ</ops:operator>\n                                        <ops:valueType>NUMERIC</ops:valueType>\n                                        <ops:instanced>false</ops:instanced>\n                                        <ops:targetKey>cpu|availablemhz</ops:targetKey>\n                                        <ops:thresholdType>STATKEY</ops:thresholdType>\n                                    </ops:condition>\n                                </ops:alertCondition>\n                            </ops:alertConditions>\n                            <ops:relation>DESCENDANT</ops:relation>\n                            <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n                            <ops:resourceKindKey>Datastore</ops:resourceKindKey>\n                            <ops:aggregation>ALL</ops:aggregation>\n                            <ops:symptomSetOperator>AND</ops:symptomSetOperator>\n                        </ops:symptom-set>\n                        <ops:symptom-set>\n                            <ops:symptomDefinitionIds>\n                                <ops:symptomDefinitionId>Symptom100</ops:symptomDefinitionId>\n                                <ops:symptomDefinitionId>Symptom101</ops:symptomDefinitionId>\n                            </ops:symptomDefinitionIds>\n                            <ops:relation>SELF</ops:relation>\n                            <ops:aggregation>ALL</ops:aggregation>\n                            <ops:symptomSetOperator>OR</ops:symptomSetOperator>\n                        </ops:symptom-set>\n                    </ops:symptom-sets>\n                </ops:composite-symptom-set>\n                <ops:impact>\n                    <ops:impactType>BADGE</ops:impactType>\n                    <ops:detail>health</ops:detail>\n                </ops:impact>\n            </ops:state>\n        </ops:states>\n    </ops:alert-definition>\n    <ops:alert-definition>\n        <ops:id>AlertDefinition-147ff080-8801-c60d-4f08-931b6fb602e2</ops:id>\n        <ops:name>MyAlertDefinition</ops:name>\n        <ops:description>An Alert Definition associated with ESX host</ops:description>\n        <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n        <ops:resourceKindKey>HostSystem</ops:resourceKindKey>\n        <ops:waitCycles>3</ops:waitCycles>\n        <ops:cancelCycles>2</ops:cancelCycles>\n        <ops:type>0</ops:type>\n        <ops:subType>0</ops:subType>\n        <ops:states>\n            <ops:state severity=\"CRITICAL\">\n                <ops:symptom-set>\n                    <ops:symptomDefinitionIds>\n                        <ops:symptomDefinitionId>SymptomDefinition-5</ops:symptomDefinitionId>\n                    </ops:symptomDefinitionIds>\n                    <ops:relation>SELF</ops:relation>\n                    <ops:aggregation>ALL</ops:aggregation>\n                </ops:symptom-set>\n                <ops:impact>\n                    <ops:impactType>BADGE</ops:impactType>\n                    <ops:detail>Health</ops:detail>\n                </ops:impact>\n            </ops:state>\n        </ops:states>\n    </ops:alert-definition>\n</ops:alert-definitions>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert-definitions"
                }
              }
            },
            "description": "The collection of Alert Definitions"
          }
        },

        "tags": [
          "Alerts"
        ],
        "deprecated": false,
        "description": "If the search criteria is not satisfied, the API will return all Alert Definitions",
        "operationId": "getAlertDefinitionsUsingGET",
        "summary": "Get collection of Alert Definitions matching the search criteria specified"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"f080147f-c60d-4f08-8801-b602e2931b6f\",\n  \"name\" : \"High CPU/Memory Usage\",\n  \"description\" : \"CPU or MEM usage too High\",\n  \"adapterKindKey\" : \"VMWARE\",\n  \"resourceKindKey\" : \"HostSystem\",\n  \"waitCycles\" : 3,\n  \"cancelCycles\" : 2,\n  \"type\" : 0,\n  \"subType\" : 0,\n  \"states\" : [ {\n    \"severity\" : \"WARNING\",\n    \"base-symptom-set\" : {\n      \"type\" : \"SYMPTOM_SET_COMPOSITE\",\n      \"operator\" : \"AND\",\n      \"symptom-sets\" : [ {\n        \"type\" : \"SYMPTOM_SET\",\n        \"adapterKindKey\" : \"VMWARE\",\n        \"resourceKindKey\" : \"Datastore\",\n        \"relation\" : \"DESCENDANT\",\n        \"aggregation\" : \"ALL\",\n        \"symptomSetOperator\" : \"AND\",\n        \"symptomDefinitionIds\" : [ \"Symptom5\", \"!Symptom6\" ],\n        \"alertConditions\" : [ {\n          \"waitCycles\" : 5,\n          \"cancelCycles\" : 5,\n          \"severity\" : \"CRITICAL\",\n          \"condition\" : {\n            \"type\" : \"CONDITION_HT\",\n            \"key\" : \"cpu|demandmhz\",\n            \"operator\" : \"GT_EQ\",\n            \"valueType\" : \"NUMERIC\",\n            \"instanced\" : false,\n            \"targetKey\" : \"cpu|availablemhz\",\n            \"thresholdType\" : \"STATKEY\"\n          }\n        } ]\n      }, {\n        \"type\" : \"SYMPTOM_SET\",\n        \"relation\" : \"SELF\",\n        \"aggregation\" : \"ALL\",\n        \"symptomSetOperator\" : \"OR\",\n        \"symptomDefinitionIds\" : [ \"Symptom100\", \"Symptom101\" ]\n      } ]\n    },\n    \"impact\" : {\n      \"impactType\" : \"BADGE\",\n      \"detail\" : \"health\"\n    }\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert-definition"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:alert-definition xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:id>f080147f-c60d-4f08-8801-b602e2931b6f</ops:id>\n    <ops:name>High CPU/Memory Usage</ops:name>\n    <ops:description>CPU or MEM usage too High</ops:description>\n    <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n    <ops:resourceKindKey>HostSystem</ops:resourceKindKey>\n    <ops:waitCycles>3</ops:waitCycles>\n    <ops:cancelCycles>2</ops:cancelCycles>\n    <ops:type>0</ops:type>\n    <ops:subType>0</ops:subType>\n    <ops:states>\n        <ops:state severity=\"WARNING\">\n            <ops:composite-symptom-set>\n                <ops:operator>AND</ops:operator>\n                <ops:symptom-sets>\n                    <ops:symptom-set>\n                        <ops:symptomDefinitionIds>\n                            <ops:symptomDefinitionId>Symptom5</ops:symptomDefinitionId>\n                            <ops:symptomDefinitionId>!Symptom6</ops:symptomDefinitionId>\n                        </ops:symptomDefinitionIds>\n                        <ops:alertConditions>\n                            <ops:alertCondition>\n                                <ops:waitCycles>5</ops:waitCycles>\n                                <ops:cancelCycles>5</ops:cancelCycles>\n                                <ops:severity>CRITICAL</ops:severity>\n                                <ops:condition xsi:type=\"ops:htCondition\">\n                                    <ops:key>cpu|demandmhz</ops:key>\n                                    <ops:operator>GT_EQ</ops:operator>\n                                    <ops:valueType>NUMERIC</ops:valueType>\n                                    <ops:instanced>false</ops:instanced>\n                                    <ops:targetKey>cpu|availablemhz</ops:targetKey>\n                                    <ops:thresholdType>STATKEY</ops:thresholdType>\n                                </ops:condition>\n                            </ops:alertCondition>\n                        </ops:alertConditions>\n                        <ops:relation>DESCENDANT</ops:relation>\n                        <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n                        <ops:resourceKindKey>Datastore</ops:resourceKindKey>\n                        <ops:aggregation>ALL</ops:aggregation>\n                        <ops:symptomSetOperator>AND</ops:symptomSetOperator>\n                    </ops:symptom-set>\n                    <ops:symptom-set>\n                        <ops:symptomDefinitionIds>\n                            <ops:symptomDefinitionId>Symptom100</ops:symptomDefinitionId>\n                            <ops:symptomDefinitionId>Symptom101</ops:symptomDefinitionId>\n                        </ops:symptomDefinitionIds>\n                        <ops:relation>SELF</ops:relation>\n                        <ops:aggregation>ALL</ops:aggregation>\n                        <ops:symptomSetOperator>OR</ops:symptomSetOperator>\n                    </ops:symptom-set>\n                </ops:symptom-sets>\n            </ops:composite-symptom-set>\n            <ops:impact>\n                <ops:impactType>BADGE</ops:impactType>\n                <ops:detail>health</ops:detail>\n            </ops:impact>\n        </ops:state>\n    </ops:states>\n</ops:alert-definition>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert-definition"
                }
              }
            },
            "description": "The created Alert Definition"
          }
        },

        "tags": [
          "Alerts"
        ],
        "deprecated": false,
        "description": "Once the Alert Definition is created, a unique identifier will be generated by the system for the Alert Definition",
        "operationId": "createAlertDefinitionUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/alert-definition"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/alert-definition"
              }
            }
          },
          "description": "The Alert Definition that needs to be created",
          "required": true
        },
        "summary": "Create an Alert Definition"
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"f080147f-c60d-4f08-8801-b602e2931b6f\",\n  \"name\" : \"High CPU/Memory Usage\",\n  \"description\" : \"CPU or MEM usage too High\",\n  \"adapterKindKey\" : \"VMWARE\",\n  \"resourceKindKey\" : \"HostSystem\",\n  \"waitCycles\" : 3,\n  \"cancelCycles\" : 2,\n  \"type\" : 0,\n  \"subType\" : 0,\n  \"states\" : [ {\n    \"severity\" : \"WARNING\",\n    \"base-symptom-set\" : {\n      \"type\" : \"SYMPTOM_SET_COMPOSITE\",\n      \"operator\" : \"AND\",\n      \"symptom-sets\" : [ {\n        \"type\" : \"SYMPTOM_SET\",\n        \"adapterKindKey\" : \"VMWARE\",\n        \"resourceKindKey\" : \"Datastore\",\n        \"relation\" : \"DESCENDANT\",\n        \"aggregation\" : \"ALL\",\n        \"symptomSetOperator\" : \"AND\",\n        \"symptomDefinitionIds\" : [ \"Symptom5\", \"!Symptom6\" ],\n        \"alertConditions\" : [ {\n          \"waitCycles\" : 5,\n          \"cancelCycles\" : 5,\n          \"severity\" : \"CRITICAL\",\n          \"condition\" : {\n            \"type\" : \"CONDITION_HT\",\n            \"key\" : \"cpu|demandmhz\",\n            \"operator\" : \"GT_EQ\",\n            \"valueType\" : \"NUMERIC\",\n            \"instanced\" : false,\n            \"targetKey\" : \"cpu|availablemhz\",\n            \"thresholdType\" : \"STATKEY\"\n          }\n        } ]\n      }, {\n        \"type\" : \"SYMPTOM_SET\",\n        \"relation\" : \"SELF\",\n        \"aggregation\" : \"ALL\",\n        \"symptomSetOperator\" : \"OR\",\n        \"symptomDefinitionIds\" : [ \"Symptom100\", \"Symptom101\" ]\n      } ]\n    },\n    \"impact\" : {\n      \"impactType\" : \"BADGE\",\n      \"detail\" : \"health\"\n    }\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert-definition"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:alert-definition xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:id>f080147f-c60d-4f08-8801-b602e2931b6f</ops:id>\n    <ops:name>High CPU/Memory Usage</ops:name>\n    <ops:description>CPU or MEM usage too High</ops:description>\n    <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n    <ops:resourceKindKey>HostSystem</ops:resourceKindKey>\n    <ops:waitCycles>3</ops:waitCycles>\n    <ops:cancelCycles>2</ops:cancelCycles>\n    <ops:type>0</ops:type>\n    <ops:subType>0</ops:subType>\n    <ops:states>\n        <ops:state severity=\"WARNING\">\n            <ops:composite-symptom-set>\n                <ops:operator>AND</ops:operator>\n                <ops:symptom-sets>\n                    <ops:symptom-set>\n                        <ops:symptomDefinitionIds>\n                            <ops:symptomDefinitionId>Symptom5</ops:symptomDefinitionId>\n                            <ops:symptomDefinitionId>!Symptom6</ops:symptomDefinitionId>\n                        </ops:symptomDefinitionIds>\n                        <ops:alertConditions>\n                            <ops:alertCondition>\n                                <ops:waitCycles>5</ops:waitCycles>\n                                <ops:cancelCycles>5</ops:cancelCycles>\n                                <ops:severity>CRITICAL</ops:severity>\n                                <ops:condition xsi:type=\"ops:htCondition\">\n                                    <ops:key>cpu|demandmhz</ops:key>\n                                    <ops:operator>GT_EQ</ops:operator>\n                                    <ops:valueType>NUMERIC</ops:valueType>\n                                    <ops:instanced>false</ops:instanced>\n                                    <ops:targetKey>cpu|availablemhz</ops:targetKey>\n                                    <ops:thresholdType>STATKEY</ops:thresholdType>\n                                </ops:condition>\n                            </ops:alertCondition>\n                        </ops:alertConditions>\n                        <ops:relation>DESCENDANT</ops:relation>\n                        <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n                        <ops:resourceKindKey>Datastore</ops:resourceKindKey>\n                        <ops:aggregation>ALL</ops:aggregation>\n                        <ops:symptomSetOperator>AND</ops:symptomSetOperator>\n                    </ops:symptom-set>\n                    <ops:symptom-set>\n                        <ops:symptomDefinitionIds>\n                            <ops:symptomDefinitionId>Symptom100</ops:symptomDefinitionId>\n                            <ops:symptomDefinitionId>Symptom101</ops:symptomDefinitionId>\n                        </ops:symptomDefinitionIds>\n                        <ops:relation>SELF</ops:relation>\n                        <ops:aggregation>ALL</ops:aggregation>\n                        <ops:symptomSetOperator>OR</ops:symptomSetOperator>\n                    </ops:symptom-set>\n                </ops:symptom-sets>\n            </ops:composite-symptom-set>\n            <ops:impact>\n                <ops:impactType>BADGE</ops:impactType>\n                <ops:detail>health</ops:detail>\n            </ops:impact>\n        </ops:state>\n    </ops:states>\n</ops:alert-definition>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert-definition"
                }
              }
            },
            "description": "The updated Alert Definition"
          },
          "404": {
            "description": "No Alert Definition has been found for it to be updated"
          }
        },

        "tags": [
          "Alerts"
        ],
        "deprecated": false,
        "description": "Update an existing Alert Definition",
        "operationId": "updateAlertDefinitionUsingPUT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/alert-definition"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/alert-definition"
              }
            }
          },
          "description": "The Alert Definition to update",
          "required": true
        },
        "summary": "Update an existing Alert Definition"
      }
    },
    "/api/alertdefinitions/query": {
      "post": {
        "parameters": [
          {
            "description": "Page number from which data needs to be displayed (0-based)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Expected number of entries per page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"alertDefinitions\" : [ {\n    \"id\" : \"f080147f-c60d-4f08-8801-b602e2931b6f\",\n    \"name\" : \"High CPU/Memory Usage\",\n    \"description\" : \"CPU or MEM usage too High\",\n    \"adapterKindKey\" : \"VMWARE\",\n    \"resourceKindKey\" : \"HostSystem\",\n    \"waitCycles\" : 3,\n    \"cancelCycles\" : 2,\n    \"type\" : 0,\n    \"subType\" : 0,\n    \"states\" : [ {\n      \"severity\" : \"WARNING\",\n      \"base-symptom-set\" : {\n        \"type\" : \"SYMPTOM_SET_COMPOSITE\",\n        \"operator\" : \"AND\",\n        \"symptom-sets\" : [ {\n          \"type\" : \"SYMPTOM_SET\",\n          \"adapterKindKey\" : \"VMWARE\",\n          \"resourceKindKey\" : \"Datastore\",\n          \"relation\" : \"DESCENDANT\",\n          \"aggregation\" : \"ALL\",\n          \"symptomSetOperator\" : \"AND\",\n          \"symptomDefinitionIds\" : [ \"Symptom5\", \"!Symptom6\" ],\n          \"alertConditions\" : [ {\n            \"waitCycles\" : 5,\n            \"cancelCycles\" : 5,\n            \"severity\" : \"CRITICAL\",\n            \"condition\" : {\n              \"type\" : \"CONDITION_HT\",\n              \"key\" : \"cpu|demandmhz\",\n              \"operator\" : \"GT_EQ\",\n              \"valueType\" : \"NUMERIC\",\n              \"instanced\" : false,\n              \"targetKey\" : \"cpu|availablemhz\",\n              \"thresholdType\" : \"STATKEY\"\n            }\n          } ]\n        }, {\n          \"type\" : \"SYMPTOM_SET\",\n          \"relation\" : \"SELF\",\n          \"aggregation\" : \"ALL\",\n          \"symptomSetOperator\" : \"OR\",\n          \"symptomDefinitionIds\" : [ \"Symptom100\", \"Symptom101\" ]\n        } ]\n      },\n      \"impact\" : {\n        \"impactType\" : \"BADGE\",\n        \"detail\" : \"health\"\n      }\n    } ]\n  }, {\n    \"id\" : \"AlertDefinition-147ff080-8801-c60d-4f08-931b6fb602e2\",\n    \"name\" : \"MyAlertDefinition\",\n    \"description\" : \"An Alert Definition associated with ESX host\",\n    \"adapterKindKey\" : \"VMWARE\",\n    \"resourceKindKey\" : \"HostSystem\",\n    \"waitCycles\" : 3,\n    \"cancelCycles\" : 2,\n    \"type\" : 0,\n    \"subType\" : 0,\n    \"states\" : [ {\n      \"severity\" : \"CRITICAL\",\n      \"base-symptom-set\" : {\n        \"type\" : \"SYMPTOM_SET\",\n        \"relation\" : \"SELF\",\n        \"aggregation\" : \"ALL\",\n        \"symptomDefinitionIds\" : [ \"SymptomDefinition-5\" ]\n      },\n      \"impact\" : {\n        \"impactType\" : \"BADGE\",\n        \"detail\" : \"Health\"\n      }\n    } ]\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert-definitions"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:alert-definitions xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:alert-definition>\n        <ops:id>f080147f-c60d-4f08-8801-b602e2931b6f</ops:id>\n        <ops:name>High CPU/Memory Usage</ops:name>\n        <ops:description>CPU or MEM usage too High</ops:description>\n        <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n        <ops:resourceKindKey>HostSystem</ops:resourceKindKey>\n        <ops:waitCycles>3</ops:waitCycles>\n        <ops:cancelCycles>2</ops:cancelCycles>\n        <ops:type>0</ops:type>\n        <ops:subType>0</ops:subType>\n        <ops:states>\n            <ops:state severity=\"WARNING\">\n                <ops:composite-symptom-set>\n                    <ops:operator>AND</ops:operator>\n                    <ops:symptom-sets>\n                        <ops:symptom-set>\n                            <ops:symptomDefinitionIds>\n                                <ops:symptomDefinitionId>Symptom5</ops:symptomDefinitionId>\n                                <ops:symptomDefinitionId>!Symptom6</ops:symptomDefinitionId>\n                            </ops:symptomDefinitionIds>\n                            <ops:alertConditions>\n                                <ops:alertCondition>\n                                    <ops:waitCycles>5</ops:waitCycles>\n                                    <ops:cancelCycles>5</ops:cancelCycles>\n                                    <ops:severity>CRITICAL</ops:severity>\n                                    <ops:condition xsi:type=\"ops:htCondition\">\n                                        <ops:key>cpu|demandmhz</ops:key>\n                                        <ops:operator>GT_EQ</ops:operator>\n                                        <ops:valueType>NUMERIC</ops:valueType>\n                                        <ops:instanced>false</ops:instanced>\n                                        <ops:targetKey>cpu|availablemhz</ops:targetKey>\n                                        <ops:thresholdType>STATKEY</ops:thresholdType>\n                                    </ops:condition>\n                                </ops:alertCondition>\n                            </ops:alertConditions>\n                            <ops:relation>DESCENDANT</ops:relation>\n                            <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n                            <ops:resourceKindKey>Datastore</ops:resourceKindKey>\n                            <ops:aggregation>ALL</ops:aggregation>\n                            <ops:symptomSetOperator>AND</ops:symptomSetOperator>\n                        </ops:symptom-set>\n                        <ops:symptom-set>\n                            <ops:symptomDefinitionIds>\n                                <ops:symptomDefinitionId>Symptom100</ops:symptomDefinitionId>\n                                <ops:symptomDefinitionId>Symptom101</ops:symptomDefinitionId>\n                            </ops:symptomDefinitionIds>\n                            <ops:relation>SELF</ops:relation>\n                            <ops:aggregation>ALL</ops:aggregation>\n                            <ops:symptomSetOperator>OR</ops:symptomSetOperator>\n                        </ops:symptom-set>\n                    </ops:symptom-sets>\n                </ops:composite-symptom-set>\n                <ops:impact>\n                    <ops:impactType>BADGE</ops:impactType>\n                    <ops:detail>health</ops:detail>\n                </ops:impact>\n            </ops:state>\n        </ops:states>\n    </ops:alert-definition>\n    <ops:alert-definition>\n        <ops:id>AlertDefinition-147ff080-8801-c60d-4f08-931b6fb602e2</ops:id>\n        <ops:name>MyAlertDefinition</ops:name>\n        <ops:description>An Alert Definition associated with ESX host</ops:description>\n        <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n        <ops:resourceKindKey>HostSystem</ops:resourceKindKey>\n        <ops:waitCycles>3</ops:waitCycles>\n        <ops:cancelCycles>2</ops:cancelCycles>\n        <ops:type>0</ops:type>\n        <ops:subType>0</ops:subType>\n        <ops:states>\n            <ops:state severity=\"CRITICAL\">\n                <ops:symptom-set>\n                    <ops:symptomDefinitionIds>\n                        <ops:symptomDefinitionId>SymptomDefinition-5</ops:symptomDefinitionId>\n                    </ops:symptomDefinitionIds>\n                    <ops:relation>SELF</ops:relation>\n                    <ops:aggregation>ALL</ops:aggregation>\n                </ops:symptom-set>\n                <ops:impact>\n                    <ops:impactType>BADGE</ops:impactType>\n                    <ops:detail>Health</ops:detail>\n                </ops:impact>\n            </ops:state>\n        </ops:states>\n    </ops:alert-definition>\n</ops:alert-definitions>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert-definitions"
                }
              }
            },
            "description": "The collection of Alert Definitions"
          }
        },

        "tags": [
          "Alerts"
        ],
        "deprecated": false,
        "operationId": "queryAlertDefinitionsUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/alert-definition-query"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/alert-definition-query"
              }
            }
          },
          "description": "The alert definition query"
        },
        "summary": "Query collection of alert definitions matching the search criteria specified"
      }
    },
    "/api/alertdefinitions/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The id of the Alert Definition to delete",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The alert definition is deleted successfully"
          },
          "404": {
            "description": "No Alert Definition has been found for the identifier specified"
          }
        },

        "tags": [
          "Alerts"
        ],
        "deprecated": false,
        "description": "Using this method, you can delete a particular <i>alert definition</i>",
        "operationId": "deleteAlertDefinitionUsingDELETE",
        "summary": "Delete an Alert Definition"
      },
      "get": {
        "parameters": [
          {
            "description": "The id of the Alert Definition",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"AlertDefinition-147ff080-8801-c60d-4f08-931b6fb602e2\",\n  \"name\" : \"MyAlertDefinition\",\n  \"description\" : \"An Alert Definition associated with ESX host\",\n  \"adapterKindKey\" : \"VMWARE\",\n  \"resourceKindKey\" : \"HostSystem\",\n  \"waitCycles\" : 3,\n  \"cancelCycles\" : 2,\n  \"type\" : 0,\n  \"subType\" : 0,\n  \"states\" : [ {\n    \"severity\" : \"CRITICAL\",\n    \"base-symptom-set\" : {\n      \"type\" : \"SYMPTOM_SET\",\n      \"relation\" : \"SELF\",\n      \"aggregation\" : \"ALL\",\n      \"symptomDefinitionIds\" : [ \"SymptomDefinition-5\" ]\n    },\n    \"impact\" : {\n      \"impactType\" : \"BADGE\",\n      \"detail\" : \"Health\"\n    }\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert-definition"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:alert-definition xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:id>AlertDefinition-147ff080-8801-c60d-4f08-931b6fb602e2</ops:id>\n    <ops:name>MyAlertDefinition</ops:name>\n    <ops:description>An Alert Definition associated with ESX host</ops:description>\n    <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n    <ops:resourceKindKey>HostSystem</ops:resourceKindKey>\n    <ops:waitCycles>3</ops:waitCycles>\n    <ops:cancelCycles>2</ops:cancelCycles>\n    <ops:type>0</ops:type>\n    <ops:subType>0</ops:subType>\n    <ops:states>\n        <ops:state severity=\"CRITICAL\">\n            <ops:symptom-set>\n                <ops:symptomDefinitionIds>\n                    <ops:symptomDefinitionId>SymptomDefinition-5</ops:symptomDefinitionId>\n                </ops:symptomDefinitionIds>\n                <ops:relation>SELF</ops:relation>\n                <ops:aggregation>ALL</ops:aggregation>\n            </ops:symptom-set>\n            <ops:impact>\n                <ops:impactType>BADGE</ops:impactType>\n                <ops:detail>Health</ops:detail>\n            </ops:impact>\n        </ops:state>\n    </ops:states>\n</ops:alert-definition>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert-definition"
                }
              }
            },
            "description": "The Alert Definition corresponding to the identifier specified"
          },
          "404": {
            "description": "No Alert Definition has been found for the identifier specified"
          }
        },

        "tags": [
          "Alerts"
        ],
        "deprecated": false,
        "description": "Using this method, you can look up details about a particular <i>alert definition</i>",
        "operationId": "getAlertDefinitionByIdUsingGET",
        "summary": "Get the Alert Definition using the identifier specified"
      }
    },
    "/api/alertdefinitions/{id}/disable": {
      "put": {
        "parameters": [
          {
            "description": "Alert Definition identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "Collection of policy identifiers",
            "explode": true,
            "in": "query",
            "name": "policyId",
            "required": true,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The alert definition is disabled successfully"
          }
        },

        "tags": [
          "Alerts"
        ],
        "deprecated": false,
        "description": "Disable alert definition in policies",
        "operationId": "disableAlertDefinitionInPoliciesUsingPUT",
        "summary": "Disable alert definition in policies"
      }
    },
    "/api/alertdefinitions/{id}/enable": {
      "put": {
        "parameters": [
          {
            "description": "Alert Definition identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "Collection of policy identifiers",
            "explode": true,
            "in": "query",
            "name": "policyId",
            "required": true,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The alert definition is enabled successfully"
          }
        },

        "tags": [
          "Alerts"
        ],
        "deprecated": false,
        "description": "Enable alert definition in policies",
        "operationId": "enableAlertDefinitionInPoliciesUsingPUT",
        "summary": "Enable alert definition in policies"
      }
    },
    "/api/alertplugins": {
      "get": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "The notification type",
            "in": "query",
            "name": "pluginTypeId",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"notificationPluginInstances\" : [ {\n    \"pluginTypeId\" : \"StandardEmailPlugin\",\n    \"pluginId\" : \"435a9fb4-d34a-4276-9945-b7426121bee5\",\n    \"name\" : \"Notification Plugin Sample\",\n    \"description\" : \"Where to notify Example\",\n    \"configValues\" : [ {\n      \"name\" : \"IS_SECURE_CONNECTION\",\n      \"value\" : \"true\"\n    }, {\n      \"name\" : \"SMTP_HOST\",\n      \"value\" : \"10.118.48.101\"\n    }, {\n      \"name\" : \"SMTP_PORT\",\n      \"value\" : \"25\"\n    }, {\n      \"name\" : \"senderEmailAddress\",\n      \"value\" : \"somebody@my.org\"\n    }, {\n      \"name\" : \"senderName\",\n      \"value\" : \"Somebody\"\n    } ]\n  }, {\n    \"pluginTypeId\" : \"StandardEmailPlugin\",\n    \"pluginId\" : \"d0459f14-875c-481e-9acd-4996362f11f6\",\n    \"name\" : \"Notification Plugin Sample\",\n    \"description\" : \"Where to notify Example\",\n    \"configValues\" : [ {\n      \"name\" : \"IS_SECURE_CONNECTION\",\n      \"value\" : \"true\"\n    }, {\n      \"name\" : \"SMTP_HOST\",\n      \"value\" : \"10.118.48.101\"\n    }, {\n      \"name\" : \"SMTP_PORT\",\n      \"value\" : \"25\"\n    }, {\n      \"name\" : \"senderEmailAddress\",\n      \"value\" : \"somebody@my.org\"\n    }, {\n      \"name\" : \"senderName\",\n      \"value\" : \"Somebody\"\n    } ]\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/notification-plugins"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:notification-plugins xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:notification-plugin>\n        <ops:pluginTypeId>StandardEmailPlugin</ops:pluginTypeId>\n        <ops:pluginId>a525c683-ae34-4b9c-b863-3c69e385f1b5</ops:pluginId>\n        <ops:name>Notification Plugin Sample</ops:name>\n        <ops:description>Where to notify Example</ops:description>\n        <ops:configValues>\n            <ops:configValue name=\"IS_SECURE_CONNECTION\">true</ops:configValue>\n            <ops:configValue name=\"SMTP_HOST\">10.118.48.101</ops:configValue>\n            <ops:configValue name=\"SMTP_PORT\">25</ops:configValue>\n            <ops:configValue name=\"senderEmailAddress\">somebody@my.org</ops:configValue>\n            <ops:configValue name=\"senderName\">Somebody</ops:configValue>\n        </ops:configValues>\n    </ops:notification-plugin>\n    <ops:notification-plugin>\n        <ops:pluginTypeId>StandardEmailPlugin</ops:pluginTypeId>\n        <ops:pluginId>9b62bab2-a62a-4d48-8f86-3fab6b57f596</ops:pluginId>\n        <ops:name>Notification Plugin Sample</ops:name>\n        <ops:description>Where to notify Example</ops:description>\n        <ops:configValues>\n            <ops:configValue name=\"IS_SECURE_CONNECTION\">true</ops:configValue>\n            <ops:configValue name=\"SMTP_HOST\">10.118.48.101</ops:configValue>\n            <ops:configValue name=\"SMTP_PORT\">25</ops:configValue>\n            <ops:configValue name=\"senderEmailAddress\">somebody@my.org</ops:configValue>\n            <ops:configValue name=\"senderName\">Somebody</ops:configValue>\n        </ops:configValues>\n    </ops:notification-plugin>\n</ops:notification-plugins>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/notification-plugins"
                }
              }
            },
            "description": "List containing Notification Plugins"
          }
        },

        "tags": [
          "Alert Plugins"
        ],
        "deprecated": false,
        "description": "Get Notification Plugins, optionally filtered for a specific type",
        "operationId": "getAlertPluginsOfTypeUsingGET",
        "summary": "Get Notification Plugins, optionally filtered for a specific type"
      },
      "patch": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"pluginTypeId\" : \"StandardEmailPlugin\",\n  \"pluginId\" : \"e6a55215-8605-4da0-bb06-96b18e4f5d65\",\n  \"name\" : \"Notification Plugin Sample\",\n  \"description\" : \"Where to notify Example\",\n  \"configValues\" : [ {\n    \"name\" : \"IS_SECURE_CONNECTION\",\n    \"value\" : \"true\"\n  }, {\n    \"name\" : \"SMTP_HOST\",\n    \"value\" : \"10.118.48.101\"\n  }, {\n    \"name\" : \"SMTP_PORT\",\n    \"value\" : \"25\"\n  }, {\n    \"name\" : \"senderEmailAddress\",\n    \"value\" : \"somebody@my.org\"\n  }, {\n    \"name\" : \"senderName\",\n    \"value\" : \"Somebody\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/notification-plugin"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:notification-plugin xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:pluginTypeId>StandardEmailPlugin</ops:pluginTypeId>\n    <ops:pluginId>fff83504-5c06-49c7-a678-e3d7c74c8946</ops:pluginId>\n    <ops:name>Notification Plugin Sample</ops:name>\n    <ops:description>Where to notify Example</ops:description>\n    <ops:configValues>\n        <ops:configValue name=\"IS_SECURE_CONNECTION\">true</ops:configValue>\n        <ops:configValue name=\"SMTP_HOST\">10.118.48.101</ops:configValue>\n        <ops:configValue name=\"SMTP_PORT\">25</ops:configValue>\n        <ops:configValue name=\"senderEmailAddress\">somebody@my.org</ops:configValue>\n        <ops:configValue name=\"senderName\">Somebody</ops:configValue>\n    </ops:configValues>\n</ops:notification-plugin>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/notification-plugin"
                }
              }
            },
            "description": "Created Notification Plugin Instance"
          }
        },

        "tags": [
          "Alert Plugins"
        ],
        "deprecated": false,
        "description": "Patch a new Notification Plugin Instance",
        "operationId": "patchAlertPluginUsingPATCH",
        "requestBody": {
          "$ref": "#/components/requestBodies/notification-plugin"
        },
        "summary": "Patch a new Notification Plugin Instance"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"pluginTypeId\" : \"StandardEmailPlugin\",\n  \"pluginId\" : \"b9ad6df9-0514-4bab-9968-60089b79cbc1\",\n  \"name\" : \"Notification Plugin Sample\",\n  \"description\" : \"Where to notify Example\",\n  \"configValues\" : [ {\n    \"name\" : \"IS_SECURE_CONNECTION\",\n    \"value\" : \"true\"\n  }, {\n    \"name\" : \"SMTP_HOST\",\n    \"value\" : \"10.118.48.101\"\n  }, {\n    \"name\" : \"SMTP_PORT\",\n    \"value\" : \"25\"\n  }, {\n    \"name\" : \"senderEmailAddress\",\n    \"value\" : \"somebody@my.org\"\n  }, {\n    \"name\" : \"senderName\",\n    \"value\" : \"Somebody\"\n  } ],\n  \"certificates\" : [ {\n    \"thumbprint\" : \"5804eb0c-03b3-4b2b-bcef-00340ee4b136\",\n    \"certificateDetails\" : \"Issued: vmware , expiry:10/01/2014\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/notification-plugin"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:notification-plugin xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:pluginTypeId>StandardEmailPlugin</ops:pluginTypeId>\n    <ops:pluginId>2f973c8a-1dd4-4f25-a871-38b1e7038444</ops:pluginId>\n    <ops:name>Notification Plugin Sample</ops:name>\n    <ops:description>Where to notify Example</ops:description>\n    <ops:configValues>\n        <ops:configValue name=\"IS_SECURE_CONNECTION\">true</ops:configValue>\n        <ops:configValue name=\"SMTP_HOST\">10.118.48.101</ops:configValue>\n        <ops:configValue name=\"SMTP_PORT\">25</ops:configValue>\n        <ops:configValue name=\"senderEmailAddress\">somebody@my.org</ops:configValue>\n        <ops:configValue name=\"senderName\">Somebody</ops:configValue>\n    </ops:configValues>\n    <ops:certificates>\n        <ops:certificate>\n            <ops:thumbprint>0a9dff88-fa42-42d1-b978-5801b8b83bb8</ops:thumbprint>\n            <ops:certificateDetails>Issued: vmware , expiry:10/01/2014</ops:certificateDetails>\n        </ops:certificate>\n    </ops:certificates>\n</ops:notification-plugin>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/notification-plugin"
                }
              }
            },
            "description": "Created Notification Plugin Instance"
          }
        },

        "tags": [
          "Alert Plugins"
        ],
        "deprecated": false,
        "description": "If the Notification plugin is a standard email plugin, then any untrusted certificates from the secure SMTP server \nis returned as part of the response, the api client should invoke a PATCH call to store these certificates.\nBy default the notification plugin is in disabled state after being created.\nUse the <code>modifyAlertPluginState</code> API to enable the plugin.",
        "operationId": "createAlertPluginUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/notification-plugin"
        },
        "summary": "Create a new Notification Plugin Instance"
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"pluginTypeId\" : \"StandardEmailPlugin\",\n  \"pluginId\" : \"18589dea-9999-1234-abba-f1ee73004dac\",\n  \"name\" : \"Notification Plugin Updated Sample\",\n  \"description\" : \"Where to notify Example\",\n  \"version\" : 140592123,\n  \"configValues\" : [ {\n    \"name\" : \"IS_SECURE_CONNECTION\",\n    \"value\" : \"true\"\n  }, {\n    \"name\" : \"SMTP_HOST\",\n    \"value\" : \"10.118.48.101\"\n  }, {\n    \"name\" : \"SMTP_PORT\",\n    \"value\" : \"25\"\n  }, {\n    \"name\" : \"senderEmailAddress\",\n    \"value\" : \"somebody@my.org\"\n  }, {\n    \"name\" : \"senderName\",\n    \"value\" : \"Somebody\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/notification-plugin"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:notification-plugin version=\"140592123\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:pluginTypeId>StandardEmailPlugin</ops:pluginTypeId>\n    <ops:pluginId>18589dea-9999-1234-abba-f1ee73004dac</ops:pluginId>\n    <ops:name>Notification Plugin Updated Sample</ops:name>\n    <ops:description>Where to notify Example</ops:description>\n    <ops:configValues>\n        <ops:configValue name=\"IS_SECURE_CONNECTION\">true</ops:configValue>\n        <ops:configValue name=\"SMTP_HOST\">10.118.48.101</ops:configValue>\n        <ops:configValue name=\"SMTP_PORT\">25</ops:configValue>\n        <ops:configValue name=\"senderEmailAddress\">somebody@my.org</ops:configValue>\n        <ops:configValue name=\"senderName\">Somebody</ops:configValue>\n    </ops:configValues>\n</ops:notification-plugin>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/notification-plugin"
                }
              }
            },
            "description": "The updated Notification Plugin Instance"
          }
        },

        "tags": [
          "Alert Plugins"
        ],
        "deprecated": false,
        "description": "Before updating a notification plugin, the plugin should be disabled. During the update process\nif there are any untrusted certificates returned by the server the patchAlertPlugin call should be made.\nOnce the update is successfully completed, use <code>modifyAlertPluginState</code> API to enable the plugin.",
        "operationId": "updateAlertPluginUsingPUT",
        "requestBody": {
          "$ref": "#/components/requestBodies/notification-plugin"
        },
        "summary": "Update an existing Notification Plugin Instance"
      }
    },
    "/api/alertplugins/types": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"notificationPluginType\" : [ \"SNMP Trap\", \"StandardEmailPlugin\" ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert-plugin-types"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:alert-plugin-types xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:notificationPluginType>SNMP Trap</ops:notificationPluginType>\n    <ops:notificationPluginType>StandardEmailPlugin</ops:notificationPluginType>\n</ops:alert-plugin-types>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert-plugin-types"
                }
              }
            },
            "description": "List of Notification Plugin Type identifiers"
          }
        },

        "tags": [
          "Alert Plugins"
        ],
        "deprecated": false,
        "description": "Get the available Notification Plugin Types",
        "operationId": "getAlertPluginTypesUsingGET",
        "summary": "Get the available Notification Plugin Types"
      }
    },
    "/api/alertplugins/types/{pluginTypeId}": {
      "get": {
        "parameters": [
          {
            "description": "The notification type",
            "in": "path",
            "name": "pluginTypeId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"SNMP Trap\",\n  \"description\" : \"a plugin type for SNMP\",\n  \"properties\" : [ {\n    \"key\" : \"destination_addr\",\n    \"dataType\" : \"UNSPECIFIED\",\n    \"length\" : 0,\n    \"required\" : true,\n    \"displayOrder\" : 1,\n    \"isDeprecated\" : false\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert-plugin-type"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:alert-plugin-type xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:id>SNMP Trap</ops:id>\n    <ops:description>a plugin type for SNMP</ops:description>\n    <ops:properties>\n        <ops:property>\n            <ops:key>destination_addr</ops:key>\n            <ops:dataType>UNSPECIFIED</ops:dataType>\n            <ops:length>0</ops:length>\n            <ops:required>true</ops:required>\n            <ops:displayOrder>1</ops:displayOrder>\n            <ops:isDeprecated>false</ops:isDeprecated>\n        </ops:property>\n    </ops:properties>\n    <ops:rule-properties/>\n</ops:alert-plugin-type>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert-plugin-type"
                }
              }
            },
            "description": "The Notification Plugin Metadata specified"
          }
        },

        "tags": [
          "Alert Plugins"
        ],
        "deprecated": false,
        "description": "Get the Notification Plugin Type Metadata specified by Plugin Type ID",
        "operationId": "getAlertPluginTypeWithIdUsingGET",
        "summary": "Get the Notification Plugin Type Metadata"
      }
    },
    "/api/alertplugins/{pluginId}": {
      "delete": {
        "parameters": [
          {
            "description": "The identifier of the plugin instance",
            "in": "path",
            "name": "pluginId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The notification plugin is deleted successfully"
          }
        },

        "tags": [
          "Alert Plugins"
        ],
        "deprecated": false,
        "description": "Response Status is HttpStatus No Content when successful.",
        "operationId": "deleteAlertPluginUsingDELETE",
        "summary": "Delete an existing Notification Plugin Instance"
      },
      "get": {
        "parameters": [
          {
            "description": "The identifier for the plugin instance",
            "in": "path",
            "name": "pluginId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"pluginTypeId\" : \"StandardEmailPlugin\",\n  \"pluginId\" : \"f370dd40-5d90-46ff-932f-a5b90bfbdfe9\",\n  \"name\" : \"Notification Plugin Sample\",\n  \"description\" : \"Where to notify Example\",\n  \"configValues\" : [ {\n    \"name\" : \"IS_SECURE_CONNECTION\",\n    \"value\" : \"true\"\n  }, {\n    \"name\" : \"SMTP_HOST\",\n    \"value\" : \"10.118.48.101\"\n  }, {\n    \"name\" : \"SMTP_PORT\",\n    \"value\" : \"25\"\n  }, {\n    \"name\" : \"senderEmailAddress\",\n    \"value\" : \"somebody@my.org\"\n  }, {\n    \"name\" : \"senderName\",\n    \"value\" : \"Somebody\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/notification-plugin"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:notification-plugin xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:pluginTypeId>StandardEmailPlugin</ops:pluginTypeId>\n    <ops:pluginId>36af3196-2263-44a4-b6d3-e94d9f7251b2</ops:pluginId>\n    <ops:name>Notification Plugin Sample</ops:name>\n    <ops:description>Where to notify Example</ops:description>\n    <ops:configValues>\n        <ops:configValue name=\"IS_SECURE_CONNECTION\">true</ops:configValue>\n        <ops:configValue name=\"SMTP_HOST\">10.118.48.101</ops:configValue>\n        <ops:configValue name=\"SMTP_PORT\">25</ops:configValue>\n        <ops:configValue name=\"senderEmailAddress\">somebody@my.org</ops:configValue>\n        <ops:configValue name=\"senderName\">Somebody</ops:configValue>\n    </ops:configValues>\n</ops:notification-plugin>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/notification-plugin"
                }
              }
            },
            "description": "List containing Notification Plugins"
          }
        },

        "tags": [
          "Alert Plugins"
        ],
        "deprecated": false,
        "description": "Get Notification Plugin specified by Plugin ID",
        "operationId": "getAlertPluginInstanceUsingGET",
        "summary": "Get Notification Plugin specified by plugin id"
      }
    },
    "/api/alertplugins/{pluginId}/enable/{enabled}": {
      "put": {
        "parameters": [
          {
            "description": "enabled",
            "in": "path",
            "name": "enabled",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The identifier of the plugin instance",
            "in": "path",
            "name": "pluginId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The notification plugin is started successfully"
          }
        },

        "tags": [
          "Alert Plugins"
        ],
        "deprecated": false,
        "description": "Start or stop an existing Notification Plugin Instance",
        "operationId": "modifyAlertPluginStateUsingPUT",
        "summary": "Start or stop an existing Notification Plugin Instance"
      }
    },
    "/api/alertplugins/{pluginId}/rules": {
      "get": {
        "parameters": [
          {
            "description": "The identifier for the plugin instance",
            "in": "path",
            "name": "pluginId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notification-rules"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/notification-rules"
                }
              }
            },
            "description": "List of notification rules"
          }
        },

        "tags": [
          "Alert Plugins"
        ],
        "deprecated": false,
        "description": "Retrieve all the notification rules of the plugin instance",
        "operationId": "getRulesOfPluginUsingGET",
        "summary": "Retrieve all the notification rules of the plugin instance"
      }
    },
    "/api/alertplugins/{pluginId}/test": {
      "post": {
        "parameters": [
          {
            "description": "The identifier of the plugin instance",
            "in": "path",
            "name": "pluginId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "Notification template identifier",
            "in": "query",
            "name": "templateId",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"pluginTypeId\" : \"StandardEmailPlugin\",\n  \"pluginId\" : \"18589dea-9999-1234-abba-f1ee73004dac\",\n  \"name\" : \"Notification Plugin Updated Sample\",\n  \"description\" : \"Where to notify Example\",\n  \"version\" : 140592123,\n  \"configValues\" : [ {\n    \"name\" : \"IS_SECURE_CONNECTION\",\n    \"value\" : \"true\"\n  }, {\n    \"name\" : \"SMTP_HOST\",\n    \"value\" : \"10.118.48.101\"\n  }, {\n    \"name\" : \"SMTP_PORT\",\n    \"value\" : \"25\"\n  }, {\n    \"name\" : \"senderEmailAddress\",\n    \"value\" : \"somebody@my.org\"\n  }, {\n    \"name\" : \"senderName\",\n    \"value\" : \"Somebody\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/notification-plugin"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:notification-plugin version=\"140592123\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:pluginTypeId>StandardEmailPlugin</ops:pluginTypeId>\n    <ops:pluginId>18589dea-9999-1234-abba-f1ee73004dac</ops:pluginId>\n    <ops:name>Notification Plugin Updated Sample</ops:name>\n    <ops:description>Where to notify Example</ops:description>\n    <ops:configValues>\n        <ops:configValue name=\"IS_SECURE_CONNECTION\">true</ops:configValue>\n        <ops:configValue name=\"SMTP_HOST\">10.118.48.101</ops:configValue>\n        <ops:configValue name=\"SMTP_PORT\">25</ops:configValue>\n        <ops:configValue name=\"senderEmailAddress\">somebody@my.org</ops:configValue>\n        <ops:configValue name=\"senderName\">Somebody</ops:configValue>\n    </ops:configValues>\n</ops:notification-plugin>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/notification-plugin"
                }
              }
            },
            "description": "Test connection successfully"
          }
        },

        "tags": [
          "Alert Plugins"
        ],
        "deprecated": false,
        "description": "Test existing Notification Plugin Instance connectivity",
        "operationId": "testAlertPluginUsingPOST",
        "summary": "Test existing Notification Plugin Instance connectivity"
      }
    },
    "/api/alerts": {
      "get": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Identifiers of the Alerts",
            "explode": true,
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Page number from which data needs to be displayed (0-based)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Expected number of entries per page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "Identifiers of the Resources whose Alerts you need to be looked up",
            "explode": true,
            "in": "query",
            "name": "resourceId",
            "required": false,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"alerts\" : [ {\n    \"alertId\" : \"31eeaeec-82d5-4037-a59b-efed2e7c8e3a\",\n    \"resourceId\" : \"34cb1b3a-a78b-465c-847d-77d2f24d6ca2\",\n    \"alertLevel\" : \"NONE\",\n    \"startTimeUTC\" : 1689236471,\n    \"cancelTimeUTC\" : 0,\n    \"updateTimeUTC\" : 1689246471,\n    \"suspendUntilTimeUTC\" : 0\n  }, {\n    \"alertId\" : \"18589dea-9999-1234-abba-f1ee73004dac\",\n    \"resourceId\" : \"bac0a8cb-05dd-4755-be1e-b33127dfac2b\",\n    \"alertLevel\" : \"NONE\",\n    \"startTimeUTC\" : 1689236471,\n    \"cancelTimeUTC\" : 0,\n    \"updateTimeUTC\" : 1689246471,\n    \"suspendUntilTimeUTC\" : 0\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alerts"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:alerts xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:alert>\n        <ops:alertId>31eeaeec-82d5-4037-a59b-efed2e7c8e3a</ops:alertId>\n        <ops:resourceId>f12fb5e5-9c5c-40bc-8029-f3c63b4df824</ops:resourceId>\n        <ops:alertLevel>NONE</ops:alertLevel>\n        <ops:startTimeUTC>1689236471</ops:startTimeUTC>\n        <ops:cancelTimeUTC>0</ops:cancelTimeUTC>\n        <ops:updateTimeUTC>1689246471</ops:updateTimeUTC>\n        <ops:suspendUntilTimeUTC>0</ops:suspendUntilTimeUTC>\n    </ops:alert>\n    <ops:alert>\n        <ops:alertId>18589dea-9999-1234-abba-f1ee73004dac</ops:alertId>\n        <ops:resourceId>dd85f753-86ce-40ba-9440-769675dca092</ops:resourceId>\n        <ops:alertLevel>NONE</ops:alertLevel>\n        <ops:startTimeUTC>1689236471</ops:startTimeUTC>\n        <ops:cancelTimeUTC>0</ops:cancelTimeUTC>\n        <ops:updateTimeUTC>1689246471</ops:updateTimeUTC>\n        <ops:suspendUntilTimeUTC>0</ops:suspendUntilTimeUTC>\n    </ops:alert>\n</ops:alerts>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alerts"
                }
              }
            },
            "description": "Alerts matching the specified identifiers. Can be empty"
          },
          "500": {
            "description": "Error occurred while retrieving the Alerts with the specified identifiers"
          }
        },

        "tags": [
          "Alerts"
        ],
        "deprecated": false,
        "description": "<code> Example: GET /api/alerts?id={id1}&id={id2}&resourceId={resId1}&resourceId={resId2}</code>",
        "operationId": "getAlertsUsingGET",
        "summary": "Look up Alerts by their identifiers or using the identifiers of the Resources they are associated with"
      },
      "post": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "The action to take",
            "in": "query",
            "name": "action",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "The number of minutes to suspend an alert. Required when action is <b><i>Suspend</i></b>, otherwise ignored.",
            "in": "query",
            "name": "minutes",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Page number from which data needs to be displayed (0-based)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Expected number of entries per page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "User Account identifier. Optional request parameter that is applicable when action is <b><i>assignownership<b><i>.",
            "in": "query",
            "name": "userAccountID",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"alerts\" : [ {\n    \"alertId\" : \"31eeaeec-82d5-4037-a59b-efed2e7c8e3a\",\n    \"resourceId\" : \"97a2f2b0-a6be-4ec8-a360-98e135a85612\",\n    \"alertLevel\" : \"NONE\",\n    \"startTimeUTC\" : 1689236471,\n    \"cancelTimeUTC\" : 0,\n    \"updateTimeUTC\" : 1689246471,\n    \"suspendUntilTimeUTC\" : 0\n  }, {\n    \"alertId\" : \"18589dea-9999-1234-abba-f1ee73004dac\",\n    \"resourceId\" : \"f2f3fda7-fde5-4f1f-9f93-d6a788febd97\",\n    \"alertLevel\" : \"NONE\",\n    \"startTimeUTC\" : 1689236471,\n    \"cancelTimeUTC\" : 0,\n    \"updateTimeUTC\" : 1689246471,\n    \"suspendUntilTimeUTC\" : 0\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alerts"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:alerts xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:alert>\n        <ops:alertId>31eeaeec-82d5-4037-a59b-efed2e7c8e3a</ops:alertId>\n        <ops:resourceId>9495c36e-3880-4312-ac71-ebe1375ee529</ops:resourceId>\n        <ops:alertLevel>NONE</ops:alertLevel>\n        <ops:startTimeUTC>1689236471</ops:startTimeUTC>\n        <ops:cancelTimeUTC>0</ops:cancelTimeUTC>\n        <ops:updateTimeUTC>1689246471</ops:updateTimeUTC>\n        <ops:suspendUntilTimeUTC>0</ops:suspendUntilTimeUTC>\n    </ops:alert>\n    <ops:alert>\n        <ops:alertId>18589dea-9999-1234-abba-f1ee73004dac</ops:alertId>\n        <ops:resourceId>c4e2842a-a5d3-4dec-87e5-85fd5f96e7e6</ops:resourceId>\n        <ops:alertLevel>NONE</ops:alertLevel>\n        <ops:startTimeUTC>1689236471</ops:startTimeUTC>\n        <ops:cancelTimeUTC>0</ops:cancelTimeUTC>\n        <ops:updateTimeUTC>1689246471</ops:updateTimeUTC>\n        <ops:suspendUntilTimeUTC>0</ops:suspendUntilTimeUTC>\n    </ops:alert>\n</ops:alerts>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alerts"
                }
              }
            },
            "description": "The Alerts on which the action has been performed"
          },
          "500": {
            "description": "Error occurred while performing the specified action"
          }
        },

        "tags": [
          "Alerts"
        ],
        "deprecated": false,
        "description": "Modify multiple Alerts by looking them up using their identifiers and performing one of the following actions - <i>Suspend</i>, <i>Cancel</i>,<i>Take Ownership</i>, <i>Release Ownership</i>\nExamples: <br/><code>POST /api/alerts?action=suspend&minutes=1</code> <br/><code>POST /api/alerts?action=cancel</code> <br/><code>POST /api/alerts?action=takeownership</code> <br/><code>POST /api/alerts?action=releaseownership</code> <br/><code>POST /api/alerts?action=assignownership</code> <br/><br/>",
        "operationId": "modifyAlertsUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/uuid-values"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/uuid-values"
              }
            }
          },
          "description": "Identifiers of the Alerts",
          "required": true
        },
        "summary": "Perform operations on one or more Alerts"
      }
    },
    "/api/alerts/bulk": {
      "delete": {
        "responses": {
          "204": {
            "description": "No error in starting the deletion of canceled alerts(s)"
          },
          "400": {
            "description": "Wrong request parameter for deletion of canceled alerts(s)"
          },
          "500": {
            "description": "Error occurred while starting the deletion of canceled alert(s)"
          }
        },

        "tags": [
          "Alerts"
        ],
        "deprecated": false,
        "description": "<br/><code>Example: DELETE /api/alerts/bulk</code><br/>",
        "operationId": "deleteCanceledAlertsUsingDELETE",
        "requestBody": {
          "$ref": "#/components/requestBodies/alert-query"
        },
        "summary": "Delete canceled alerts using one or more criteria specified in the Query Spec"
      }
    },
    "/api/alerts/contributingsymptoms": {
      "get": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Identifiers of the Alerts",
            "explode": true,
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert-contributing-symptoms"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert-contributing-symptoms"
                }
              }
            },
            "description": "On success. A list of triggered symptoms"
          },
          "500": {
            "description": "Error occurred while retrieving the list of triggered symptoms"
          }
        },

        "tags": [
          "Alerts"
        ],
        "deprecated": false,
        "description": "Get the list of triggered symptoms for the requested alerts",
        "operationId": "getAlertContributingSymptomsUsingGET",
        "summary": "Get the list of triggered symptoms for the requested alerts"
      }
    },
    "/api/alerts/group/{groupingCondition}/query": {
      "post": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Adapter kind to be used for grouping alerts by SCOPE",
            "in": "query",
            "name": "adapterKind",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The condition to be used for grouping",
            "in": "path",
            "name": "groupingCondition",
            "required": true,
            "schema": {
              "enum": [
                "GROUP_BY_ALERT_DEFINITION",
                "GROUP_BY_RESOURCE_KIND",
                "GROUP_BY_CRITICALITY",
                "GROUP_BY_TIME",
                "GROUP_BY_SCOPE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Page number from which data needs to be displayed (0-based)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Expected number of entries per page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "Resource kind to be used for grouping alerts by SCOPE",
            "in": "query",
            "name": "resourceKind",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "Filter based on alert resource name (Used only in SCOPE flow)",
            "in": "query",
            "name": "resourceNameFilter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"alertGroups\" : [ {\n    \"groupId\" : \"A-id\",\n    \"groupName\" : \"A\",\n    \"alertCount\" : 5,\n    \"maxCriticalityLevel\" : 3\n  }, {\n    \"groupId\" : \"B-id\",\n    \"groupName\" : \"B\",\n    \"alertCount\" : 5,\n    \"maxCriticalityLevel\" : 3\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert-groups"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:alert-groups xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:alert-group>\n        <ops:groupId>A-id</ops:groupId>\n        <ops:groupName>A</ops:groupName>\n        <ops:alertCount>5</ops:alertCount>\n        <ops:maxCriticalityLevel>3</ops:maxCriticalityLevel>\n    </ops:alert-group>\n    <ops:alert-group>\n        <ops:groupId>B-id</ops:groupId>\n        <ops:groupName>B</ops:groupName>\n        <ops:alertCount>5</ops:alertCount>\n        <ops:maxCriticalityLevel>3</ops:maxCriticalityLevel>\n    </ops:alert-group>\n</ops:alert-groups>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert-groups"
                }
              }
            },
            "description": "AlertGroups of alerts matching the specified Query Spec and grouped using specified grouping-condition(Collection can be empty)"
          },
          "500": {
            "description": "Error occurred while retrieving the AlertGroups"
          }
        },

        "tags": [
          "Alerts"
        ],
        "deprecated": false,
        "description": "<code> Example: POST /api/alerts/group/{groupingCondition}/query </code>",
        "operationId": "queryAlertGroupsUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/alert-query"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/alert-query"
              }
            }
          },
          "description": "The alertQuery criteria",
          "required": true
        },
        "summary": "Query for Alert groups using one or more criteria specified in the Query Spec"
      }
    },
    "/api/alerts/notes/query": {
      "post": {
        "parameters": [
          {
            "description": "Page number from which data needs to be displayed (0-based)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Expected number of entries per page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"alertNotes\" : [ {\n    \"id\" : \"ea3f7bcc-12f0-432b-9ba4-a808b14b8891\",\n    \"alertId\" : \"0d9ff4f7-1603-43c9-b51d-db2b5b47c65e\",\n    \"creationTimeUTC\" : 0,\n    \"type\" : \"USER\",\n    \"userId\" : \"2d8b511a-676a-4b9b-a032-aae9278c4f1f\",\n    \"userName\" : \"testUser\",\n    \"note\" : \"sample note\"\n  }, {\n    \"id\" : \"24c93393-eba2-450c-85fb-105c6d97c7ab\",\n    \"alertId\" : \"0d9ff4f7-1603-43c9-b51d-db2b5b47c65e\",\n    \"creationTimeUTC\" : 0,\n    \"type\" : \"SYSTEM\",\n    \"userId\" : \"2d8b511a-676a-4b9b-a032-aae9278c4f1f\",\n    \"userName\" : \"testUser\",\n    \"note\" : \"sample note\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert-notes"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:alert-notes xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:alert-note id=\"ea3f7bcc-12f0-432b-9ba4-a808b14b8891\">\n        <ops:alertId>0d9ff4f7-1603-43c9-b51d-db2b5b47c65e</ops:alertId>\n        <ops:creationTimeUTC>0</ops:creationTimeUTC>\n        <ops:type>USER</ops:type>\n        <ops:userId>2d8b511a-676a-4b9b-a032-aae9278c4f1f</ops:userId>\n        <ops:userName>testUser</ops:userName>\n        <ops:note>sample note</ops:note>\n    </ops:alert-note>\n    <ops:alert-note id=\"24c93393-eba2-450c-85fb-105c6d97c7ab\">\n        <ops:alertId>0d9ff4f7-1603-43c9-b51d-db2b5b47c65e</ops:alertId>\n        <ops:creationTimeUTC>0</ops:creationTimeUTC>\n        <ops:type>SYSTEM</ops:type>\n        <ops:userId>2d8b511a-676a-4b9b-a032-aae9278c4f1f</ops:userId>\n        <ops:userName>testUser</ops:userName>\n        <ops:note>sample note</ops:note>\n    </ops:alert-note>\n</ops:alert-notes>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert-notes"
                }
              }
            },
            "description": "The Alert Notes matching the query specified (Collection can be empty)"
          },
          "500": {
            "description": "Error occurred while retrieving the Alert Notes"
          }
        },

        "tags": [
          "Alerts"
        ],
        "deprecated": false,
        "description": "Data returned includes a Collection of Alert Notes",
        "operationId": "queryAlertNotesUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/alert-notes-query"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/alert-notes-query"
              }
            }
          },
          "description": "The query spec used for looking up Alert Notes"
        },
        "summary": "Query for Alert Notes based on specified criteria"
      }
    },
    "/api/alerts/query": {
      "post": {
        "parameters": [
          {
            "description": "Page number from which data needs to be displayed (0-based)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Expected number of entries per page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"alerts\" : [ {\n    \"alertId\" : \"31eeaeec-82d5-4037-a59b-efed2e7c8e3a\",\n    \"resourceId\" : \"a4ca37ed-c31b-4979-a8f6-07fd61e69f19\",\n    \"alertLevel\" : \"NONE\",\n    \"startTimeUTC\" : 1689236471,\n    \"cancelTimeUTC\" : 0,\n    \"updateTimeUTC\" : 1689246471,\n    \"suspendUntilTimeUTC\" : 0\n  }, {\n    \"alertId\" : \"18589dea-9999-1234-abba-f1ee73004dac\",\n    \"resourceId\" : \"84c4804a-ca41-4164-8523-0ce7f9b6d9bd\",\n    \"alertLevel\" : \"NONE\",\n    \"startTimeUTC\" : 1689236471,\n    \"cancelTimeUTC\" : 0,\n    \"updateTimeUTC\" : 1689246471,\n    \"suspendUntilTimeUTC\" : 0\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alerts"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:alerts xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:alert>\n        <ops:alertId>31eeaeec-82d5-4037-a59b-efed2e7c8e3a</ops:alertId>\n        <ops:resourceId>289729ad-5875-4dc4-819c-63374271cdf0</ops:resourceId>\n        <ops:alertLevel>NONE</ops:alertLevel>\n        <ops:startTimeUTC>1689236471</ops:startTimeUTC>\n        <ops:cancelTimeUTC>0</ops:cancelTimeUTC>\n        <ops:updateTimeUTC>1689246471</ops:updateTimeUTC>\n        <ops:suspendUntilTimeUTC>0</ops:suspendUntilTimeUTC>\n    </ops:alert>\n    <ops:alert>\n        <ops:alertId>18589dea-9999-1234-abba-f1ee73004dac</ops:alertId>\n        <ops:resourceId>137dcd1d-f798-47bb-b66a-16b4599c83c9</ops:resourceId>\n        <ops:alertLevel>NONE</ops:alertLevel>\n        <ops:startTimeUTC>1689236471</ops:startTimeUTC>\n        <ops:cancelTimeUTC>0</ops:cancelTimeUTC>\n        <ops:updateTimeUTC>1689246471</ops:updateTimeUTC>\n        <ops:suspendUntilTimeUTC>0</ops:suspendUntilTimeUTC>\n    </ops:alert>\n</ops:alerts>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alerts"
                }
              }
            },
            "description": "The Collection of Alerts matching the specified Query Spec (Collection can be empty)"
          },
          "500": {
            "description": "Error occurred while retrieving the Alerts"
          }
        },

        "tags": [
          "Alerts"
        ],
        "deprecated": false,
        "description": "Data returned includes a Collection of Alert Notes. \n <code> Example: POST /api/alerts/query </code>",
        "operationId": "queryAlertUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/alert-query"
        },
        "summary": "Query for Alerts using one or more criteria specified in the Query Spec"
      }
    },
    "/api/alerts/types": {
      "get": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Setting to true will filter out the legacy Alert Types & Subtypes Defaults to true",
            "in": "query",
            "name": "ignoreLegacy",
            "required": false,
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert-types"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert-types"
                }
              }
            },
            "description": "All the Alert Types and the associated Subtypes"
          },
          "500": {
            "description": "Error occurred while retrieving the Alert Types & Subtypes"
          }
        },

        "tags": [
          "Alerts"
        ],
        "deprecated": false,
        "description": "<br/>Examples:<br/>\n<code>GET /api/alerts/types </code> returns the Problem Alerts specific Alert Types & Subtypes<br/><code>GET /api/alerts/types?ignoreLegacy=false </code> returns all the Alert Types & Subtypes<br/>",
        "operationId": "getAlertTypesUsingGET",
        "summary": "Get all the Alert Types and Subtypes defined in the system."
      }
    },
    "/api/alerts/{id}": {
      "get": {
        "parameters": [
          {
            "description": "UUID of the alert",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"alertId\" : \"31eeaeec-82d5-4037-a59b-efed2e7c8e3a\",\n  \"resourceId\" : \"ae006249-fffa-479c-9e0f-61a88ecb39cb\",\n  \"alertLevel\" : \"NONE\",\n  \"startTimeUTC\" : 1689236471,\n  \"cancelTimeUTC\" : 0,\n  \"updateTimeUTC\" : 1689246471,\n  \"suspendUntilTimeUTC\" : 0\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:alert xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:alertId>31eeaeec-82d5-4037-a59b-efed2e7c8e3a</ops:alertId>\n    <ops:resourceId>b6facbbd-e5ec-4750-807b-4ec17f5a340c</ops:resourceId>\n    <ops:alertLevel>NONE</ops:alertLevel>\n    <ops:startTimeUTC>1689236471</ops:startTimeUTC>\n    <ops:cancelTimeUTC>0</ops:cancelTimeUTC>\n    <ops:updateTimeUTC>1689246471</ops:updateTimeUTC>\n    <ops:suspendUntilTimeUTC>0</ops:suspendUntilTimeUTC>\n</ops:alert>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert"
                }
              }
            },
            "description": "The Alert for the specified identifier"
          },
          "404": {
            "description": "No Alert with the specified identifier is found"
          },
          "500": {
            "description": "Error occurred while retrieving the Alert with the specified identifier"
          }
        },

        "tags": [
          "Alerts"
        ],
        "deprecated": false,
        "description": "Example: <code>GET /api/alerts/{id}</code>",
        "operationId": "getAlertUsingGET",
        "summary": "Look up an Alert by its identifier"
      }
    },
    "/api/alerts/{id}/notes": {
      "get": {
        "parameters": [
          {
            "description": "UUID of the Alert",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Page number from which data needs to be displayed (0-based)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Expected number of entries per page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"alertNotes\" : [ {\n    \"id\" : \"ea3f7bcc-12f0-432b-9ba4-a808b14b8891\",\n    \"alertId\" : \"0d9ff4f7-1603-43c9-b51d-db2b5b47c65e\",\n    \"creationTimeUTC\" : 0,\n    \"type\" : \"USER\",\n    \"userId\" : \"2d8b511a-676a-4b9b-a032-aae9278c4f1f\",\n    \"userName\" : \"testUser\",\n    \"note\" : \"sample note\"\n  }, {\n    \"id\" : \"24c93393-eba2-450c-85fb-105c6d97c7ab\",\n    \"alertId\" : \"0d9ff4f7-1603-43c9-b51d-db2b5b47c65e\",\n    \"creationTimeUTC\" : 0,\n    \"type\" : \"SYSTEM\",\n    \"userId\" : \"2d8b511a-676a-4b9b-a032-aae9278c4f1f\",\n    \"userName\" : \"testUser\",\n    \"note\" : \"sample note\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert-notes"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:alert-notes xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:alert-note id=\"ea3f7bcc-12f0-432b-9ba4-a808b14b8891\">\n        <ops:alertId>0d9ff4f7-1603-43c9-b51d-db2b5b47c65e</ops:alertId>\n        <ops:creationTimeUTC>0</ops:creationTimeUTC>\n        <ops:type>USER</ops:type>\n        <ops:userId>2d8b511a-676a-4b9b-a032-aae9278c4f1f</ops:userId>\n        <ops:userName>testUser</ops:userName>\n        <ops:note>sample note</ops:note>\n    </ops:alert-note>\n    <ops:alert-note id=\"24c93393-eba2-450c-85fb-105c6d97c7ab\">\n        <ops:alertId>0d9ff4f7-1603-43c9-b51d-db2b5b47c65e</ops:alertId>\n        <ops:creationTimeUTC>0</ops:creationTimeUTC>\n        <ops:type>SYSTEM</ops:type>\n        <ops:userId>2d8b511a-676a-4b9b-a032-aae9278c4f1f</ops:userId>\n        <ops:userName>testUser</ops:userName>\n        <ops:note>sample note</ops:note>\n    </ops:alert-note>\n</ops:alert-notes>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert-notes"
                }
              }
            },
            "description": "All the Alert Notes for the specified Alert"
          },
          "404": {
            "description": "No Alert is found with the specified identifier"
          },
          "500": {
            "description": "Error occurred while retrieving the Alert Notes"
          }
        },

        "tags": [
          "Alerts"
        ],
        "deprecated": false,
        "description": "Data includes a Collection of Alert Notes \n<code> Example: GET /api/alerts/{id}/notes </code>",
        "operationId": "getAlertNotesUsingGET",
        "summary": "Get all the Alert Notes associated with an Alert"
      },
      "post": {
        "parameters": [
          {
            "description": "The indentifier of the Alert t which the Note need to be added",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"ea3f7bcc-12f0-432b-9ba4-a808b14b8891\",\n  \"alertId\" : \"0d9ff4f7-1603-43c9-b51d-db2b5b47c65e\",\n  \"creationTimeUTC\" : 0,\n  \"type\" : \"USER\",\n  \"userId\" : \"2d8b511a-676a-4b9b-a032-aae9278c4f1f\",\n  \"userName\" : \"testUser\",\n  \"note\" : \"sample note\"\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert-note"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:alert-note id=\"ea3f7bcc-12f0-432b-9ba4-a808b14b8891\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:alertId>0d9ff4f7-1603-43c9-b51d-db2b5b47c65e</ops:alertId>\n    <ops:creationTimeUTC>0</ops:creationTimeUTC>\n    <ops:type>USER</ops:type>\n    <ops:userId>2d8b511a-676a-4b9b-a032-aae9278c4f1f</ops:userId>\n    <ops:userName>testUser</ops:userName>\n    <ops:note>sample note</ops:note>\n</ops:alert-note>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert-note"
                }
              }
            },
            "description": "The Alert Note created in the system"
          },
          "404": {
            "description": "No Alert is found with the specified identifier"
          },
          "500": {
            "description": "Error occurred while creating the Alert Note"
          }
        },

        "tags": [
          "Alerts"
        ],
        "deprecated": false,
        "description": "Data returned is the Alert Note created in the system. \n<code> Example: POST /api/alerts/{id}/notes </code>",
        "operationId": "addAlertNoteUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/alert-note-content"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/alert-note-content"
              }
            }
          },
          "description": "The Content of the note"
        },
        "summary": "Add a Note to an Alert"
      }
    },
    "/api/alerts/{id}/notes/{noteId}": {
      "delete": {
        "parameters": [
          {
            "description": "UUID of the Alert",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Alert Note identifier",
            "in": "path",
            "name": "noteId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The Alert Note was successfully deleted from the system"
          },
          "404": {
            "description": "Alert specified by the Alert identifier or Alert Note specified by the Note identifier doesn't exist"
          },
          "500": {
            "description": "Error occurred while deleting the Alert Note from the system"
          }
        },

        "tags": [
          "Alerts"
        ],
        "deprecated": false,
        "description": "<code> Example: DELETE /api/alerts/{id}/notes/{noteId} </code>",
        "operationId": "deleteAlertNoteUsingDELETE",
        "summary": "Delete a specific Alert Note for a specific Alert"
      },
      "get": {
        "parameters": [
          {
            "description": "UUID of the Alert",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Alert Note identifier",
            "in": "path",
            "name": "noteId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"ea3f7bcc-12f0-432b-9ba4-a808b14b8891\",\n  \"alertId\" : \"0d9ff4f7-1603-43c9-b51d-db2b5b47c65e\",\n  \"creationTimeUTC\" : 0,\n  \"type\" : \"USER\",\n  \"userId\" : \"2d8b511a-676a-4b9b-a032-aae9278c4f1f\",\n  \"userName\" : \"testUser\",\n  \"note\" : \"sample note\"\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert-note"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:alert-note id=\"ea3f7bcc-12f0-432b-9ba4-a808b14b8891\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:alertId>0d9ff4f7-1603-43c9-b51d-db2b5b47c65e</ops:alertId>\n    <ops:creationTimeUTC>0</ops:creationTimeUTC>\n    <ops:type>USER</ops:type>\n    <ops:userId>2d8b511a-676a-4b9b-a032-aae9278c4f1f</ops:userId>\n    <ops:userName>testUser</ops:userName>\n    <ops:note>sample note</ops:note>\n</ops:alert-note>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/alert-note"
                }
              }
            },
            "description": "The requested Alert Note"
          },
          "404": {
            "description": "No Alert is found or no note with the specified identifier"
          },
          "500": {
            "description": "Error occurred while retrieving the Alert Note"
          }
        },

        "tags": [
          "Alerts"
        ],
        "deprecated": false,
        "description": "<code> Example: GET /api/alerts/{id}/notes/{noteId} </code>",
        "operationId": "getAlertNoteUsingGET",
        "summary": "Get the requested Alert Note associated with an Alert"
      }
    },
    "/api/applications": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"appMonitoringConfigurations\" : [ {\n    \"url\" : \"application_monitoring_url\",\n    \"vCenterUrls\" : [ \"vc_url_1\", \"vc_url_2\" ]\n  }, {\n    \"url\" : \"application_monitoring_url_2\",\n    \"vCenterUrls\" : [ \"vc_url_3\", \"vc_url_4\" ]\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/app-monitoring-configurations"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:app-monitoring-configurations xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:appMonitoringConfigurations>\n        <ops:appMonitoringConfiguration>\n            <ops:url>application_monitoring_url</ops:url>\n            <ops:vCenterUrls>\n                <ops:vCenterUrl>vc_url_1</ops:vCenterUrl>\n                <ops:vCenterUrl>vc_url_2</ops:vCenterUrl>\n            </ops:vCenterUrls>\n        </ops:appMonitoringConfiguration>\n        <ops:appMonitoringConfiguration>\n            <ops:url>application_monitoring_url_2</ops:url>\n            <ops:vCenterUrls>\n                <ops:vCenterUrl>vc_url_3</ops:vCenterUrl>\n                <ops:vCenterUrl>vc_url_4</ops:vCenterUrl>\n            </ops:vCenterUrls>\n        </ops:appMonitoringConfiguration>\n    </ops:appMonitoringConfigurations>\n</ops:app-monitoring-configurations>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/app-monitoring-configurations"
                }
              }
            },
            "description": "The created application monitoring configurations"
          }
        },

        "tags": [
          "Applications"
        ],
        "deprecated": false,
        "description": "Get all the created application monitoring configurations",
        "operationId": "getConfigurationDetailsUsingGET",
        "summary": "Get all the created application monitoring configurations"
      }
    },
    "/api/applications/agents": {
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/agent-task-statuses"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/agent-task-statuses"
                }
              }
            },
            "description": "The result of task status"
          }
        },

        "tags": [
          "Applications"
        ],
        "deprecated": false,
        "description": "Uninstall app monitoring agent from the specified resource",
        "operationId": "uninstallAgentUsingDELETE",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/resource-credentials"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/resource-credentials"
              }
            }
          },
          "description": "Credentials of resources from which the agent must be removed",
          "required": true
        },
        "summary": "Uninstall agent from the resource"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"taskStatuses\" : [ {\n    \"taskID\" : \"task_id_1\",\n    \"resources\" : [ \"vm_id_1\", \"vm_id_2\" ]\n  }, {\n    \"taskID\" : \"task_id_2\",\n    \"resources\" : [ \"vm_id_3\", \"vm_id_4\" ]\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/agent-task-statuses"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:agent-task-statuses xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:taskStatuses>\n        <ops:taskStatus taskID=\"task_id_1\">\n            <ops:resources>\n                <ops:resource>vm_id_1</ops:resource>\n                <ops:resource>vm_id_2</ops:resource>\n            </ops:resources>\n        </ops:taskStatus>\n        <ops:taskStatus taskID=\"task_id_2\">\n            <ops:resources>\n                <ops:resource>vm_id_3</ops:resource>\n                <ops:resource>vm_id_4</ops:resource>\n            </ops:resources>\n        </ops:taskStatus>\n    </ops:taskStatuses>\n</ops:agent-task-statuses>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/agent-task-statuses"
                }
              }
            },
            "description": "The result of task status"
          }
        },

        "tags": [
          "Applications"
        ],
        "deprecated": false,
        "description": "Install app monitoring agent on specified resource",
        "operationId": "installAgentUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/resource-credentials"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/resource-credentials"
              }
            }
          },
          "description": "Credentials of resources required to install the agent",
          "required": true
        },
        "summary": "Install agent on resource"
      }
    },
    "/api/applications/agents/services/{taskId}/status": {
      "get": {
        "parameters": [
          {
            "description": "Action identifier (result of the action: POST /api/actions/{id})",
            "in": "path",
            "name": "taskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"taskId\" : \"8a62bbc4-fb42-4498-b190-1353315b8d8c\",\n  \"name\" : \"Edit PostgreSQL\",\n  \"bootstrapObjectStatuses\" : [ {\n    \"id\" : \"b8b4a331-2a73-4d94-acb9-742f19c10c46\",\n    \"stage\" : \"INSTALLING\",\n    \"state\" : \"COMPLETED_SUCCESSFULLY\",\n    \"creationDate\" : \"2019-12-05T09:57:20.439Z\",\n    \"messages\" : [ {\n      \"message\" : \"Install operation task failed\",\n      \"level\" : \"ERROR\",\n      \"timestamp\" : \"2020-02-10T14:05:38.202Z\"\n    }, {\n      \"message\" : \"The operation is not allowed in current state\",\n      \"level\" : \"WARN\",\n      \"timestamp\" : \"2020-02-10T14:05:38.202Z\"\n    }, {\n      \"message\" : \"Plugin update task completed at 1581428889397 wtih ACTTIVATION_FINISHED\",\n      \"level\" : \"INFO\",\n      \"timestamp\" : \"2020-02-10T14:05:38.202Z\"\n    } ]\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/application-configuration-status"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:application-configuration-status taskId=\"2c337570-dda7-4bce-9af9-8dd9cdf6cc63\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:name>Edit PostgreSQL</ops:name>\n    <ops:bootstrapObjectStatuses>\n        <ops:bootstrap-object-status id=\"145e7965-a64f-40b8-92c1-f6243a5362c2\">\n            <ops:stage>INSTALLING</ops:stage>\n            <ops:state>COMPLETED_SUCCESSFULLY</ops:state>\n            <ops:creationDate>2019-12-05T09:57:20.439Z</ops:creationDate>\n            <ops:messages>\n                <ops:message>\n                    <ops:message>Install operation task failed</ops:message>\n                    <ops:level>ERROR</ops:level>\n                    <ops:timestamp>2020-02-10T14:05:38.202Z</ops:timestamp>\n                </ops:message>\n                <ops:message>\n                    <ops:message>The operation is not allowed in current state</ops:message>\n                    <ops:level>WARN</ops:level>\n                    <ops:timestamp>2020-02-10T14:05:38.202Z</ops:timestamp>\n                </ops:message>\n                <ops:message>\n                    <ops:message>Plugin update task completed at 1581428889397 wtih ACTTIVATION_FINISHED</ops:message>\n                    <ops:level>INFO</ops:level>\n                    <ops:timestamp>2020-02-10T14:05:38.202Z</ops:timestamp>\n                </ops:message>\n            </ops:messages>\n        </ops:bootstrap-object-status>\n    </ops:bootstrapObjectStatuses>\n</ops:application-configuration-status>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/application-configuration-status"
                }
              }
            },
            "description": "The populated action information"
          }
        },

        "tags": [
          "Applications"
        ],
        "deprecated": false,
        "description": "The response contains information about the application action status by the given taskId.",
        "operationId": "getServiceOperationStatusUsingGET",
        "summary": "Get application configuration status by the given taskId"
      }
    },
    "/api/applications/agents/start": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"taskStatuses\" : [ {\n    \"taskID\" : \"task_id_1\",\n    \"resources\" : [ \"vm_id_1\", \"vm_id_2\" ]\n  }, {\n    \"taskID\" : \"task_id_2\",\n    \"resources\" : [ \"vm_id_3\", \"vm_id_4\" ]\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/agent-task-statuses"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:agent-task-statuses xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:taskStatuses>\n        <ops:taskStatus taskID=\"task_id_1\">\n            <ops:resources>\n                <ops:resource>vm_id_1</ops:resource>\n                <ops:resource>vm_id_2</ops:resource>\n            </ops:resources>\n        </ops:taskStatus>\n        <ops:taskStatus taskID=\"task_id_2\">\n            <ops:resources>\n                <ops:resource>vm_id_3</ops:resource>\n                <ops:resource>vm_id_4</ops:resource>\n            </ops:resources>\n        </ops:taskStatus>\n    </ops:taskStatuses>\n</ops:agent-task-statuses>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/agent-task-statuses"
                }
              }
            },
            "description": "The result of task status"
          }
        },

        "tags": [
          "Applications"
        ],
        "deprecated": false,
        "description": "Start agent on the specified resources",
        "operationId": "startAgentUsingPUT",
        "requestBody": {
          "$ref": "#/components/requestBodies/resource-parameters"
        },
        "summary": "Start agent on the specified resources"
      }
    },
    "/api/applications/agents/stop": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"taskStatuses\" : [ {\n    \"taskID\" : \"task_id_1\",\n    \"resources\" : [ \"vm_id_1\", \"vm_id_2\" ]\n  }, {\n    \"taskID\" : \"task_id_2\",\n    \"resources\" : [ \"vm_id_3\", \"vm_id_4\" ]\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/agent-task-statuses"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:agent-task-statuses xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:taskStatuses>\n        <ops:taskStatus taskID=\"task_id_1\">\n            <ops:resources>\n                <ops:resource>vm_id_1</ops:resource>\n                <ops:resource>vm_id_2</ops:resource>\n            </ops:resources>\n        </ops:taskStatus>\n        <ops:taskStatus taskID=\"task_id_2\">\n            <ops:resources>\n                <ops:resource>vm_id_3</ops:resource>\n                <ops:resource>vm_id_4</ops:resource>\n            </ops:resources>\n        </ops:taskStatus>\n    </ops:taskStatuses>\n</ops:agent-task-statuses>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/agent-task-statuses"
                }
              }
            },
            "description": "The result of task status"
          }
        },

        "tags": [
          "Applications"
        ],
        "deprecated": false,
        "description": "Stop agent on the specified resources",
        "operationId": "stopAgentUsingPUT",
        "requestBody": {
          "$ref": "#/components/requestBodies/resource-parameters"
        },
        "summary": "Stop agent on the specified resources"
      }
    },
    "/api/applications/agents/upgrade": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"taskStatuses\" : [ {\n    \"taskID\" : \"task_id_1\",\n    \"resources\" : [ \"vm_id_1\", \"vm_id_2\" ]\n  }, {\n    \"taskID\" : \"task_id_2\",\n    \"resources\" : [ \"vm_id_3\", \"vm_id_4\" ]\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/agent-task-statuses"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:agent-task-statuses xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:taskStatuses>\n        <ops:taskStatus taskID=\"task_id_1\">\n            <ops:resources>\n                <ops:resource>vm_id_1</ops:resource>\n                <ops:resource>vm_id_2</ops:resource>\n            </ops:resources>\n        </ops:taskStatus>\n        <ops:taskStatus taskID=\"task_id_2\">\n            <ops:resources>\n                <ops:resource>vm_id_3</ops:resource>\n                <ops:resource>vm_id_4</ops:resource>\n            </ops:resources>\n        </ops:taskStatus>\n    </ops:taskStatuses>\n</ops:agent-task-statuses>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/agent-task-statuses"
                }
              }
            },
            "description": "The result of task status"
          }
        },

        "tags": [
          "Applications"
        ],
        "deprecated": false,
        "description": "Upgrade app monitoring agent on the specified resources",
        "operationId": "upgradeAgentUsingPUT",
        "requestBody": {
          "$ref": "#/components/requestBodies/resource-parameters"
        },
        "summary": "Upgrade agent on the specified resources"
      }
    },
    "/api/applications/agents/{id}/services": {
      "delete": {
        "parameters": [
          {
            "description": "Resource identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/application-task-statuses"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/application-task-statuses"
                }
              }
            },
            "description": "The result of task status"
          }
        },

        "tags": [
          "Applications"
        ],
        "deprecated": false,
        "description": "Remove application service configuration from the specified resource",
        "operationId": "removeServicesConfigurationsUsingDELETE",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/service-configuration-delete-parameters"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/service-configuration-delete-parameters"
              }
            }
          },
          "description": "Services need to be deleted",
          "required": true
        },
        "summary": "Remove application service configuration from the specified resource"
      },
      "get": {
        "parameters": [
          {
            "description": "Resource identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"services\" : [ {\n    \"serviceName\" : \"service_name\",\n    \"configurations\" : [ {\n      \"configName\" : \"config_name\",\n      \"isActivated\" : true\n    }, {\n      \"configName\" : \"config_name\",\n      \"isActivated\" : true\n    } ]\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/application-services"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:application-services xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:services>\n        <ops:service serviceName=\"service_name\">\n            <ops:configurations>\n                <ops:configuration configName=\"config_name\">\n                    <ops:isActivated>true</ops:isActivated>\n                    <ops:parameters/>\n                </ops:configuration>\n                <ops:configuration configName=\"config_name\">\n                    <ops:isActivated>true</ops:isActivated>\n                    <ops:parameters/>\n                </ops:configuration>\n            </ops:configurations>\n        </ops:service>\n    </ops:services>\n</ops:application-services>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/application-services"
                }
              }
            },
            "description": "The applications service configurations"
          }
        },

        "tags": [
          "Applications"
        ],
        "deprecated": false,
        "description": "Get all services on a specified resource",
        "operationId": "getServicesConfigurationsUsingGET",
        "summary": "Get applications service configurations on the resource"
      },
      "post": {
        "parameters": [
          {
            "description": "Resource identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"taskStatuses\" : [ {\n    \"taskID\" : \"task_id_1\",\n    \"resources\" : [ \"config_name1\" ]\n  }, {\n    \"taskID\" : \"task_id_2\",\n    \"resources\" : [ \"config_name2\" ]\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/application-task-statuses"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:application-task-statuses xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:taskStatuses>\n        <ops:taskStatus taskID=\"task_id_1\">\n            <ops:resources>\n                <ops:resource>config_name1</ops:resource>\n            </ops:resources>\n        </ops:taskStatus>\n        <ops:taskStatus taskID=\"task_id_2\">\n            <ops:resources>\n                <ops:resource>config_name2</ops:resource>\n            </ops:resources>\n        </ops:taskStatus>\n    </ops:taskStatuses>\n</ops:application-task-statuses>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/application-task-statuses"
                }
              }
            },
            "description": "The result of task status"
          }
        },

        "tags": [
          "Applications"
        ],
        "deprecated": false,
        "description": "Save application service configuration on the specified resource",
        "operationId": "saveServicesConfigurationsUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/application-services"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/application-services"
              }
            }
          },
          "description": "Services needed to save",
          "required": true
        },
        "summary": "Save application service configuration on the specified resource"
      },
      "put": {
        "parameters": [
          {
            "description": "Resource identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"taskStatuses\" : [ {\n    \"taskID\" : \"task_id_1\",\n    \"resources\" : [ \"config_name1\" ]\n  }, {\n    \"taskID\" : \"task_id_2\",\n    \"resources\" : [ \"config_name2\" ]\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/application-task-statuses"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:application-task-statuses xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:taskStatuses>\n        <ops:taskStatus taskID=\"task_id_1\">\n            <ops:resources>\n                <ops:resource>config_name1</ops:resource>\n            </ops:resources>\n        </ops:taskStatus>\n        <ops:taskStatus taskID=\"task_id_2\">\n            <ops:resources>\n                <ops:resource>config_name2</ops:resource>\n            </ops:resources>\n        </ops:taskStatus>\n    </ops:taskStatuses>\n</ops:application-task-statuses>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/application-task-statuses"
                }
              }
            },
            "description": "The result of task status"
          }
        },

        "tags": [
          "Applications"
        ],
        "deprecated": false,
        "description": "Update application service configuration on the specified resource",
        "operationId": "updateServicesConfigurationsUsingPUT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/application-services"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/application-services"
              }
            }
          },
          "description": "Services needed to edit",
          "required": true
        },
        "summary": "Update application service configuration on the specified resource"
      }
    },
    "/api/applications/agents/{id}/services/{name}": {
      "get": {
        "parameters": [
          {
            "description": "Resource identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Name of the service",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"configurations\" : [ {\n    \"configName\" : \"config_name1\",\n    \"isActivated\" : true\n  }, {\n    \"configName\" : \"config_name2\",\n    \"isActivated\" : true\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/service-configurations"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:service-configurations xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:configurations>\n        <ops:configuration configName=\"config_name1\">\n            <ops:isActivated>true</ops:isActivated>\n            <ops:parameters/>\n        </ops:configuration>\n        <ops:configuration configName=\"config_name2\">\n            <ops:isActivated>true</ops:isActivated>\n            <ops:parameters/>\n        </ops:configuration>\n    </ops:configurations>\n</ops:service-configurations>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/service-configurations"
                }
              }
            },
            "description": "The application configuration"
          }
        },

        "tags": [
          "Applications"
        ],
        "deprecated": false,
        "description": "Get all configurations by service name on a specified resource",
        "operationId": "getServiceConfigurationsUsingGET",
        "summary": "Get application service configuration by service name on the resource"
      }
    },
    "/api/applications/agents/{taskId}/status": {
      "get": {
        "parameters": [
          {
            "description": "Action identifier (result of the action: POST /api/actions/{id})",
            "in": "path",
            "name": "taskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"taskId\" : \"c6ac7a03-2be8-49a5-9efa-2646e580b572\",\n  \"name\" : \"Bootstrap virtual Machines\",\n  \"startDate\" : \"2020-02-10T14:05:28.202Z\",\n  \"bootstrapObjectStatuses\" : [ {\n    \"id\" : \"83ff60ca-dec2-498e-a3e3-ff34fda43095\",\n    \"stage\" : \"INSTALLING\",\n    \"state\" : \"COMPLETED_SUCCESSFULLY\",\n    \"creationDate\" : \"2020-02-10T14:05:28.202Z\",\n    \"messages\" : [ {\n      \"message\" : \"Install operation task failed\",\n      \"level\" : \"ERROR\",\n      \"timestamp\" : \"2020-02-10T14:05:38.202Z\"\n    }, {\n      \"message\" : \"The operation is not allowed in current state\",\n      \"level\" : \"WARN\",\n      \"timestamp\" : \"2020-02-10T14:05:38.202Z\"\n    }, {\n      \"message\" : \"Successfully Dispatched Action: BOOTSTRAPVM\",\n      \"level\" : \"INFO\",\n      \"timestamp\" : \"2020-02-10T14:05:38.202Z\"\n    } ]\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/bootstrap-status"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:bootstrap-status taskId=\"f6dcc46b-62bd-4334-b84e-7d219cb732f5\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:name>Bootstrap virtual Machines</ops:name>\n    <ops:startDate>2020-02-10T14:05:28.202Z</ops:startDate>\n    <ops:bootstrapObjectStatuses>\n        <ops:bootstrap-object-status id=\"9ed7794e-2205-4570-b183-147877f2f070\">\n            <ops:stage>INSTALLING</ops:stage>\n            <ops:state>COMPLETED_SUCCESSFULLY</ops:state>\n            <ops:creationDate>2020-02-10T14:05:28.202Z</ops:creationDate>\n            <ops:messages>\n                <ops:message>\n                    <ops:message>Install operation task failed</ops:message>\n                    <ops:level>ERROR</ops:level>\n                    <ops:timestamp>2020-02-10T14:05:38.202Z</ops:timestamp>\n                </ops:message>\n                <ops:message>\n                    <ops:message>The operation is not allowed in current state</ops:message>\n                    <ops:level>WARN</ops:level>\n                    <ops:timestamp>2020-02-10T14:05:38.202Z</ops:timestamp>\n                </ops:message>\n                <ops:message>\n                    <ops:message>Successfully Dispatched Action: BOOTSTRAPVM</ops:message>\n                    <ops:level>INFO</ops:level>\n                    <ops:timestamp>2020-02-10T14:05:38.202Z</ops:timestamp>\n                </ops:message>\n            </ops:messages>\n        </ops:bootstrap-object-status>\n    </ops:bootstrapObjectStatuses>\n</ops:bootstrap-status>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/bootstrap-status"
                }
              }
            },
            "description": "The populated action information"
          }
        },

        "tags": [
          "Applications"
        ],
        "deprecated": false,
        "description": "The response contains information about the bootstrap action status by the given taskId.",
        "operationId": "getAgentOperationStatusUsingGET",
        "summary": "Get bootstrap action status by the given taskId"
      }
    },
    "/api/applications/clientCertificate/{collectorId}": {
      "post": {
        "parameters": [
          {
            "description": "Collector identifier to send the metrics for",
            "in": "path",
            "name": "collectorId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "byte",
                  "type": "string"
                }
              },
              "application/octet-stream": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "format": "byte",
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "byte",
                  "type": "string"
                }
              }
            },
            "description": "The certification is signed successfully"
          }
        },

        "tags": [
          "Applications"
        ],
        "deprecated": false,
        "description": "Query to sign the Arc Client certificate",
        "operationId": "signClientCertificateUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "format": "byte",
                "type": "string"
              }
            },
            "application/octet-stream": {
              "schema": {
                "format": "byte",
                "type": "string"
              }
            },
            "application/xml": {
              "schema": {
                "format": "byte",
                "type": "string"
              }
            }
          },
          "description": "Client certificate signing request",
          "required": true
        },
        "summary": "Query to sign the Arc Client certificate"
      }
    },
    "/api/applications/clientCertificate/{collectorIpOrGroupName}": {
      "get": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Client Identifier.This is combination of both VCID and VMMOR/UUID (VCID_VMMOR) of the VM",
            "in": "query",
            "name": "clientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Collector identifier to generate the certificates",
            "in": "path",
            "name": "collectorIpOrGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "byte",
                  "type": "string"
                }
              },
              "application/octet-stream": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "format": "byte",
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "byte",
                  "type": "string"
                }
              }
            },
            "description": "Certificates generated successfully"
          }
        },

        "tags": [
          "Applications"
        ],
        "deprecated": false,
        "description": "Download Client Certificates",
        "operationId": "downloadClientCertificateUsingGET",
        "summary": "Download Client Certificates"
      }
    },
    "/api/applications/resources": {
      "get": {
        "parameters": [
          {
            "description": "Page number from which data needs to be displayed (0-based)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Expected number of entries per page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"applicationResources\" : [ {\n    \"resourceId\" : \"eb92114e-286b-4291-85a3-3768ba476182\",\n    \"appMonitoringAdapterInstanceId\" : \"174b9eee-6367-41f9-91e1-139f1907185a\",\n    \"agentStatus\" : \"AGENT_RUNNING\",\n    \"lastOperationStatus\" : \"AGENT_INSTALL_SUCCESS\",\n    \"powerState\" : \"Powered On\",\n    \"isUpdateRequired\" : true,\n    \"agentVersion\" : \"8.0.0.379\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/application-resources"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:application-resources xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:applicationResources>\n        <ops:applicationResource>\n            <ops:resourceId>23c464cc-fa68-46f2-a9b4-da8e84ae7794</ops:resourceId>\n            <ops:appMonitoringAdapterInstanceId>e579fb7d-c290-46a9-b866-5e5f8d9ecc40</ops:appMonitoringAdapterInstanceId>\n            <ops:agentStatus>AGENT_RUNNING</ops:agentStatus>\n            <ops:lastOperationStatus>AGENT_INSTALL_SUCCESS</ops:lastOperationStatus>\n            <ops:powerState>Powered On</ops:powerState>\n            <ops:isUpdateRequired>true</ops:isUpdateRequired>\n            <ops:agentVersion>8.0.0.379</ops:agentVersion>\n        </ops:applicationResource>\n    </ops:applicationResources>\n</ops:application-resources>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/application-resources"
                }
              }
            },
            "description": "The application monitoring resources"
          }
        },

        "tags": [
          "Applications"
        ],
        "deprecated": false,
        "description": "Get all available resources for application monitoring",
        "operationId": "getApplicationResourcesUsingGET",
        "summary": "Get all available resources for application monitoring"
      }
    },
    "/api/applications/services/{name}": {
      "get": {
        "parameters": [
          {
            "description": "The name of the service",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"configName\" : \"config_name\",\n  \"isActivated\" : true\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/service-configuration"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:service-configuration configName=\"config_name\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:isActivated>true</ops:isActivated>\n    <ops:parameters/>\n</ops:service-configuration>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/service-configuration"
                }
              }
            },
            "description": "The application configuration template"
          }
        },

        "tags": [
          "Applications"
        ],
        "deprecated": false,
        "description": "Provides a template for the specified service",
        "operationId": "getServiceConfigurationTemplateUsingGET",
        "summary": "Get template of application configuration"
      }
    },
    "/api/applications/subscribe": {
      "put": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "IP of the collector or collector group name",
            "in": "query",
            "name": "collectorIP_or_GroupNm",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "The OS type, e.g. Windows, Unix",
            "in": "query",
            "name": "ostype",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "The IP of Virtual Machine",
            "in": "query",
            "name": "vmIp",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "byte",
                  "type": "string"
                }
              },
              "application/octet-stream": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "format": "byte",
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "byte",
                  "type": "string"
                }
              }
            },
            "description": "The bootstrap bundle binary zip file"
          }
        },

        "tags": [
          "Applications"
        ],
        "deprecated": false,
        "description": "Bootstrap Bundle primarily contains client certificates, Grains File containing configuration of\nARC Agent Components (ucp-minion, salt-minion, Telegraf) and seeder script.\nThis API also preseeds salt minion keys in ARC.\nIn SAAS, it also creates adapter if adapter does not exist.",
        "operationId": "subscribeUsingPUT",
        "summary": "Subscribe to Application Monitoring by downloading bootstrap bundle containing all required scripts for bootstraping ARC Agent from Endpoints"
      }
    },
    "/api/applications/unsubscribe": {
      "put": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Flag that indicates whether to clean all traces of application monitoring agent from vrops and ARC or not",
            "in": "query",
            "name": "cleanup",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "IP of the collector or collector group name",
            "in": "query",
            "name": "collectorIP_or_GroupNm",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "The OS type, e.g. Windows, Unix",
            "in": "query",
            "name": "ostype",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "The IP of Virtual Machine",
            "in": "query",
            "name": "vmIp",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "byte",
                  "type": "string"
                }
              },
              "application/octet-stream": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "format": "byte",
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "byte",
                  "type": "string"
                }
              }
            },
            "description": "The bootstrap bundle binary zip file"
          }
        },

        "tags": [
          "Applications"
        ],
        "deprecated": false,
        "description": "Bootstrap Bundle primarily contains client certificates, Grains File containing configuration of\nARC Agent Components (ucp-minion, salt-minion, Telegraf) and seeder script.",
        "operationId": "unsubscribeUsingPUT",
        "summary": "UnSubscribe to Application Monitoring by downloading bootstrap bundle containing all required scripts for Unbootstraping ARC Agent from Endpoints."
      }
    },
    "/api/audit/system": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"auditReports\" : [ {\n    \"name\" : \"Object\",\n    \"audits\" : [ {\n      \"name\" : \"Objects Configured\",\n      \"count\" : 22\n    }, {\n      \"name\" : \"Objects Collecting\",\n      \"count\" : 20\n    }, {\n      \"name\" : \"Object Types\",\n      \"count\" : 9\n    }, {\n      \"name\" : \"Adapters\",\n      \"audits\" : [ {\n        \"name\" : \"VMWARE\",\n        \"count\" : 6,\n        \"audits\" : [ {\n          \"name\" : \"vSphere World\",\n          \"count\" : 1\n        }, {\n          \"name\" : \"HostSystem\",\n          \"count\" : 4\n        }, {\n          \"name\" : \"VM Entity Status\",\n          \"count\" : 1\n        } ]\n      }, {\n        \"name\" : \"Licensing\",\n        \"count\" : 2,\n        \"audits\" : [ {\n          \"name\" : \"Universe\",\n          \"count\" : 1\n        }, {\n          \"name\" : \"vC-Ops-Self-Monitoring\",\n          \"count\" : 1\n        }, {\n          \"name\" : \"Enterprise\",\n          \"count\" : 1\n        }, {\n          \"name\" : \"ContainerAdapterInstance\",\n          \"count\" : 1\n        }, {\n          \"name\" : \"Environment\",\n          \"count\" : 3\n        }, {\n          \"name\" : \"AIM Plugin\",\n          \"count\" : 3\n        } ]\n      } ]\n    } ]\n  }, {\n    \"name\" : \"Metrics\",\n    \"audits\" : [ {\n      \"name\" : \"Metrics Configured\",\n      \"count\" : 6801\n    }, {\n      \"name\" : \"Metrics Collecting\",\n      \"count\" : 1796\n    }, {\n      \"name\" : \"Super Metrics\",\n      \"count\" : 0\n    }, {\n      \"name\" : \"Metrics Configured\",\n      \"count\" : 920\n    } ]\n  }, {\n    \"name\" : \"Applications Count\",\n    \"count\" : 0\n  }, {\n    \"name\" : \"Custom Groups\",\n    \"count\" : 12\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/system-audit-reports"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:system-audit-reports xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:system-audit-object name=\"Object\">\n        <ops:audits>\n            <ops:system-audit-object name=\"Objects Configured\" count=\"22\">\n                <ops:audits/>\n            </ops:system-audit-object>\n            <ops:system-audit-object name=\"Objects Collecting\" count=\"20\">\n                <ops:audits/>\n            </ops:system-audit-object>\n            <ops:system-audit-object name=\"Object Types\" count=\"9\">\n                <ops:audits/>\n            </ops:system-audit-object>\n            <ops:system-audit-object name=\"Adapters\">\n                <ops:audits>\n                    <ops:system-audit-object name=\"VMWARE\" count=\"6\">\n                        <ops:audits>\n                            <ops:system-audit-object name=\"vSphere World\" count=\"1\">\n                                <ops:audits/>\n                            </ops:system-audit-object>\n                            <ops:system-audit-object name=\"HostSystem\" count=\"4\">\n                                <ops:audits/>\n                            </ops:system-audit-object>\n                            <ops:system-audit-object name=\"VM Entity Status\" count=\"1\">\n                                <ops:audits/>\n                            </ops:system-audit-object>\n                        </ops:audits>\n                    </ops:system-audit-object>\n                    <ops:system-audit-object name=\"Licensing\" count=\"2\">\n                        <ops:audits>\n                            <ops:system-audit-object name=\"Universe\" count=\"1\">\n                                <ops:audits/>\n                            </ops:system-audit-object>\n                            <ops:system-audit-object name=\"vC-Ops-Self-Monitoring\" count=\"1\">\n                                <ops:audits/>\n                            </ops:system-audit-object>\n                            <ops:system-audit-object name=\"Enterprise\" count=\"1\">\n                                <ops:audits/>\n                            </ops:system-audit-object>\n                            <ops:system-audit-object name=\"ContainerAdapterInstance\" count=\"1\">\n                                <ops:audits/>\n                            </ops:system-audit-object>\n                            <ops:system-audit-object name=\"Environment\" count=\"3\">\n                                <ops:audits/>\n                            </ops:system-audit-object>\n                            <ops:system-audit-object name=\"AIM Plugin\" count=\"3\">\n                                <ops:audits/>\n                            </ops:system-audit-object>\n                        </ops:audits>\n                    </ops:system-audit-object>\n                </ops:audits>\n            </ops:system-audit-object>\n        </ops:audits>\n    </ops:system-audit-object>\n    <ops:system-audit-object name=\"Metrics\">\n        <ops:audits>\n            <ops:system-audit-object name=\"Metrics Configured\" count=\"6801\">\n                <ops:audits/>\n            </ops:system-audit-object>\n            <ops:system-audit-object name=\"Metrics Collecting\" count=\"1796\">\n                <ops:audits/>\n            </ops:system-audit-object>\n            <ops:system-audit-object name=\"Super Metrics\" count=\"0\">\n                <ops:audits/>\n            </ops:system-audit-object>\n            <ops:system-audit-object name=\"Metrics Configured\" count=\"920\">\n                <ops:audits/>\n            </ops:system-audit-object>\n        </ops:audits>\n    </ops:system-audit-object>\n    <ops:system-audit-object name=\"Applications Count\" count=\"0\">\n        <ops:audits/>\n    </ops:system-audit-object>\n    <ops:system-audit-object name=\"Custom Groups\" count=\"12\">\n        <ops:audits/>\n    </ops:system-audit-object>\n</ops:system-audit-reports>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/system-audit-reports"
                }
              }
            },
            "description": "The system audit data"
          }
        },

        "tags": [
          "Audit"
        ],
        "deprecated": false,
        "description": "Get system audit report",
        "operationId": "getSystemAuditUsingGET",
        "summary": "Get system audit report"
      }
    },
    "/api/auth/currentuser": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            },
            "description": "Details of the user initiated this API method"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "Using this method, one can look up the details of a user initiated this API method.\n<br><br><b>Note:</b>&nbsp;The provided hrefs are functional for the users with 'administration.accesscontrol.viewpage' (View Access Control Page) privilege.",
        "operationId": "getCurrentUserUsingGET",
        "summary": "Look up for an initiator of this API method"
      }
    },
    "/api/auth/currentuser/permissions": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/role-permissions"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/role-permissions"
                }
              }
            },
            "description": "Role Permissions object"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "<br><br><b>Note:</b>&nbsp;The provided hrefs are functional for the users with 'administration.accesscontrol.viewpage' (View Access Control Page) privilege.",
        "operationId": "getAssignedRolePermissionsForCurrentUserUsingGET",
        "summary": "Get assigned role permissions for an initiator of this API method"
      }
    },
    "/api/auth/currentuser/roles/{roleName}/privileges": {
      "get": {
        "parameters": [
          {
            "description": "The name of the role",
            "in": "path",
            "name": "roleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/privileges"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/privileges"
                }
              }
            },
            "description": "The list of privileges"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "<b>Note:</b>The provided hrefs are functional for the users with 'administration.accesscontrol.viewpage' (View Access Control Page) privilege.",
        "operationId": "getCurrentUserRolePrivilegesUsingGET",
        "summary": "Get privileges of a role for an initiator of this API method"
      }
    },
    "/api/auth/privilegegroups": {
      "get": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "The keys of the privilege groups to get, null or empty to return all",
            "explode": true,
            "in": "query",
            "name": "key",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"privilegeGroups\" : [ {\n    \"key\" : \"PowerUses\",\n    \"name\" : \"Power Users\",\n    \"description\" : \"Users with elevated but not adminitrator privileges\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/privilege-groups"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:privilege-groups xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:privilege-group key=\"PowerUses\">\n        <ops:name>Power Users</ops:name>\n        <ops:description>Users with elevated but not adminitrator privileges</ops:description>\n    </ops:privilege-group>\n</ops:privilege-groups>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/privilege-groups"
                }
              }
            },
            "description": "The list of privilege groups"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "If no privilege key is set, all available Privilege Groups will be granted",
        "operationId": "getAvailablePrivilegeGroupsUsingGET",
        "summary": "Get the available privilege groups"
      }
    },
    "/api/auth/privileges": {
      "get": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "The keys of the privileges to get, null or empty to return all",
            "explode": true,
            "in": "query",
            "name": "key",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"privileges\" : [ {\n    \"key\" : \"ManageAlerts\",\n    \"name\" : \"Manage Alerts\",\n    \"description\" : \"Manage and view Alerts in the system\"\n  }, {\n    \"key\" : \"ManageAlarms\",\n    \"name\" : \"Manage Alarms\",\n    \"description\" : \"Manage and view Alarms in the system\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/privileges"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:privileges xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:privilege key=\"ManageAlerts\">\n        <ops:name>Manage Alerts</ops:name>\n        <ops:description>Manage and view Alerts in the system</ops:description>\n    </ops:privilege>\n    <ops:privilege key=\"ManageAlarms\">\n        <ops:name>Manage Alarms</ops:name>\n        <ops:description>Manage and view Alarms in the system</ops:description>\n    </ops:privilege>\n</ops:privileges>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/privileges"
                }
              }
            },
            "description": "The list of privileges"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "If no privilege key is set, all available Privileges will be granted",
        "operationId": "getAvailablePrivilegesUsingGET",
        "summary": "Get the available privileges"
      }
    },
    "/api/auth/roles": {
      "get": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "List of valid role names",
            "explode": true,
            "in": "query",
            "name": "roleName",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user-roles"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user-roles"
                }
              }
            },
            "description": "The application role object"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "Find list of application roles using the role names",
        "operationId": "getRolesUsingGET",
        "summary": "Find list of application roles using the role names"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"name\" : \"API Administrator\",\n  \"description\" : \"Role to allow administrative access to all Suite API methods\",\n  \"privilege-keys\" : [ \"ManageAlerts\", \"ManageAlarms\", \"ManageNotificationPlugins\" ],\n  \"system-created\" : false\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user-role"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:user-role system-created=\"false\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:name>API Administrator</ops:name>\n    <ops:description>Role to allow administrative access to all Suite API methods</ops:description>\n    <ops:privilege-keys>\n        <ops:privilege-key>ManageAlerts</ops:privilege-key>\n        <ops:privilege-key>ManageAlarms</ops:privilege-key>\n        <ops:privilege-key>ManageNotificationPlugins</ops:privilege-key>\n    </ops:privilege-keys>\n</ops:user-role>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user-role"
                }
              }
            },
            "description": "The created UserRole"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "Create a user role",
        "operationId": "createUserRoleUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/user-role"
        },
        "summary": "Create a user role"
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"name\" : \"API Administrator\",\n  \"description\" : \"Role to allow administrative access to all Suite API methods\",\n  \"privilege-keys\" : [ \"ManageAlerts\", \"ManageAlarms\", \"ManageNotificationPlugins\" ],\n  \"system-created\" : false\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user-role"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:user-role system-created=\"false\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:name>API Administrator</ops:name>\n    <ops:description>Role to allow administrative access to all Suite API methods</ops:description>\n    <ops:privilege-keys>\n        <ops:privilege-key>ManageAlerts</ops:privilege-key>\n        <ops:privilege-key>ManageAlarms</ops:privilege-key>\n        <ops:privilege-key>ManageNotificationPlugins</ops:privilege-key>\n    </ops:privilege-keys>\n</ops:user-role>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user-role"
                }
              }
            },
            "description": "The updated UserRole"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "Name of the role cannot be changed.",
        "operationId": "updateUserRoleUsingPUT",
        "requestBody": {
          "$ref": "#/components/requestBodies/user-role"
        },
        "summary": "Update a user role"
      }
    },
    "/api/auth/roles/{roleName}": {
      "delete": {
        "parameters": [
          {
            "description": "The name of the role",
            "in": "path",
            "name": "roleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The user role is deleted successfully"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "Remove role with given role name",
        "operationId": "deleteUserRoleUsingDELETE",
        "summary": "Remove role with given role name"
      },
      "get": {
        "parameters": [
          {
            "description": "The name of the role.",
            "in": "path",
            "name": "roleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user-role"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user-role"
                }
              }
            },
            "description": "The application role object"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "Look up a role with the given name",
        "operationId": "getRoleByNameUsingGET",
        "summary": "Look up a role with the given name"
      }
    },
    "/api/auth/roles/{roleName}/privileges": {
      "delete": {
        "parameters": [
          {
            "description": "The name of the role",
            "in": "path",
            "name": "roleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"privilege-key\" : [ \"Power On VM\", \"Power Off VM\" ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/privilege-keys"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:privilege-keys xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:privilege-key>Power On VM</ops:privilege-key>\n    <ops:privilege-key>Power Off VM</ops:privilege-key>\n</ops:privilege-keys>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/privilege-keys"
                }
              }
            },
            "description": "The resulting set of privilege keys remaining for the role"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "Remove specified privileges from the user role",
        "operationId": "removeRolePrivilegesUsingDELETE",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/privilege-keys"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/privilege-keys"
              }
            }
          },
          "description": "The list of privileges to remove",
          "required": true
        },
        "summary": "Remove specified privileges from the user role"
      },
      "get": {
        "parameters": [
          {
            "description": "The name of the role",
            "in": "path",
            "name": "roleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"privileges\" : [ {\n    \"key\" : \"ManageAlerts\",\n    \"name\" : \"Manage Alerts\",\n    \"description\" : \"Manage and view Alerts in the system\"\n  }, {\n    \"key\" : \"ManageAlarms\",\n    \"name\" : \"Manage Alarms\",\n    \"description\" : \"Manage and view Alarms in the system\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/privileges"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:privileges xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:privilege key=\"ManageAlerts\">\n        <ops:name>Manage Alerts</ops:name>\n        <ops:description>Manage and view Alerts in the system</ops:description>\n    </ops:privilege>\n    <ops:privilege key=\"ManageAlarms\">\n        <ops:name>Manage Alarms</ops:name>\n        <ops:description>Manage and view Alarms in the system</ops:description>\n    </ops:privilege>\n</ops:privileges>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/privileges"
                }
              }
            },
            "description": "The list of privileges for the specified user role"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "Get the privileges for a user role",
        "operationId": "getRolePrivilegesUsingGET",
        "summary": "Get the privileges for a user role"
      },
      "post": {
        "parameters": [
          {
            "description": "The name of the role",
            "in": "path",
            "name": "roleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"privilege-key\" : [ \"Power On VM\", \"Power Off VM\" ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/privilege-keys"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:privilege-keys xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:privilege-key>Power On VM</ops:privilege-key>\n    <ops:privilege-key>Power Off VM</ops:privilege-key>\n</ops:privilege-keys>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/privilege-keys"
                }
              }
            },
            "description": "The resulting set of privilege keys"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "New privileges union with any previous privileges.",
        "operationId": "addRolePrivilegesUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/privilege-keys"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/privilege-keys"
              }
            }
          },
          "description": "The list of privileges to be added",
          "required": true
        },
        "summary": "Add the privileges to a user role"
      },
      "put": {
        "parameters": [
          {
            "description": "The name of the role",
            "in": "path",
            "name": "roleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"privilege-key\" : [ \"Power On VM\", \"Power Off VM\" ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/privilege-keys"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:privilege-keys xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:privilege-key>Power On VM</ops:privilege-key>\n    <ops:privilege-key>Power Off VM</ops:privilege-key>\n</ops:privilege-keys>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/privilege-keys"
                }
              }
            },
            "description": "The resulting set of privilege keys"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "Replaces any previous privileges.",
        "operationId": "setRolePrivilegesUsingPUT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/privilege-keys"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/privilege-keys"
              }
            }
          },
          "description": "The list of privileges to be set",
          "required": true
        },
        "summary": "Set the privileges for a user role"
      }
    },
    "/api/auth/scopes": {
      "delete": {
        "responses": {
          "200": {
            "description": "The scopes are deleted successfully"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "Delete scopes.",
        "operationId": "deleteScopesUsingDELETE",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/uuid-values"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/uuid-values"
              }
            }
          },
          "description": "Scope ids to delete",
          "required": true
        },
        "summary": "Delete scopes"
      },
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"scopesDetails\" : [ {\n    \"id\" : \"57922ca1-1bea-46c5-80d8-9f112b8805b0\",\n    \"name\" : \"MS_SQL_Restricted_VMs\",\n    \"description\" : \"Allow only VMs having application MS SQL Server\",\n    \"createdBy\" : \"7acbd075-a2cc-450a-8af8-d41b3149e3eb\",\n    \"creationTime\" : 1689236473724,\n    \"lastModifiedBy\" : \"911426f1-e16c-4c93-a16d-da5ce3f88892\",\n    \"lastModifiedTime\" : 1689236473724,\n    \"traversalSpecInstances\" : [ {\n      \"adapterKind\" : \"VMWARE\",\n      \"resourceKind\" : \"vSphere World\",\n      \"name\" : \"vSphere Hosts and Clusters\",\n      \"resourceSelection\" : [ {\n        \"type\" : \"SPECIFIC\",\n        \"resourceId\" : [ \"7f430ad1-9648-4419-9bc1-7cb0d2855f7c\" ]\n      } ],\n      \"selectAllResources\" : false\n    } ]\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/scopes-details"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:scopes-details xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:scopesDetails>\n        <ops:scopeDetails id=\"57922ca1-1bea-46c5-80d8-9f112b8805b0\">\n            <ops:name>MS_SQL_Restricted_VMs</ops:name>\n            <ops:description>Allow only VMs having application MS SQL Server</ops:description>\n            <ops:createdBy>dd0a4118-01ca-4682-95f6-f44c60754bdc</ops:createdBy>\n            <ops:creationTime>1689236473726</ops:creationTime>\n            <ops:lastModifiedBy>046027e5-3222-4e83-900d-9bc06135fe00</ops:lastModifiedBy>\n            <ops:lastModifiedTime>1689236473726</ops:lastModifiedTime>\n            <ops:traversalSpecInstances>\n                <ops:traversalSpecInstance selectAllResources=\"false\">\n                    <ops:adapterKind>VMWARE</ops:adapterKind>\n                    <ops:resourceKind>vSphere World</ops:resourceKind>\n                    <ops:name>vSphere Hosts and Clusters</ops:name>\n                    <ops:resourceSelection type=\"SPECIFIC\">\n                        <ops:resourceId>7f430ad1-9648-4419-9bc1-7cb0d2855f7c</ops:resourceId>\n                    </ops:resourceSelection>\n                </ops:traversalSpecInstance>\n            </ops:traversalSpecInstances>\n        </ops:scopeDetails>\n    </ops:scopesDetails>\n</ops:scopes-details>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/scopes-details"
                }
              }
            },
            "description": "The scopes details"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "Get all scopes available in the environment",
        "operationId": "getAllObjectScopesUsingGET",
        "summary": "Get all scopes"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"57922ca1-1bea-46c5-80d8-9f112b8805b0\",\n  \"name\" : \"MS_SQL_Restricted_VMs\",\n  \"description\" : \"Allow only VMs having application MS SQL Server\",\n  \"traversalSpecInstances\" : [ {\n    \"adapterKind\" : \"VMWARE\",\n    \"resourceKind\" : \"vSphere World\",\n    \"name\" : \"vSphere Hosts and Clusters\",\n    \"resourceSelection\" : [ {\n      \"type\" : \"SPECIFIC\",\n      \"resourceId\" : [ \"7f430ad1-9648-4419-9bc1-7cb0d2855f7c\" ]\n    } ],\n    \"selectAllResources\" : false\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/scope"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:scope id=\"57922ca1-1bea-46c5-80d8-9f112b8805b0\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:name>MS_SQL_Restricted_VMs</ops:name>\n    <ops:description>Allow only VMs having application MS SQL Server</ops:description>\n    <ops:traversalSpecInstances>\n        <ops:traversalSpecInstance selectAllResources=\"false\">\n            <ops:adapterKind>VMWARE</ops:adapterKind>\n            <ops:resourceKind>vSphere World</ops:resourceKind>\n            <ops:name>vSphere Hosts and Clusters</ops:name>\n            <ops:resourceSelection type=\"SPECIFIC\">\n                <ops:resourceId>7f430ad1-9648-4419-9bc1-7cb0d2855f7c</ops:resourceId>\n            </ops:resourceSelection>\n        </ops:traversalSpecInstance>\n    </ops:traversalSpecInstances>\n</ops:scope>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/scope"
                }
              }
            },
            "description": "Created Scope"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "Create a new Scope.",
        "operationId": "createScopeUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/scope"
        },
        "summary": "Create a new Scope"
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"57922ca1-1bea-46c5-80d8-9f112b8805b0\",\n  \"name\" : \"MS_SQL_Restricted_VMs\",\n  \"description\" : \"Allow only VMs having application MS SQL Server\",\n  \"traversalSpecInstances\" : [ {\n    \"adapterKind\" : \"VMWARE\",\n    \"resourceKind\" : \"vSphere World\",\n    \"name\" : \"vSphere Hosts and Clusters\",\n    \"resourceSelection\" : [ {\n      \"type\" : \"SPECIFIC\",\n      \"resourceId\" : [ \"7f430ad1-9648-4419-9bc1-7cb0d2855f7c\" ]\n    } ],\n    \"selectAllResources\" : false\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/scope"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:scope id=\"57922ca1-1bea-46c5-80d8-9f112b8805b0\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:name>MS_SQL_Restricted_VMs</ops:name>\n    <ops:description>Allow only VMs having application MS SQL Server</ops:description>\n    <ops:traversalSpecInstances>\n        <ops:traversalSpecInstance selectAllResources=\"false\">\n            <ops:adapterKind>VMWARE</ops:adapterKind>\n            <ops:resourceKind>vSphere World</ops:resourceKind>\n            <ops:name>vSphere Hosts and Clusters</ops:name>\n            <ops:resourceSelection type=\"SPECIFIC\">\n                <ops:resourceId>7f430ad1-9648-4419-9bc1-7cb0d2855f7c</ops:resourceId>\n            </ops:resourceSelection>\n        </ops:traversalSpecInstance>\n    </ops:traversalSpecInstances>\n</ops:scope>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/scope"
                }
              }
            },
            "description": "Modified Scope"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "Modify a Scope",
        "operationId": "modifyScopeUsingPUT",
        "requestBody": {
          "$ref": "#/components/requestBodies/scope"
        },
        "summary": "Modify a Scope"
      }
    },
    "/api/auth/scopes/{scopeId}": {
      "get": {
        "parameters": [
          {
            "description": "The scope id to retrieve",
            "in": "path",
            "name": "scopeId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"57922ca1-1bea-46c5-80d8-9f112b8805b0\",\n  \"name\" : \"MS_SQL_Restricted_VMs\",\n  \"description\" : \"Allow only VMs having application MS SQL Server\",\n  \"createdBy\" : \"b74e0d5a-b29e-4ad2-802e-d40335f8116c\",\n  \"creationTime\" : 1689236474410,\n  \"lastModifiedBy\" : \"1e3c95e7-fb03-47d8-9a44-720880a39f28\",\n  \"lastModifiedTime\" : 1689236474410,\n  \"traversalSpecInstances\" : [ {\n    \"adapterKind\" : \"VMWARE\",\n    \"resourceKind\" : \"vSphere World\",\n    \"name\" : \"vSphere Hosts and Clusters\",\n    \"resourceSelection\" : [ {\n      \"type\" : \"SPECIFIC\",\n      \"resourceId\" : [ \"7f430ad1-9648-4419-9bc1-7cb0d2855f7c\" ]\n    } ],\n    \"selectAllResources\" : false\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/scope-details"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:scope-details id=\"57922ca1-1bea-46c5-80d8-9f112b8805b0\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:name>MS_SQL_Restricted_VMs</ops:name>\n    <ops:description>Allow only VMs having application MS SQL Server</ops:description>\n    <ops:createdBy>f79b3190-cc64-4e74-a70c-42f156e4bf04</ops:createdBy>\n    <ops:creationTime>1689236474410</ops:creationTime>\n    <ops:lastModifiedBy>8abd7fb8-2b2c-44d0-a9a2-77fc0a253009</ops:lastModifiedBy>\n    <ops:lastModifiedTime>1689236474410</ops:lastModifiedTime>\n    <ops:traversalSpecInstances>\n        <ops:traversalSpecInstance selectAllResources=\"false\">\n            <ops:adapterKind>VMWARE</ops:adapterKind>\n            <ops:resourceKind>vSphere World</ops:resourceKind>\n            <ops:name>vSphere Hosts and Clusters</ops:name>\n            <ops:resourceSelection type=\"SPECIFIC\">\n                <ops:resourceId>7f430ad1-9648-4419-9bc1-7cb0d2855f7c</ops:resourceId>\n            </ops:resourceSelection>\n        </ops:traversalSpecInstance>\n    </ops:traversalSpecInstances>\n</ops:scope-details>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/scope-details"
                }
              }
            },
            "description": "The scope corresponding to the specified id"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "Get the scope by its id",
        "operationId": "getScopeUsingGET",
        "summary": "Get the scope"
      }
    },
    "/api/auth/sources": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"sources\" : [ {\n    \"id\" : \"dbd2355b-6e37-405b-a68b-25fabef16eeb\",\n    \"name\" : \"test-dbd2355b-6e37-405b-a68b-25fabef16eeb\",\n    \"sourceType\" : {\n      \"id\" : \"VC\",\n      \"name\" : \"VC\",\n      \"description\" : \"xyzabcedefs\"\n    },\n    \"created\" : 0,\n    \"lastModified\" : 0\n  }, {\n    \"id\" : \"2d751baa-626b-4f40-b6f3-dab1c6b310e2\",\n    \"name\" : \"test-2d751baa-626b-4f40-b6f3-dab1c6b310e2\",\n    \"sourceType\" : {\n      \"id\" : \"OPEN_LDAP\",\n      \"name\" : \"OPEN_LDAP\",\n      \"description\" : \"xyzabcedefs\"\n    },\n    \"created\" : 0,\n    \"lastModified\" : 0\n  }, {\n    \"id\" : \"0d7d3923-f5d5-45f6-84d7-42ed22c38f70\",\n    \"name\" : \"test-0d7d3923-f5d5-45f6-84d7-42ed22c38f70\",\n    \"sourceType\" : {\n      \"id\" : \"ACTIVE_DIRECTORY\",\n      \"name\" : \"ACTIVE_DIRECTORY\",\n      \"description\" : \"xyzabcedefs\"\n    },\n    \"created\" : 0,\n    \"lastModified\" : 0\n  }, {\n    \"id\" : \"05796a27-8b3b-4366-832f-71f00325513d\",\n    \"name\" : \"test-05796a27-8b3b-4366-832f-71f00325513d\",\n    \"sourceType\" : {\n      \"id\" : \"OTHER\",\n      \"name\" : \"OTHER\",\n      \"description\" : \"xyzabcedefs\"\n    },\n    \"created\" : 0,\n    \"lastModified\" : 0\n  }, {\n    \"id\" : \"f63c200a-2007-41d7-8112-5ffeec7d93a3\",\n    \"name\" : \"test-f63c200a-2007-41d7-8112-5ffeec7d93a3\",\n    \"sourceType\" : {\n      \"id\" : \"VC_GROUP\",\n      \"name\" : \"VC_GROUP\",\n      \"description\" : \"xyzabcedefs\"\n    },\n    \"created\" : 0,\n    \"lastModified\" : 0\n  }, {\n    \"id\" : \"d1c9c82c-c62b-40fd-a6a8-0d8f8e7665d0\",\n    \"name\" : \"test-d1c9c82c-c62b-40fd-a6a8-0d8f8e7665d0\",\n    \"sourceType\" : {\n      \"id\" : \"LOCAL\",\n      \"name\" : \"LOCAL\",\n      \"description\" : \"xyzabcedefs\"\n    },\n    \"created\" : 0,\n    \"lastModified\" : 0\n  }, {\n    \"id\" : \"70f33b23-26ae-493e-bbf3-29b78244be93\",\n    \"name\" : \"test-70f33b23-26ae-493e-bbf3-29b78244be93\",\n    \"sourceType\" : {\n      \"id\" : \"SSO_SAML\",\n      \"name\" : \"SSO_SAML\",\n      \"description\" : \"xyzabcedefs\"\n    },\n    \"created\" : 0,\n    \"lastModified\" : 0\n  }, {\n    \"id\" : \"6c5b70fc-4221-4688-9d4d-6c3bea771cb1\",\n    \"name\" : \"test-6c5b70fc-4221-4688-9d4d-6c3bea771cb1\",\n    \"sourceType\" : {\n      \"id\" : \"VIDM\",\n      \"name\" : \"VIDM\",\n      \"description\" : \"xyzabcedefs\"\n    },\n    \"created\" : 0,\n    \"lastModified\" : 0\n  }, {\n    \"id\" : \"ac2f51e8-9379-4fdf-8524-50797b5874b4\",\n    \"name\" : \"test-ac2f51e8-9379-4fdf-8524-50797b5874b4\",\n    \"sourceType\" : {\n      \"id\" : \"CSP\",\n      \"name\" : \"CSP\",\n      \"description\" : \"xyzabcedefs\"\n    },\n    \"created\" : 0,\n    \"lastModified\" : 0\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/auth-sources"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:auth-sources xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:auth-source created=\"0\" lastModified=\"0\">\n        <ops:id>6bc845ad-dff5-4053-b434-8fc744c49aa9</ops:id>\n        <ops:name>test-6bc845ad-dff5-4053-b434-8fc744c49aa9</ops:name>\n        <ops:sourceType id=\"VC\">\n            <ops:name>VC</ops:name>\n            <ops:description>xyzabcedefs</ops:description>\n        </ops:sourceType>\n    </ops:auth-source>\n    <ops:auth-source created=\"0\" lastModified=\"0\">\n        <ops:id>b94e25b2-d0bb-488a-8280-67a51f531a1f</ops:id>\n        <ops:name>test-b94e25b2-d0bb-488a-8280-67a51f531a1f</ops:name>\n        <ops:sourceType id=\"OPEN_LDAP\">\n            <ops:name>OPEN_LDAP</ops:name>\n            <ops:description>xyzabcedefs</ops:description>\n        </ops:sourceType>\n    </ops:auth-source>\n    <ops:auth-source created=\"0\" lastModified=\"0\">\n        <ops:id>ced11618-f762-4128-8750-43e8d50e0904</ops:id>\n        <ops:name>test-ced11618-f762-4128-8750-43e8d50e0904</ops:name>\n        <ops:sourceType id=\"ACTIVE_DIRECTORY\">\n            <ops:name>ACTIVE_DIRECTORY</ops:name>\n            <ops:description>xyzabcedefs</ops:description>\n        </ops:sourceType>\n    </ops:auth-source>\n    <ops:auth-source created=\"0\" lastModified=\"0\">\n        <ops:id>5327997d-ae77-4147-b9fe-9c621fc7c5b1</ops:id>\n        <ops:name>test-5327997d-ae77-4147-b9fe-9c621fc7c5b1</ops:name>\n        <ops:sourceType id=\"OTHER\">\n            <ops:name>OTHER</ops:name>\n            <ops:description>xyzabcedefs</ops:description>\n        </ops:sourceType>\n    </ops:auth-source>\n    <ops:auth-source created=\"0\" lastModified=\"0\">\n        <ops:id>be582c0f-0a84-441f-9d09-31118e1b84bb</ops:id>\n        <ops:name>test-be582c0f-0a84-441f-9d09-31118e1b84bb</ops:name>\n        <ops:sourceType id=\"VC_GROUP\">\n            <ops:name>VC_GROUP</ops:name>\n            <ops:description>xyzabcedefs</ops:description>\n        </ops:sourceType>\n    </ops:auth-source>\n    <ops:auth-source created=\"0\" lastModified=\"0\">\n        <ops:id>1f7a5aa3-f3d7-43d3-a40e-68b65f1612bd</ops:id>\n        <ops:name>test-1f7a5aa3-f3d7-43d3-a40e-68b65f1612bd</ops:name>\n        <ops:sourceType id=\"LOCAL\">\n            <ops:name>LOCAL</ops:name>\n            <ops:description>xyzabcedefs</ops:description>\n        </ops:sourceType>\n    </ops:auth-source>\n    <ops:auth-source created=\"0\" lastModified=\"0\">\n        <ops:id>ad1d6807-bbf1-410c-9019-874f33492dad</ops:id>\n        <ops:name>test-ad1d6807-bbf1-410c-9019-874f33492dad</ops:name>\n        <ops:sourceType id=\"SSO_SAML\">\n            <ops:name>SSO_SAML</ops:name>\n            <ops:description>xyzabcedefs</ops:description>\n        </ops:sourceType>\n    </ops:auth-source>\n    <ops:auth-source created=\"0\" lastModified=\"0\">\n        <ops:id>b0c2984f-a6a5-4efb-94d1-8b5708d99035</ops:id>\n        <ops:name>test-b0c2984f-a6a5-4efb-94d1-8b5708d99035</ops:name>\n        <ops:sourceType id=\"VIDM\">\n            <ops:name>VIDM</ops:name>\n            <ops:description>xyzabcedefs</ops:description>\n        </ops:sourceType>\n    </ops:auth-source>\n    <ops:auth-source created=\"0\" lastModified=\"0\">\n        <ops:id>74cd046e-26fa-4758-bb98-a59e1847a7cc</ops:id>\n        <ops:name>test-74cd046e-26fa-4758-bb98-a59e1847a7cc</ops:name>\n        <ops:sourceType id=\"CSP\">\n            <ops:name>CSP</ops:name>\n            <ops:description>xyzabcedefs</ops:description>\n        </ops:sourceType>\n    </ops:auth-source>\n</ops:auth-sources>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/auth-sources"
                }
              }
            },
            "description": "The auth sources"
          }
        },
        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "Get all the available authentication sources in the system.\n<b>NOTE:</b> This API works both for authenticated and un-authenticated access. In case of authenticated access (by providing the Authorization header) it will return more information including auth source properties. Please also note that while triggering the API through Swagger interface it will work in un-authenticated scenario (Swagger will not send the Authorization header).",
        "operationId": "getAuthSourcesUsingGET",
        "summary": "Get all the available authentication sources in the system"
      }
    },
    "/api/auth/sources/{id}/usergroups/synchronize": {
      "put": {
        "parameters": [
          {
            "description": "The ID of the Auth source",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User groups are synchronized successfully"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "Synchronize user groups by specified Auth Source ID",
        "operationId": "synchronizeUserGroupsUsingPUT",
        "summary": "Synchronize user groups"
      }
    },
    "/api/auth/sources/{sourceId}": {
      "get": {
        "parameters": [
          {
            "description": "Id of the auth source",
            "in": "path",
            "name": "sourceId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"00000000-0000-000a-0000-000000000014\",\n  \"name\" : \"TEST\",\n  \"sourceType\" : {\n    \"id\" : \"ACTIVE_DIRECTORY\",\n    \"name\" : \"ACTIVE_DIRECTORY\",\n    \"description\" : \"DESC\"\n  },\n  \"created\" : 1689236473899,\n  \"lastModified\" : 1689236473899,\n  \"property\" : [ {\n    \"name\" : \"display-name\",\n    \"value\" : \"Test_11\"\n  }, {\n    \"name\" : \"host\",\n    \"value\" : \"brlrootdc01.vmware.com\"\n  }, {\n    \"name\" : \"domain\",\n    \"value\" : \"vmware.com\"\n  }, {\n    \"name\" : \"host-auto-select\",\n    \"value\" : \"false\"\n  }, {\n    \"name\" : \"use-ssl\",\n    \"value\" : \"true\"\n  }, {\n    \"name\" : \"user-name\",\n    \"value\" : \"username@vmware.com\"\n  }, {\n    \"name\" : \"password\",\n    \"value\" : \"password\"\n  }, {\n    \"name\" : \"base-domain\",\n    \"value\" : \"dc=vmware,dc=com\"\n  }, {\n    \"name\" : \"common-name\",\n    \"value\" : \"userPrincipalName\"\n  }, {\n    \"name\" : \"port\",\n    \"value\" : \"636\"\n  }, {\n    \"name\" : \"group-search-criteria\",\n    \"value\" : \"(|(objectClass=group)(objectClass=groupOfNames))\"\n  }, {\n    \"name\" : \"member-attribute\",\n    \"value\" : \"member\"\n  }, {\n    \"name\" : \"user-search-criteria\"\n  }, {\n    \"name\" : \"member-match-field\"\n  }, {\n    \"name\" : \"ldap-context-attributes\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/auth-source"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:auth-source created=\"1689236473903\" lastModified=\"1689236473903\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:id>00000000-0000-000a-0000-000000000014</ops:id>\n    <ops:name>TEST</ops:name>\n    <ops:sourceType id=\"ACTIVE_DIRECTORY\">\n        <ops:name>ACTIVE_DIRECTORY</ops:name>\n        <ops:description>DESC</ops:description>\n    </ops:sourceType>\n    <ops:name-value name=\"display-name\">Test_11</ops:name-value>\n    <ops:name-value name=\"host\">brlrootdc01.vmware.com</ops:name-value>\n    <ops:name-value name=\"domain\">vmware.com</ops:name-value>\n    <ops:name-value name=\"host-auto-select\">false</ops:name-value>\n    <ops:name-value name=\"use-ssl\">true</ops:name-value>\n    <ops:name-value name=\"user-name\">username@vmware.com</ops:name-value>\n    <ops:name-value name=\"password\">password</ops:name-value>\n    <ops:name-value name=\"base-domain\">dc=vmware,dc=com</ops:name-value>\n    <ops:name-value name=\"common-name\">userPrincipalName</ops:name-value>\n    <ops:name-value name=\"port\">636</ops:name-value>\n    <ops:name-value name=\"group-search-criteria\">(|(objectClass=group)(objectClass=groupOfNames))</ops:name-value>\n    <ops:name-value name=\"member-attribute\">member</ops:name-value>\n    <ops:name-value name=\"user-search-criteria\"></ops:name-value>\n    <ops:name-value name=\"member-match-field\"></ops:name-value>\n    <ops:name-value name=\"ldap-context-attributes\"></ops:name-value>\n</ops:auth-source>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/auth-source"
                }
              }
            },
            "description": "Information about the authentication source"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "The auth source can be SSO/LDAP/AD. \nFor the <i>LDAP/AD</i> auth source, the request should contain the name of the user.\nFor the <i>SSO</i> auth source, request should contain the name of the user and the sso domain.\nUser-group's username can contain wildcards. Maximum of 25 user-groups are returned for SSO auth source. ",
        "operationId": "getAuthSourceUsingGET",
        "summary": "Retrieve detailed information about a particular authentication source"
      }
    },
    "/api/auth/sourcetypes": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"sourceTypes\" : [ {\n    \"id\" : \"VC\",\n    \"name\" : \"VC\",\n    \"description\" : \"xyzabcedefs\"\n  }, {\n    \"id\" : \"OPEN_LDAP\",\n    \"name\" : \"OPEN_LDAP\",\n    \"description\" : \"xyzabcedefs\"\n  }, {\n    \"id\" : \"ACTIVE_DIRECTORY\",\n    \"name\" : \"ACTIVE_DIRECTORY\",\n    \"description\" : \"xyzabcedefs\"\n  }, {\n    \"id\" : \"OTHER\",\n    \"name\" : \"OTHER\",\n    \"description\" : \"xyzabcedefs\"\n  }, {\n    \"id\" : \"VC_GROUP\",\n    \"name\" : \"VC_GROUP\",\n    \"description\" : \"xyzabcedefs\"\n  }, {\n    \"id\" : \"LOCAL\",\n    \"name\" : \"LOCAL\",\n    \"description\" : \"xyzabcedefs\"\n  }, {\n    \"id\" : \"SSO_SAML\",\n    \"name\" : \"SSO_SAML\",\n    \"description\" : \"xyzabcedefs\"\n  }, {\n    \"id\" : \"VIDM\",\n    \"name\" : \"VIDM\",\n    \"description\" : \"xyzabcedefs\"\n  }, {\n    \"id\" : \"CSP\",\n    \"name\" : \"CSP\",\n    \"description\" : \"xyzabcedefs\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/auth-sourcetypes"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:auth-sourcetypes xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:auth-sourcetype id=\"VC\">\n        <ops:name>VC</ops:name>\n        <ops:description>xyzabcedefs</ops:description>\n    </ops:auth-sourcetype>\n    <ops:auth-sourcetype id=\"OPEN_LDAP\">\n        <ops:name>OPEN_LDAP</ops:name>\n        <ops:description>xyzabcedefs</ops:description>\n    </ops:auth-sourcetype>\n    <ops:auth-sourcetype id=\"ACTIVE_DIRECTORY\">\n        <ops:name>ACTIVE_DIRECTORY</ops:name>\n        <ops:description>xyzabcedefs</ops:description>\n    </ops:auth-sourcetype>\n    <ops:auth-sourcetype id=\"OTHER\">\n        <ops:name>OTHER</ops:name>\n        <ops:description>xyzabcedefs</ops:description>\n    </ops:auth-sourcetype>\n    <ops:auth-sourcetype id=\"VC_GROUP\">\n        <ops:name>VC_GROUP</ops:name>\n        <ops:description>xyzabcedefs</ops:description>\n    </ops:auth-sourcetype>\n    <ops:auth-sourcetype id=\"LOCAL\">\n        <ops:name>LOCAL</ops:name>\n        <ops:description>xyzabcedefs</ops:description>\n    </ops:auth-sourcetype>\n    <ops:auth-sourcetype id=\"SSO_SAML\">\n        <ops:name>SSO_SAML</ops:name>\n        <ops:description>xyzabcedefs</ops:description>\n    </ops:auth-sourcetype>\n    <ops:auth-sourcetype id=\"VIDM\">\n        <ops:name>VIDM</ops:name>\n        <ops:description>xyzabcedefs</ops:description>\n    </ops:auth-sourcetype>\n    <ops:auth-sourcetype id=\"CSP\">\n        <ops:name>CSP</ops:name>\n        <ops:description>xyzabcedefs</ops:description>\n    </ops:auth-sourcetype>\n</ops:auth-sourcetypes>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/auth-sourcetypes"
                }
              }
            },
            "description": "List of authentication source-types"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "Get all the available authentication source types",
        "operationId": "getAuthSourceTypesUsingGET",
        "summary": "Get all the available authentication source types"
      }
    },
    "/api/auth/sourcetypes/{sourceId}": {
      "get": {
        "parameters": [
          {
            "description": "The ID of the source type",
            "in": "path",
            "name": "sourceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/auth-sourcetype"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/auth-sourcetype"
                }
              }
            },
            "description": "Information about a particular authentication source type"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "Retrieve information about a particular authentication source type",
        "operationId": "getAuthSourceTypeUsingGET",
        "summary": "Retrieve information about a particular authentication source type"
      }
    },
    "/api/auth/traversalspecs": {
      "get": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "The adapter kind of the traversal specification template",
            "explode": true,
            "in": "query",
            "name": "adapterKind",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "The name of the traversal specification template",
            "explode": true,
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "The resource kind of the traversal specification template",
            "explode": true,
            "in": "query",
            "name": "resourceKind",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/traversal-specs"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/traversal-specs"
                }
              }
            },
            "description": "The traversal specs"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "If no optional parameters passed, the API will return all traversal specification templates in the system",
        "operationId": "getTraversalSpecsUsingGET",
        "summary": "Get/Query the list of all traversal specification templates in the system"
      }
    },
    "/api/auth/usergroups": {
      "delete": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "The identifiers of the local user group objects",
            "explode": true,
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The specified user groups are deleted successfully"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "Delete a list of user groups using their identifiers",
        "operationId": "deleteUserGroupsUsingDELETE",
        "summary": "Delete a list of user groups using their identifiers"
      },
      "get": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "The identifiers of the local user groups",
            "explode": true,
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "The names of the local user groups",
            "explode": true,
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user-groups"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user-groups"
                }
              }
            },
            "description": "List of local user group objects. Groups are returned using both exact and substring matches"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "If none of the parameters are specified, all the user groups in the system are returned.",
        "operationId": "getUserGroupsUsingGET",
        "summary": "Retrieve a list of local user groups using identifiers or/and names"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"c3ea108e-aece-41e6-ae79-f95bacceac7b\",\n  \"name\" : \"user_group_name\",\n  \"description\" : \"user_group_desc\",\n  \"userIds\" : [ \"51637547-1623-4f0d-a9d7-6faa72b8d58c\" ],\n  \"role-permissions\" : [ {\n    \"roleName\" : \"Administrator\",\n    \"traversal-spec-instances\" : [ {\n      \"adapterKind\" : \"adap_kind\",\n      \"resourceKind\" : \"resource_kind\",\n      \"name\" : \"traversal_spec_name\",\n      \"selectAllResources\" : true\n    } ],\n    \"allowAllObjects\" : true\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user-group"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:user-group xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:id>ea35219c-27fd-428b-b681-1f9c0b3f381c</ops:id>\n    <ops:name>user_group_name</ops:name>\n    <ops:description>user_group_desc</ops:description>\n    <ops:userIds>\n        <ops:userId>fb0eb35a-34d0-42c4-b1cb-676dc512796e</ops:userId>\n    </ops:userIds>\n    <ops:role-permissions>\n        <ops:role-permission allowAllObjects=\"true\">\n            <ops:roleName>Administrator</ops:roleName>\n            <ops:traversal-spec-instances>\n                <ops:traversal-spec-instance selectAllResources=\"true\">\n                    <ops:adapterKind>adap_kind</ops:adapterKind>\n                    <ops:resourceKind>resource_kind</ops:resourceKind>\n                    <ops:name>traversal_spec_name</ops:name>\n                </ops:traversal-spec-instance>\n            </ops:traversal-spec-instances>\n        </ops:role-permission>\n    </ops:role-permissions>\n</ops:user-group>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user-group"
                }
              }
            },
            "description": "The user group is created successfully"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "If the authSourceId is specified(in the request), then the user group will be imported from the corresponding auth source (LDAP/AD/SSO/VIDM).Note that the id of the user group has to be null. \nFor LDAP/AD groups the distinguishedName should be provided in the name field. \nThe value of displayName is used only while importing LDAP/AD groups, and if it is not provided then the value of name will be assigned to it. For SSO/VIDM groups the value of name is assigned to displayName. \n<b>NOTE:</b> Before importing please make sure that the group exists in the specified authSource by using the following API - <i> /api/auth/sources/{id}/usergroups/search </i>. Otherwise, if you try to import a non-existing group, a new one will be created with the specified authSourceId.",
        "operationId": "createUserGroupUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user-group"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/user-group"
              }
            }
          },
          "description": "The group object to be created.",
          "required": true
        },
        "summary": "Create a new local user group or import SSO/VIDM/LDAP/AD user groups"
      },
      "put": {
        "responses": {
          "200": {
            "description": "The user group is updated successfully"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "You can add or remove users from the group. Name and id of the group cannot be changed.",
        "operationId": "modifyUserGroupUsingPUT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user-group"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/user-group"
              }
            }
          },
          "description": "The group object to be updated",
          "required": true
        },
        "summary": "Modify a local user group"
      }
    },
    "/api/auth/usergroups/{groupId}/permissions": {
      "get": {
        "parameters": [
          {
            "description": "Identifier of the user group which role permissions need to be retrieved",
            "in": "path",
            "name": "groupId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/role-permissions"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/role-permissions"
                }
              }
            },
            "description": "The Role Permissions object"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "Get assigned role permissions for the specified user group",
        "operationId": "getAssignedRolePermissionsForUserGroupUsingGET",
        "summary": "Get assigned role permissions for the user group"
      },
      "put": {
        "parameters": [
          {
            "description": "Identifier of the user group",
            "in": "path",
            "name": "groupId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/role-permissions"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/role-permissions"
                }
              }
            },
            "description": "The Updated Role Permissions object"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "Replaces existing role permission entirety if it exists already for the named role.",
        "operationId": "assignRolePermissionToUserGroupUsingPUT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/role-permission"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/role-permission"
              }
            }
          },
          "description": "The role permission to assign.",
          "required": true
        },
        "summary": "Assign a role permission to a particular user group"
      }
    },
    "/api/auth/usergroups/{groupId}/permissions/{roleName}": {
      "delete": {
        "parameters": [
          {
            "description": "The Identifier of the user group",
            "in": "path",
            "name": "groupId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The name of the role permission to be unassigned",
            "in": "path",
            "name": "roleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The Role Permission is unassigned from the user group successfully"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "Unassign role permission from a user group",
        "operationId": "unassignedRolePermissionFromUserGroupUsingDELETE",
        "summary": "Unassign role permission from a user group"
      }
    },
    "/api/auth/usergroups/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The identifier of the user group",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The user group is deleted successfully"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "Delete a local user group",
        "operationId": "deleteUserGroupUsingDELETE",
        "summary": "Delete a local user group"
      },
      "get": {
        "parameters": [
          {
            "description": "The identifier of the user group",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user-group"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user-group"
                }
              }
            },
            "description": "The user group data"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "Look up a local user group using its identifier",
        "operationId": "getUserGroupUsingGET",
        "summary": "Look up a local user group using its identifier"
      }
    },
    "/api/auth/users": {
      "get": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "A list of identifiers in UUID format",
            "explode": true,
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "A list of valid role names",
            "explode": true,
            "in": "query",
            "name": "roleName",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "A list of usernames that is used for partial and complete matching",
            "explode": true,
            "in": "query",
            "name": "username",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user-list"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user-list"
                }
              }
            },
            "description": "List of users matching the input criteria"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "If both ids and roleNames are not specified, information about all the <i>local users</i> are being returned.",
        "operationId": "getUsersUsingGET",
        "summary": "Look up a list of users using the user identifiers or their role names"
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"f89a0b05-79d7-4046-ae71-68e83e2be189\",\n  \"username\" : \"test\",\n  \"firstName\" : \"test\",\n  \"lastName\" : \"test\",\n  \"password\" : \"Test@123\",\n  \"enabled\" : true,\n  \"role-permissions\" : [ {\n    \"roleName\" : \"PowerUser\",\n    \"allowAllObjects\" : true\n  } ],\n  \"lastLoginTime\" : 0\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:user enabled=\"true\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:id>0a0f5be7-b201-4733-8c5a-1af4a24124e7</ops:id>\n    <ops:username>test</ops:username>\n    <ops:firstName>test</ops:firstName>\n    <ops:lastName>test</ops:lastName>\n    <ops:password>Test@123</ops:password>\n    <ops:role-permissions>\n        <ops:role-permission allowAllObjects=\"true\">\n            <ops:roleName>PowerUser</ops:roleName>\n        </ops:role-permission>\n    </ops:role-permissions>\n    <ops:lastLoginTime>0</ops:lastLoginTime>\n</ops:user>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            },
            "description": "The modified user object"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "Modify the details of a particular user",
        "operationId": "modifyUserUsingPUT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          },
          "description": "The user object that is being modified",
          "required": true
        },
        "summary": "Modify the details of a particular user"
      }
    },
    "/api/auth/users/{id}": {
      "get": {
        "parameters": [
          {
            "description": "The ID of the user",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            },
            "description": "Details of the local user"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "Using this method, you can look up details about a particular <i>local user</i>",
        "operationId": "getUserUsingGET",
        "summary": "Look up a particular user using its identifier"
      }
    },
    "/api/auth/users/{userId}/permissions": {
      "get": {
        "parameters": [
          {
            "description": "The Identifier of the user to which the role permission needs to be assigned",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/role-permissions"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/role-permissions"
                }
              }
            },
            "description": "The Role Permissions object"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "Get assigned role permissions for a specified user",
        "operationId": "getAssignedRolePermissionsForUserUsingGET",
        "summary": "Get assigned role permissions for a user"
      },
      "put": {
        "parameters": [
          {
            "description": "Identifier of the user to which the role permission needs to be assigned",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/role-permissions"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/role-permissions"
                }
              }
            },
            "description": "The Updated Role Permissions object"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "Replaces the existing role permission entirety if it exists already for the named role.",
        "operationId": "assignRolePermissionToUserUsingPUT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/role-permission"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/role-permission"
              }
            }
          },
          "description": "The role permission to assign",
          "required": true
        },
        "summary": "Assign a role permission to a particular user"
      }
    },
    "/api/auth/users/{userId}/permissions/{roleName}": {
      "delete": {
        "parameters": [
          {
            "description": "The name of the role permission to be unassigned",
            "in": "path",
            "name": "roleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Identifier of the user from which the role permission needs to be unassigned",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The Role Permission is unassigned from the user successfully"
          }
        },

        "tags": [
          "Auth"
        ],
        "deprecated": false,
        "description": "Unassign role permission from a user",
        "operationId": "unassignedRolePermissionFromUserUsingDELETE",
        "summary": "Unassign role permission from a user"
      }
    },
    "/api/certificate": {
      "delete": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Indicates whether to force delete operation if there are references to it",
            "example": false,
            "in": "query",
            "name": "force",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "The Certificate thumbprint to be deleted",
            "in": "query",
            "name": "thumbprint",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The certificate is deleted successfully"
          }
        },

        "tags": [
          "Certificate"
        ],
        "deprecated": false,
        "description": "Delete a certificate",
        "operationId": "deleteCertificateUsingDELETE",
        "summary": "Delete a certificate"
      },
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/certificates"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/certificates"
                }
              }
            },
            "description": "The log forwarding configuration data"
          }
        },

        "tags": [
          "Certificate"
        ],
        "deprecated": false,
        "description": "Get all certificates",
        "operationId": "getAllCertificatesUsingGET",
        "summary": "Get all certificates"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/certificates"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/certificates"
                }
              }
            },
            "description": "OK"
          },
          "202": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"certificates\" : [ {\n    \"thumbprint\" : \"18f4ecc8c8941537a1de40c0046afbcd998714e7\",\n    \"certificateDetails\" : \"Issued by VMware, Inc. Expires: 01/01/2021\",\n    \"issuedTo\" : \"OU=VMware Engineering, O=evn-vc-7.eng.vmware.com, ST=California, C=US, DC=local, DC=vsphere, CN=CA\",\n    \"issuedBy\" : \"C=US, CN=evn-vc-7.eng.vmware.com\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/certificates"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:certificates xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:certificates>\n        <ops:certificate>\n            <ops:thumbprint>18f4ecc8c8941537a1de40c0046afbcd998714e7</ops:thumbprint>\n            <ops:certificateDetails>Issued by VMware, Inc. Expires: 01/01/2021</ops:certificateDetails>\n            <ops:issuedTo>OU=VMware Engineering, O=evn-vc-7.eng.vmware.com, ST=California, C=US, DC=local, DC=vsphere, CN=CA</ops:issuedTo>\n            <ops:issuedBy>C=US, CN=evn-vc-7.eng.vmware.com</ops:issuedBy>\n        </ops:certificate>\n    </ops:certificates>\n</ops:certificates>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/certificates"
                }
              }
            },
            "description": "The imported certificate information "
          }
        },

        "tags": [
          "Certificate"
        ],
        "deprecated": false,
        "description": "Import the given certificate file.",
        "operationId": "importCertificateUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/importCertificateUsingPOST"
        },
        "summary": "Import certificate file"
      }
    },
    "/api/collectorgroups": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"collectorGroups\" : [ {\n    \"id\" : \"858e67e6-856a-4fb9-9d1f-4269c0a7a1e0\",\n    \"name\" : \"collector_group_1\",\n    \"description\" : \"collector_group_1 description\",\n    \"collectorId\" : [ 1, 2 ],\n    \"systemDefined\" : false,\n    \"haEnabled\" : false\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/collector-groups"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:collector-groups xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:collector-group id=\"8e0c9d42-b912-4b9c-943b-e4d3b9f32630\" name=\"collector_group_1\">\n        <ops:description>collector_group_1 description</ops:description>\n        <ops:collectorId>1 2</ops:collectorId>\n        <ops:systemDefined>false</ops:systemDefined>\n        <ops:haEnabled>false</ops:haEnabled>\n    </ops:collector-group>\n</ops:collector-groups>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/collector-groups"
                }
              }
            },
            "description": "The defined Collector Groups"
          },
          "500": {
            "description": "In case of any error processing the API response"
          }
        },

        "tags": [
          "Collector Groups"
        ],
        "deprecated": false,
        "description": "Get all the Collector Groups defined in the system",
        "operationId": "getCollectorGroupsUsingGET",
        "summary": "Enumerate all the Collector Groups defined in the system"
      },
      "post": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Check if collector group members are valid, before proceeding with collector group creation",
            "example": false,
            "in": "query",
            "name": "checkCollectorMembers",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"ea73b32b-08f7-44d6-b623-64a8c2032c64\",\n  \"name\" : \"collector_group_1\",\n  \"description\" : \"collector_group_1 description\",\n  \"collectorId\" : [ 3, 4 ],\n  \"systemDefined\" : false,\n  \"haEnabled\" : true,\n  \"virtualIP\" : \"1.2.3.4\"\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/collector-group"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:collector-group id=\"2bdbfb64-279a-4d0f-b0a8-f52adb037a2c\" name=\"collector_group_1\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:description>collector_group_1 description</ops:description>\n    <ops:collectorId>3 4</ops:collectorId>\n    <ops:systemDefined>false</ops:systemDefined>\n    <ops:haEnabled>true</ops:haEnabled>\n    <ops:virtualIP>1.2.3.4</ops:virtualIP>\n</ops:collector-group>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/collector-group"
                }
              }
            },
            "description": "The Collector Group object that was created along with its identifier"
          },
          "500": {
            "description": "In case of any error creating the Collector Group"
          }
        },

        "tags": [
          "Collector Groups"
        ],
        "deprecated": false,
        "description": "Create a new Collector Group in the system",
        "operationId": "createCollectorGroupUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/collector-group"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/collector-group"
              }
            }
          },
          "description": "The Collector Group that needs to be created",
          "required": true
        },
        "summary": "Create a new Collector Group in the system"
      },
      "put": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Check if collector group members are valid, before proceeding with collector group update",
            "example": false,
            "in": "query",
            "name": "checkCollectorMembers",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"9a1ab12c-a38f-4b5a-94b1-d24f3319f653\",\n  \"name\" : \"collector_group_1\",\n  \"description\" : \"collector_group_1 description\",\n  \"collectorId\" : [ 3, 4 ],\n  \"systemDefined\" : false,\n  \"haEnabled\" : true,\n  \"virtualIP\" : \"1.2.3.4\"\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/collector-group"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:collector-group id=\"b64e32ff-0c68-4179-ad24-8d5005dbde97\" name=\"collector_group_1\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:description>collector_group_1 description</ops:description>\n    <ops:collectorId>3 4</ops:collectorId>\n    <ops:systemDefined>false</ops:systemDefined>\n    <ops:haEnabled>true</ops:haEnabled>\n    <ops:virtualIP>1.2.3.4</ops:virtualIP>\n</ops:collector-group>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/collector-group"
                }
              }
            },
            "description": "The updated Collector Group"
          },
          "500": {
            "description": "Error occurred while updating the Collector Group"
          }
        },

        "tags": [
          "Collector Groups"
        ],
        "deprecated": false,
        "description": "This Replaces all existing configuration of a Collector Group \nwith the data specified as part of the Request.",
        "operationId": "updateCollectorGroupUsingPUT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/collector-group"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/collector-group"
              }
            }
          },
          "description": "The Collector Group that needs to be updated",
          "required": true
        },
        "summary": "Update a Collector Group in the system"
      }
    },
    "/api/collectorgroups/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Identifier of the Collector Group to delete",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The Collector Group was successfully deleted"
          },
          "500": {
            "description": "Error occurred while deleting the Collector Group"
          }
        },

        "tags": [
          "Collector Groups"
        ],
        "deprecated": false,
        "description": "Delete a Collector Group from the system using collector specified identifier",
        "operationId": "deleteCollectorGroupUsingDELETE",
        "summary": "Delete a Collector Group from the system using its identifier"
      },
      "get": {
        "parameters": [
          {
            "description": "Identifier of the Collector Group",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"6816d38c-e469-497e-88a4-c07dc4e2fc86\",\n  \"name\" : \"collector_group_1\",\n  \"description\" : \"collector_group_1 description\",\n  \"collectorId\" : [ 3, 4 ],\n  \"systemDefined\" : false,\n  \"haEnabled\" : true,\n  \"virtualIP\" : \"1.2.3.4\"\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/collector-group"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:collector-group id=\"3dfb9b04-e05d-462e-9a97-6f1a7559817c\" name=\"collector_group_1\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:description>collector_group_1 description</ops:description>\n    <ops:collectorId>3 4</ops:collectorId>\n    <ops:systemDefined>false</ops:systemDefined>\n    <ops:haEnabled>true</ops:haEnabled>\n    <ops:virtualIP>1.2.3.4</ops:virtualIP>\n</ops:collector-group>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/collector-group"
                }
              }
            },
            "description": "The Collector Group object for the specified identifier"
          },
          "404": {
            "description": "No Collector Group is found in the system with the specified identifier"
          },
          "500": {
            "description": "In case of any error processing the API response"
          }
        },

        "tags": [
          "Collector Groups"
        ],
        "deprecated": false,
        "description": "Get details of a particular Collector Group in the system",
        "operationId": "getCollectorGroupUsingGET",
        "summary": "Get details of a particular Collector Group in the system"
      }
    },
    "/api/collectorgroups/{id}/collector/{collectorId}": {
      "delete": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Check if collector group members are valid, before proceeding with collector group update",
            "example": false,
            "in": "query",
            "name": "checkCollectorMembers",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Identifier (an integer) of the Collector",
            "in": "path",
            "name": "collectorId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Identifier of the Collector Group",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"d78ec106-b9ed-4746-9117-71186bdcf4a9\",\n  \"name\" : \"collector_group_1\",\n  \"description\" : \"collector_group_1 description\",\n  \"collectorId\" : [ 3, 4 ],\n  \"systemDefined\" : false,\n  \"haEnabled\" : true,\n  \"virtualIP\" : \"1.2.3.4\"\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/collector-group"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:collector-group id=\"29a441da-b096-4363-b743-e5dd77d1a732\" name=\"collector_group_1\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:description>collector_group_1 description</ops:description>\n    <ops:collectorId>3 4</ops:collectorId>\n    <ops:systemDefined>false</ops:systemDefined>\n    <ops:haEnabled>true</ops:haEnabled>\n    <ops:virtualIP>1.2.3.4</ops:virtualIP>\n</ops:collector-group>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/collector-group"
                }
              }
            },
            "description": "The removed Collector Group"
          },
          "500": {
            "description": "Error occurred while removing the Collector from the Collector Group"
          }
        },

        "tags": [
          "Collector Groups"
        ],
        "deprecated": false,
        "description": "Remove a Collector from the specified Collector Group",
        "operationId": "removeCollectorFromCollectorGroupUsingDELETE",
        "summary": "Remove a Collector from a Collector Group"
      },
      "put": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Check if collector group members are valid, before proceeding with collector group update",
            "example": false,
            "in": "query",
            "name": "checkCollectorMembers",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Identifier (an integer) of the Collector",
            "in": "path",
            "name": "collectorId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Identifier of the Collector Group",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"cffcdda9-6039-4254-a118-53ac210bd336\",\n  \"name\" : \"collector_group_1\",\n  \"description\" : \"collector_group_1 description\",\n  \"collectorId\" : [ 3, 4 ],\n  \"systemDefined\" : false,\n  \"haEnabled\" : true,\n  \"virtualIP\" : \"1.2.3.4\"\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/collector-group"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:collector-group id=\"7040a951-fd22-47f7-a025-838b61cfd905\" name=\"collector_group_1\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:description>collector_group_1 description</ops:description>\n    <ops:collectorId>3 4</ops:collectorId>\n    <ops:systemDefined>false</ops:systemDefined>\n    <ops:haEnabled>true</ops:haEnabled>\n    <ops:virtualIP>1.2.3.4</ops:virtualIP>\n</ops:collector-group>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/collector-group"
                }
              }
            },
            "description": "The added Collector Group"
          },
          "500": {
            "description": "In case of any error adding the Collector to the Collector Group"
          }
        },

        "tags": [
          "Collector Groups"
        ],
        "deprecated": false,
        "description": "Add a Collector to the specified Collector Group",
        "operationId": "addCollectorToCollectorGroupUsingPUT",
        "summary": "Add a Collector to Collector Group"
      }
    },
    "/api/collectors": {
      "get": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Optional list of host names to filter by",
            "explode": true,
            "in": "query",
            "name": "host",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"collector\" : [ {\n    \"name\" : \"A Local Collector\",\n    \"state\" : \"UP\",\n    \"local\" : true,\n    \"adapterInstanceIds\" : [ \"c5d5ee4e-6eba-4a87-98fe-40669a93612b\", \"a26203a4-377f-4d26-b206-7650b6f02994\" ],\n    \"id\" : \"1\",\n    \"uuId\" : \"832504e3-bc96-42f7-bc06-b3a7e4e86170\"\n  }, {\n    \"name\" : \"A Remote Collector\",\n    \"state\" : \"DOWN\",\n    \"local\" : false,\n    \"adapterInstanceIds\" : [ \"88eea99d-da53-4adb-ad63-2142aa1e0869\" ],\n    \"id\" : \"2\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/collectors"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:collectors xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:collector id=\"1\" uuId=\"69bdde92-1460-408e-8443-0f23ae465cc3\">\n        <ops:name>A Local Collector</ops:name>\n        <ops:state>UP</ops:state>\n        <ops:local>true</ops:local>\n        <ops:adapterInstanceIds>99cb436f-dfb9-4895-a07c-487b95133761</ops:adapterInstanceIds>\n        <ops:adapterInstanceIds>772d1058-0531-40f3-b85f-b1f5ec5e25de</ops:adapterInstanceIds>\n    </ops:collector>\n    <ops:collector id=\"2\">\n        <ops:name>A Remote Collector</ops:name>\n        <ops:state>DOWN</ops:state>\n        <ops:local>false</ops:local>\n        <ops:adapterInstanceIds>d1781830-e48f-436e-b14f-4be5f88acea8</ops:adapterInstanceIds>\n    </ops:collector>\n</ops:collectors>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/collectors"
                }
              }
            },
            "description": "The Collectors managed by the system"
          }
        },

        "tags": [
          "Collectors"
        ],
        "deprecated": false,
        "description": "If no filters set, the API returns all the Collectors registered with the VMware Aria Operations system",
        "operationId": "getCollectorsUsingGET",
        "summary": "Get all the Collectors registered with the VMware Aria Operations system"
      }
    },
    "/api/collectors/{id}/adapters": {
      "get": {
        "parameters": [
          {
            "description": "The Identifier of the Collector",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"adapterInstancesInfoDto\" : [ {\n    \"resourceKey\" : {\n      \"name\" : \"VC Adapter for 10.20.88.111\",\n      \"adapterKindKey\" : \"VMWARE\",\n      \"resourceKindKey\" : \"Adapter\"\n    },\n    \"description\" : \"A vCenter Adapter Instance\",\n    \"collectorId\" : 1,\n    \"credentialInstanceId\" : \"bccbb776-eaae-44b0-976e-fb590cd0b203\",\n    \"id\" : \"0c2a293a-8205-448c-a41a-48bceb8b7fef\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/adapter-instances"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:adapter-instances xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:adapter-instance id=\"348a4738-c03c-4b4b-a330-0ef19994caed\">\n        <ops:resourceKey>\n            <ops:name>VC Adapter for 10.20.88.111</ops:name>\n            <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n            <ops:resourceKindKey>Adapter</ops:resourceKindKey>\n            <ops:resourceIdentifiers/>\n        </ops:resourceKey>\n        <ops:description>A vCenter Adapter Instance</ops:description>\n        <ops:collectorId>1</ops:collectorId>\n        <ops:credentialInstanceId>d231c4e0-2bcb-402b-b309-edefd10b59ae</ops:credentialInstanceId>\n    </ops:adapter-instance>\n</ops:adapter-instances>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/adapter-instances"
                }
              }
            },
            "description": "The Adapters assigned (placed) on the specified Collector"
          }
        },

        "tags": [
          "Collectors"
        ],
        "deprecated": false,
        "description": "Get all the Collectors registered with the VMware Aria Operations system",
        "operationId": "getAdaptersOnCollectorUsingGET",
        "summary": "Get all the Collectors registered with the VMware Aria Operations system"
      }
    },
    "/api/configurations/files": {
      "get": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Configuration file path in {folder}/{fileName} format",
            "in": "query",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Body of the configuration file"
          },
          "400": {
            "description": "Request parameter is invalid"
          }
        },

        "tags": [
          "Configuration Management"
        ],
        "deprecated": false,
        "description": "Get details of the specified configuration file.",
        "operationId": "getUsingGET",
        "summary": "Get details of the specified configuration file."
      }
    },
    "/api/content/backup": {
      "post": {
        "responses": {
          "202": {
            "description": "The content is backed up successfully"
          }
        },

        "tags": [
          "Content Management"
        ],
        "deprecated": true,
        "description": "Backup content for current user",
        "operationId": "backupContentUsingPOST",
        "summary": "(Deprecated) Backup content for current user"
      }
    },
    "/api/content/backup/result": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "byte",
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "byte",
                  "type": "string"
                }
              },
              "application/zip": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "format": "byte",
                  "type": "string"
                }
              }
            },
            "description": "The content of the configuration as a downloadable file"
          }
        },

        "tags": [
          "Content Management"
        ],
        "deprecated": true,
        "description": "Download backup for current user",
        "operationId": "downloadBackupContentDataUsingGET",
        "summary": "(Deprecated) Download backup for current user"
      }
    },
    "/api/content/operations/export": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"links\" : [ {\n    \"href\" : \"/suite-api/api/content/operations/export/zip\",\n    \"rel\" : \"RELATED\",\n    \"name\" : \"lastExportDownloadURL\",\n    \"description\" : \"Download last exported content data\"\n  } ],\n  \"id\" : \"b015ec6c-d2f9-47b2-bf7d-9c8d8c9d6adf\",\n  \"type\" : \"EXPORT\",\n  \"state\" : \"FINISHED\",\n  \"startTime\" : 1625238290546,\n  \"endTime\" : 1625238320326\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/operation-details"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:operation-details id=\"04b2de36-e9d9-43b2-a244-db21684cca54\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:type>EXPORT</ops:type>\n    <ops:state>FINISHED</ops:state>\n    <ops:startTime>1625238290546</ops:startTime>\n    <ops:endTime>1625238320326</ops:endTime>\n    <ops:links>\n        <ops:link href=\"/suite-api/api/content/operations/export/zip\" rel=\"RELATED\" name=\"lastExportDownloadURL\">\n            <ops:description>Download last exported content data</ops:description>\n        </ops:link>\n    </ops:links>\n    <ops:operationSummaries/>\n    <ops:errorMessages/>\n</ops:operation-details>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/operation-details"
                }
              }
            },
            "description": "The details of content operation"
          }
        },

        "tags": [
          "Content Management"
        ],
        "deprecated": false,
        "description": "The response contains information about the last export operation details",
        "operationId": "getLastExportOperationUsingGET",
        "summary": "Get the last export operation details"
      },
      "post": {
        "parameters": [
          {
            "description": "Key for encrypting sensitive information",
            "in": "header",
            "name": "EncryptionPassword",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"scope\" : \"CUSTOM\",\n  \"contentTypes\" : [ \"POLICIES\", \"OUTBOUND_SETTINGS\", \"INTEGRATIONS\" ],\n  \"links\" : [ {\n    \"href\" : \"/suite-api/api/content/operations/export\",\n    \"rel\" : \"RELATED\",\n    \"name\" : \"ExportStatusCheckURL\",\n    \"description\" : \"Status of the last export operation\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/content-export"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:content-export xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:scope>CUSTOM</ops:scope>\n    <ops:contentTypes>POLICIES OUTBOUND_SETTINGS INTEGRATIONS</ops:contentTypes>\n    <ops:links>\n        <ops:link href=\"/suite-api/api/content/operations/export\" rel=\"RELATED\" name=\"ExportStatusCheckURL\">\n            <ops:description>Status of the last export operation</ops:description>\n        </ops:link>\n    </ops:links>\n</ops:content-export>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/content-export"
                }
              }
            },
            "description": "The export of content has been accepted"
          }
        },

        "tags": [
          "Content Management"
        ],
        "deprecated": false,
        "description": "Export content for current user.  This takes scope of the export.  The content types that need to be exported can be specified as a list.",
        "operationId": "exportContentUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/content-export"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/content-export"
              }
            }
          },
          "description": "Export Details of Type and Segregation",
          "required": true
        },
        "summary": "Export content for current user"
      }
    },
    "/api/content/operations/export/zip": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "format": "byte",
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "format": "byte",
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "byte",
                  "type": "string"
                }
              }
            },
            "description": "The file has been downloaded successfully"
          }
        },

        "tags": [
          "Content Management"
        ],
        "deprecated": false,
        "description": "Downloads the content data as a file.",
        "operationId": "downloadUsingGET",
        "summary": "Download the latest export"
      }
    },
    "/api/content/operations/import": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"operationSummaries\" : [ {\n    \"type\" : \"import\",\n    \"imported\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0,\n    \"total\" : 5,\n    \"contentType\" : \"VIEW_DEFINITIONS\",\n    \"state\" : \"FINISHED\"\n  }, {\n    \"type\" : \"import\",\n    \"imported\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0,\n    \"total\" : 5,\n    \"contentType\" : \"REPORT_DEFINITIONS\",\n    \"state\" : \"FINISHED\"\n  }, {\n    \"type\" : \"import\",\n    \"imported\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0,\n    \"total\" : 5,\n    \"contentType\" : \"DASHBOARDS\",\n    \"state\" : \"FINISHED\"\n  }, {\n    \"type\" : \"import\",\n    \"imported\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0,\n    \"total\" : 5,\n    \"contentType\" : \"REPORT_SCHEDULES\",\n    \"state\" : \"FINISHED\"\n  }, {\n    \"type\" : \"import\",\n    \"imported\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0,\n    \"total\" : 5,\n    \"contentType\" : \"POLICIES\",\n    \"state\" : \"FINISHED\"\n  }, {\n    \"type\" : \"import\",\n    \"imported\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0,\n    \"total\" : 5,\n    \"contentType\" : \"ALERT_DEFINITIONS\",\n    \"state\" : \"FINISHED\"\n  }, {\n    \"type\" : \"import\",\n    \"imported\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0,\n    \"total\" : 5,\n    \"contentType\" : \"SYMPTOM_DEFINITIONS\",\n    \"state\" : \"FINISHED\"\n  }, {\n    \"type\" : \"import\",\n    \"imported\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0,\n    \"total\" : 5,\n    \"contentType\" : \"RECOMMENDATION_DEFINITIONS\",\n    \"state\" : \"FINISHED\"\n  }, {\n    \"type\" : \"import\",\n    \"imported\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0,\n    \"total\" : 5,\n    \"contentType\" : \"CUSTOM_GROUPS\",\n    \"state\" : \"FINISHED\"\n  }, {\n    \"type\" : \"import\",\n    \"imported\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0,\n    \"total\" : 5,\n    \"contentType\" : \"SUPER_METRICS\",\n    \"state\" : \"FINISHED\"\n  }, {\n    \"type\" : \"import\",\n    \"imported\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0,\n    \"total\" : 5,\n    \"contentType\" : \"CONFIG_FILES\",\n    \"state\" : \"FINISHED\"\n  }, {\n    \"type\" : \"import\",\n    \"imported\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0,\n    \"total\" : 5,\n    \"contentType\" : \"COMPLIANCE_SCORECARDS\",\n    \"state\" : \"FINISHED\"\n  }, {\n    \"type\" : \"import\",\n    \"imported\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0,\n    \"total\" : 5,\n    \"contentType\" : \"NOTIFICATION_RULES\",\n    \"state\" : \"FINISHED\"\n  }, {\n    \"type\" : \"import\",\n    \"imported\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0,\n    \"total\" : 5,\n    \"contentType\" : \"OUTBOUND_SETTINGS\",\n    \"state\" : \"FINISHED\"\n  }, {\n    \"type\" : \"import\",\n    \"imported\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0,\n    \"total\" : 5,\n    \"contentType\" : \"PAYLOAD_TEMPLATES\",\n    \"state\" : \"FINISHED\"\n  }, {\n    \"type\" : \"import\",\n    \"imported\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0,\n    \"total\" : 5,\n    \"contentType\" : \"INTEGRATIONS\",\n    \"state\" : \"FINISHED\"\n  }, {\n    \"type\" : \"import\",\n    \"imported\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0,\n    \"total\" : 5,\n    \"contentType\" : \"COST_DRIVERS\",\n    \"state\" : \"FINISHED\"\n  }, {\n    \"type\" : \"import\",\n    \"imported\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0,\n    \"total\" : 5,\n    \"contentType\" : \"USERS\",\n    \"state\" : \"FINISHED\"\n  }, {\n    \"type\" : \"import\",\n    \"imported\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0,\n    \"total\" : 5,\n    \"contentType\" : \"USER_GROUPS\",\n    \"state\" : \"FINISHED\"\n  }, {\n    \"type\" : \"import\",\n    \"imported\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0,\n    \"total\" : 5,\n    \"contentType\" : \"ROLES\",\n    \"state\" : \"FINISHED\"\n  }, {\n    \"type\" : \"import\",\n    \"imported\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0,\n    \"total\" : 5,\n    \"contentType\" : \"AUTH_SOURCES\",\n    \"state\" : \"FINISHED\"\n  }, {\n    \"type\" : \"import\",\n    \"imported\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0,\n    \"total\" : 5,\n    \"contentType\" : \"HTTP_PROXIES\",\n    \"state\" : \"FINISHED\"\n  }, {\n    \"type\" : \"import\",\n    \"imported\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0,\n    \"total\" : 5,\n    \"contentType\" : \"SDMP_CUSTOM_SERVICES\",\n    \"state\" : \"FINISHED\"\n  }, {\n    \"type\" : \"import\",\n    \"imported\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0,\n    \"total\" : 5,\n    \"contentType\" : \"SDMP_CUSTOM_APPLICATIONS\",\n    \"state\" : \"FINISHED\"\n  }, {\n    \"type\" : \"import\",\n    \"imported\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0,\n    \"total\" : 5,\n    \"contentType\" : \"CUSTOM_PROFILES\",\n    \"state\" : \"FINISHED\"\n  }, {\n    \"type\" : \"import\",\n    \"imported\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0,\n    \"total\" : 5,\n    \"contentType\" : \"DISCOVERY_RULES\",\n    \"state\" : \"FINISHED\"\n  }, {\n    \"type\" : \"import\",\n    \"imported\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0,\n    \"total\" : 5,\n    \"contentType\" : \"APP_DEF_ASSIGNMENTS\",\n    \"state\" : \"FINISHED\"\n  }, {\n    \"type\" : \"import\",\n    \"imported\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0,\n    \"total\" : 5,\n    \"contentType\" : \"GLOBAL_SETTINGS\",\n    \"state\" : \"FINISHED\"\n  } ],\n  \"id\" : \"e2d166ae-d963-4ef7-b8de-06fad6046fd4\",\n  \"type\" : \"IMPORT\",\n  \"state\" : \"FINISHED\",\n  \"startTime\" : 1625238290546,\n  \"endTime\" : 1625238320326\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/operation-details"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:operation-details id=\"58d87610-ee7c-4f54-b9c5-e4292aaace2b\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:type>IMPORT</ops:type>\n    <ops:state>FINISHED</ops:state>\n    <ops:startTime>1625238290546</ops:startTime>\n    <ops:endTime>1625238320326</ops:endTime>\n    <ops:operationSummaries>\n        <ops:operationSummary xsi:type=\"ops:importOperationSummary\">\n            <ops:contentType>VIEW_DEFINITIONS</ops:contentType>\n            <ops:state>FINISHED</ops:state>\n            <ops:imported>5</ops:imported>\n            <ops:skipped>0</ops:skipped>\n            <ops:failed>0</ops:failed>\n            <ops:total>5</ops:total>\n            <ops:infoMessages/>\n            <ops:errorMessages/>\n        </ops:operationSummary>\n        <ops:operationSummary xsi:type=\"ops:importOperationSummary\">\n            <ops:contentType>REPORT_DEFINITIONS</ops:contentType>\n            <ops:state>FINISHED</ops:state>\n            <ops:imported>5</ops:imported>\n            <ops:skipped>0</ops:skipped>\n            <ops:failed>0</ops:failed>\n            <ops:total>5</ops:total>\n            <ops:infoMessages/>\n            <ops:errorMessages/>\n        </ops:operationSummary>\n        <ops:operationSummary xsi:type=\"ops:importOperationSummary\">\n            <ops:contentType>DASHBOARDS</ops:contentType>\n            <ops:state>FINISHED</ops:state>\n            <ops:imported>5</ops:imported>\n            <ops:skipped>0</ops:skipped>\n            <ops:failed>0</ops:failed>\n            <ops:total>5</ops:total>\n            <ops:infoMessages/>\n            <ops:errorMessages/>\n        </ops:operationSummary>\n        <ops:operationSummary xsi:type=\"ops:importOperationSummary\">\n            <ops:contentType>REPORT_SCHEDULES</ops:contentType>\n            <ops:state>FINISHED</ops:state>\n            <ops:imported>5</ops:imported>\n            <ops:skipped>0</ops:skipped>\n            <ops:failed>0</ops:failed>\n            <ops:total>5</ops:total>\n            <ops:infoMessages/>\n            <ops:errorMessages/>\n        </ops:operationSummary>\n        <ops:operationSummary xsi:type=\"ops:importOperationSummary\">\n            <ops:contentType>POLICIES</ops:contentType>\n            <ops:state>FINISHED</ops:state>\n            <ops:imported>5</ops:imported>\n            <ops:skipped>0</ops:skipped>\n            <ops:failed>0</ops:failed>\n            <ops:total>5</ops:total>\n            <ops:infoMessages/>\n            <ops:errorMessages/>\n        </ops:operationSummary>\n        <ops:operationSummary xsi:type=\"ops:importOperationSummary\">\n            <ops:contentType>ALERT_DEFINITIONS</ops:contentType>\n            <ops:state>FINISHED</ops:state>\n            <ops:imported>5</ops:imported>\n            <ops:skipped>0</ops:skipped>\n            <ops:failed>0</ops:failed>\n            <ops:total>5</ops:total>\n            <ops:infoMessages/>\n            <ops:errorMessages/>\n        </ops:operationSummary>\n        <ops:operationSummary xsi:type=\"ops:importOperationSummary\">\n            <ops:contentType>SYMPTOM_DEFINITIONS</ops:contentType>\n            <ops:state>FINISHED</ops:state>\n            <ops:imported>5</ops:imported>\n            <ops:skipped>0</ops:skipped>\n            <ops:failed>0</ops:failed>\n            <ops:total>5</ops:total>\n            <ops:infoMessages/>\n            <ops:errorMessages/>\n        </ops:operationSummary>\n        <ops:operationSummary xsi:type=\"ops:importOperationSummary\">\n            <ops:contentType>RECOMMENDATION_DEFINITIONS</ops:contentType>\n            <ops:state>FINISHED</ops:state>\n            <ops:imported>5</ops:imported>\n            <ops:skipped>0</ops:skipped>\n            <ops:failed>0</ops:failed>\n            <ops:total>5</ops:total>\n            <ops:infoMessages/>\n            <ops:errorMessages/>\n        </ops:operationSummary>\n        <ops:operationSummary xsi:type=\"ops:importOperationSummary\">\n            <ops:contentType>CUSTOM_GROUPS</ops:contentType>\n            <ops:state>FINISHED</ops:state>\n            <ops:imported>5</ops:imported>\n            <ops:skipped>0</ops:skipped>\n            <ops:failed>0</ops:failed>\n            <ops:total>5</ops:total>\n            <ops:infoMessages/>\n            <ops:errorMessages/>\n        </ops:operationSummary>\n        <ops:operationSummary xsi:type=\"ops:importOperationSummary\">\n            <ops:contentType>SUPER_METRICS</ops:contentType>\n            <ops:state>FINISHED</ops:state>\n            <ops:imported>5</ops:imported>\n            <ops:skipped>0</ops:skipped>\n            <ops:failed>0</ops:failed>\n            <ops:total>5</ops:total>\n            <ops:infoMessages/>\n            <ops:errorMessages/>\n        </ops:operationSummary>\n        <ops:operationSummary xsi:type=\"ops:importOperationSummary\">\n            <ops:contentType>CONFIG_FILES</ops:contentType>\n            <ops:state>FINISHED</ops:state>\n            <ops:imported>5</ops:imported>\n            <ops:skipped>0</ops:skipped>\n            <ops:failed>0</ops:failed>\n            <ops:total>5</ops:total>\n            <ops:infoMessages/>\n            <ops:errorMessages/>\n        </ops:operationSummary>\n        <ops:operationSummary xsi:type=\"ops:importOperationSummary\">\n            <ops:contentType>COMPLIANCE_SCORECARDS</ops:contentType>\n            <ops:state>FINISHED</ops:state>\n            <ops:imported>5</ops:imported>\n            <ops:skipped>0</ops:skipped>\n            <ops:failed>0</ops:failed>\n            <ops:total>5</ops:total>\n            <ops:infoMessages/>\n            <ops:errorMessages/>\n        </ops:operationSummary>\n        <ops:operationSummary xsi:type=\"ops:importOperationSummary\">\n            <ops:contentType>NOTIFICATION_RULES</ops:contentType>\n            <ops:state>FINISHED</ops:state>\n            <ops:imported>5</ops:imported>\n            <ops:skipped>0</ops:skipped>\n            <ops:failed>0</ops:failed>\n            <ops:total>5</ops:total>\n            <ops:infoMessages/>\n            <ops:errorMessages/>\n        </ops:operationSummary>\n        <ops:operationSummary xsi:type=\"ops:importOperationSummary\">\n            <ops:contentType>OUTBOUND_SETTINGS</ops:contentType>\n            <ops:state>FINISHED</ops:state>\n            <ops:imported>5</ops:imported>\n            <ops:skipped>0</ops:skipped>\n            <ops:failed>0</ops:failed>\n            <ops:total>5</ops:total>\n            <ops:infoMessages/>\n            <ops:errorMessages/>\n        </ops:operationSummary>\n        <ops:operationSummary xsi:type=\"ops:importOperationSummary\">\n            <ops:contentType>PAYLOAD_TEMPLATES</ops:contentType>\n            <ops:state>FINISHED</ops:state>\n            <ops:imported>5</ops:imported>\n            <ops:skipped>0</ops:skipped>\n            <ops:failed>0</ops:failed>\n            <ops:total>5</ops:total>\n            <ops:infoMessages/>\n            <ops:errorMessages/>\n        </ops:operationSummary>\n        <ops:operationSummary xsi:type=\"ops:importOperationSummary\">\n            <ops:contentType>INTEGRATIONS</ops:contentType>\n            <ops:state>FINISHED</ops:state>\n            <ops:imported>5</ops:imported>\n            <ops:skipped>0</ops:skipped>\n            <ops:failed>0</ops:failed>\n            <ops:total>5</ops:total>\n            <ops:infoMessages/>\n            <ops:errorMessages/>\n        </ops:operationSummary>\n        <ops:operationSummary xsi:type=\"ops:importOperationSummary\">\n            <ops:contentType>COST_DRIVERS</ops:contentType>\n            <ops:state>FINISHED</ops:state>\n            <ops:imported>5</ops:imported>\n            <ops:skipped>0</ops:skipped>\n            <ops:failed>0</ops:failed>\n            <ops:total>5</ops:total>\n            <ops:infoMessages/>\n            <ops:errorMessages/>\n        </ops:operationSummary>\n        <ops:operationSummary xsi:type=\"ops:importOperationSummary\">\n            <ops:contentType>USERS</ops:contentType>\n            <ops:state>FINISHED</ops:state>\n            <ops:imported>5</ops:imported>\n            <ops:skipped>0</ops:skipped>\n            <ops:failed>0</ops:failed>\n            <ops:total>5</ops:total>\n            <ops:infoMessages/>\n            <ops:errorMessages/>\n        </ops:operationSummary>\n        <ops:operationSummary xsi:type=\"ops:importOperationSummary\">\n            <ops:contentType>USER_GROUPS</ops:contentType>\n            <ops:state>FINISHED</ops:state>\n            <ops:imported>5</ops:imported>\n            <ops:skipped>0</ops:skipped>\n            <ops:failed>0</ops:failed>\n            <ops:total>5</ops:total>\n            <ops:infoMessages/>\n            <ops:errorMessages/>\n        </ops:operationSummary>\n        <ops:operationSummary xsi:type=\"ops:importOperationSummary\">\n            <ops:contentType>ROLES</ops:contentType>\n            <ops:state>FINISHED</ops:state>\n            <ops:imported>5</ops:imported>\n            <ops:skipped>0</ops:skipped>\n            <ops:failed>0</ops:failed>\n            <ops:total>5</ops:total>\n            <ops:infoMessages/>\n            <ops:errorMessages/>\n        </ops:operationSummary>\n        <ops:operationSummary xsi:type=\"ops:importOperationSummary\">\n            <ops:contentType>AUTH_SOURCES</ops:contentType>\n            <ops:state>FINISHED</ops:state>\n            <ops:imported>5</ops:imported>\n            <ops:skipped>0</ops:skipped>\n            <ops:failed>0</ops:failed>\n            <ops:total>5</ops:total>\n            <ops:infoMessages/>\n            <ops:errorMessages/>\n        </ops:operationSummary>\n        <ops:operationSummary xsi:type=\"ops:importOperationSummary\">\n            <ops:contentType>HTTP_PROXIES</ops:contentType>\n            <ops:state>FINISHED</ops:state>\n            <ops:imported>5</ops:imported>\n            <ops:skipped>0</ops:skipped>\n            <ops:failed>0</ops:failed>\n            <ops:total>5</ops:total>\n            <ops:infoMessages/>\n            <ops:errorMessages/>\n        </ops:operationSummary>\n        <ops:operationSummary xsi:type=\"ops:importOperationSummary\">\n            <ops:contentType>SDMP_CUSTOM_SERVICES</ops:contentType>\n            <ops:state>FINISHED</ops:state>\n            <ops:imported>5</ops:imported>\n            <ops:skipped>0</ops:skipped>\n            <ops:failed>0</ops:failed>\n            <ops:total>5</ops:total>\n            <ops:infoMessages/>\n            <ops:errorMessages/>\n        </ops:operationSummary>\n        <ops:operationSummary xsi:type=\"ops:importOperationSummary\">\n            <ops:contentType>SDMP_CUSTOM_APPLICATIONS</ops:contentType>\n            <ops:state>FINISHED</ops:state>\n            <ops:imported>5</ops:imported>\n            <ops:skipped>0</ops:skipped>\n            <ops:failed>0</ops:failed>\n            <ops:total>5</ops:total>\n            <ops:infoMessages/>\n            <ops:errorMessages/>\n        </ops:operationSummary>\n        <ops:operationSummary xsi:type=\"ops:importOperationSummary\">\n            <ops:contentType>CUSTOM_PROFILES</ops:contentType>\n            <ops:state>FINISHED</ops:state>\n            <ops:imported>5</ops:imported>\n            <ops:skipped>0</ops:skipped>\n            <ops:failed>0</ops:failed>\n            <ops:total>5</ops:total>\n            <ops:infoMessages/>\n            <ops:errorMessages/>\n        </ops:operationSummary>\n        <ops:operationSummary xsi:type=\"ops:importOperationSummary\">\n            <ops:contentType>DISCOVERY_RULES</ops:contentType>\n            <ops:state>FINISHED</ops:state>\n            <ops:imported>5</ops:imported>\n            <ops:skipped>0</ops:skipped>\n            <ops:failed>0</ops:failed>\n            <ops:total>5</ops:total>\n            <ops:infoMessages/>\n            <ops:errorMessages/>\n        </ops:operationSummary>\n        <ops:operationSummary xsi:type=\"ops:importOperationSummary\">\n            <ops:contentType>APP_DEF_ASSIGNMENTS</ops:contentType>\n            <ops:state>FINISHED</ops:state>\n            <ops:imported>5</ops:imported>\n            <ops:skipped>0</ops:skipped>\n            <ops:failed>0</ops:failed>\n            <ops:total>5</ops:total>\n            <ops:infoMessages/>\n            <ops:errorMessages/>\n        </ops:operationSummary>\n        <ops:operationSummary xsi:type=\"ops:importOperationSummary\">\n            <ops:contentType>GLOBAL_SETTINGS</ops:contentType>\n            <ops:state>FINISHED</ops:state>\n            <ops:imported>5</ops:imported>\n            <ops:skipped>0</ops:skipped>\n            <ops:failed>0</ops:failed>\n            <ops:total>5</ops:total>\n            <ops:infoMessages/>\n            <ops:errorMessages/>\n        </ops:operationSummary>\n    </ops:operationSummaries>\n    <ops:errorMessages/>\n</ops:operation-details>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/operation-details"
                }
              }
            },
            "description": "The details of content operation"
          }
        },

        "tags": [
          "Content Management"
        ],
        "deprecated": false,
        "description": "The response contains information about the last import operation details",
        "operationId": "getLastImportOperationUsingGET",
        "summary": "Get the last import operation details"
      },
      "post": {
        "parameters": [
          {
            "description": "Key for decrypting sensitive information",
            "in": "header",
            "name": "EncryptionPassword",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "True to force solution content overwrite",
            "in": "query",
            "name": "force",
            "required": false,
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"fileName\" : \"contentFile\",\n  \"force\" : false,\n  \"id\" : \"bb1f4c64-b1e9-4a3f-a051-790d926342d2\",\n  \"links\" : [ {\n    \"href\" : \"/suite-api/api/content/operations/import\",\n    \"rel\" : \"RELATED\",\n    \"name\" : \"ImportStatusCheckURL\",\n    \"description\" : \"Status of the last import operation\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/content-import"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:content-import id=\"bb1f4c64-b1e9-4a3f-a051-790d926342d2\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:fileName>contentFile</ops:fileName>\n    <ops:force>false</ops:force>\n    <ops:links>\n        <ops:link href=\"/suite-api/api/content/operations/import\" rel=\"RELATED\" name=\"ImportStatusCheckURL\">\n            <ops:description>Status of the last import operation</ops:description>\n        </ops:link>\n    </ops:links>\n</ops:content-import>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/content-import"
                }
              }
            },
            "description": "The import of content has been accepted"
          }
        },

        "tags": [
          "Content Management"
        ],
        "deprecated": false,
        "description": "The \"Content-Type\" of the request is multipart/form-data. If the force option is set to true, content will be overwritten.  By default the flag is true. \n <b>NOTE:</b>  If the content file contains integration accounts, then upon completion of the import process, it is recommended to check them. Some collectors or collector groups may have become unbound from the accounts they serve and should be reconnected. Additionally, you will need to re-accept all untrusted certificates manually. Finally ensure that all your adapter instances are started as some of these may not have been restarted automatically.",
        "operationId": "importContentUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/importCertificateUsingPOST"
        },
        "summary": "Import content for current user from uploaded file"
      }
    },
    "/api/content/progress": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/contentProgress"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/contentProgress"
                }
              }
            },
            "description": "An object to monitor the progress"
          }
        },

        "tags": [
          "Content Management"
        ],
        "deprecated": true,
        "description": "Get content progress",
        "operationId": "getContentProgressUsingGET",
        "summary": "(Deprecated) Get content progress"
      }
    },
    "/api/content/restore": {
      "post": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "True to force solution content overwrite",
            "in": "query",
            "name": "forceContentUpdate",
            "required": false,
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The content is restored successfully"
          }
        },

        "tags": [
          "Content Management"
        ],
        "deprecated": true,
        "description": "The \"Content-Type\" of the request is multipart/form-data.",
        "operationId": "restoreContentUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/importCertificateUsingPOST"
        },
        "summary": "(Deprecated) Restore content for current user from uploaded file"
      }
    },
    "/api/content/restore/result": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/content"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/content"
                }
              }
            },
            "description": "The restore data report for current user"
          }
        },

        "tags": [
          "Content Management"
        ],
        "deprecated": true,
        "description": "Get restore data report for current user",
        "operationId": "getRestoreContentDataUsingGET",
        "summary": "(Deprecated) Get restore data report for current user"
      }
    },
    "/api/costconfig/currency": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"name\" : \"US Dollar\",\n  \"code\" : \"USD\",\n  \"numericCode\" : \"840\",\n  \"symbol\" : \"\\\\$\"\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/currency"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:currency name=\"US Dollar\" code=\"USD\" numericCode=\"840\" symbol=\"\\$\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"/>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/currency"
                }
              }
            },
            "description": "Currency containing currency details"
          }
        },

        "tags": [
          "Cost Configuration"
        ],
        "deprecated": false,
        "description": "Get details of currently selected currency such as display name, code, etc.",
        "operationId": "getCurrencyUsingGET",
        "summary": "Get details of currently selected currency such as display name, code, etc."
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"name\" : \"US Dollar\",\n  \"code\" : \"USD\",\n  \"numericCode\" : \"840\",\n  \"symbol\" : \"\\\\$\"\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/currency"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:currency name=\"US Dollar\" code=\"USD\" numericCode=\"840\" symbol=\"\\$\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"/>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/currency"
                }
              }
            },
            "description": "Currency containing currency details"
          }
        },

        "tags": [
          "Cost Configuration"
        ],
        "deprecated": false,
        "description": "Set currency",
        "operationId": "setCurrencyUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/currency-config"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/currency-config"
              }
            }
          },
          "description": "The Currency configuration",
          "required": true
        },
        "summary": "Set currency"
      }
    },
    "/api/credentialkinds": {
      "get": {
        "parameters": [
          {
            "description": "Filter by Adapter Kind Key",
            "explode": true,
            "in": "query",
            "name": "adapterKind",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"credentialTypes\" : [ {\n    \"name\" : \"Principal Credential\",\n    \"adapterKindKey\" : \"VMWARE\",\n    \"fields\" : [ {\n      \"key\" : \"USER\",\n      \"valueType\" : \"STRING\",\n      \"required\" : false,\n      \"enumerated\" : false\n    }, {\n      \"key\" : \"PASSWORD\",\n      \"valueType\" : \"STRING\",\n      \"required\" : false,\n      \"enumerated\" : false\n    } ],\n    \"id\" : \"PRINCIPALCREDENTIAL\"\n  }, {\n    \"name\" : \"Principal Credential\",\n    \"adapterKindKey\" : \"InvSvcAdapter\",\n    \"fields\" : [ {\n      \"key\" : \"VCADMIN\",\n      \"valueType\" : \"STRING\",\n      \"required\" : false,\n      \"enumerated\" : false\n    }, {\n      \"key\" : \"VCADMINPASSWORD\",\n      \"valueType\" : \"STRING\",\n      \"required\" : false,\n      \"enumerated\" : false\n    } ],\n    \"id\" : \"PRINCIPALCREDENTIAL\"\n  }, {\n    \"name\" : \"Http Credential\",\n    \"adapterKindKey\" : \"ExampleAdapter\",\n    \"fields\" : [ {\n      \"key\" : \"UserType\",\n      \"defaultValue\" : \"User\",\n      \"valueType\" : \"string\",\n      \"required\" : false,\n      \"enumerated\" : true,\n      \"enumeratedValues\" : [ \"Admin\", \"User\", \"Anonymous\" ]\n    }, {\n      \"key\" : \"Password\",\n      \"valueType\" : \"STRING\",\n      \"required\" : false,\n      \"enumerated\" : false\n    } ],\n    \"id\" : \"HTTP\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/credential-kinds"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:credential-kinds xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:credential-kind id=\"PRINCIPALCREDENTIAL\">\n        <ops:name>Principal Credential</ops:name>\n        <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n        <ops:fields>\n            <ops:field key=\"USER\" valueType=\"STRING\" required=\"false\" enumerated=\"false\"/>\n            <ops:field key=\"PASSWORD\" valueType=\"STRING\" required=\"false\" enumerated=\"false\"/>\n        </ops:fields>\n    </ops:credential-kind>\n    <ops:credential-kind id=\"PRINCIPALCREDENTIAL\">\n        <ops:name>Principal Credential</ops:name>\n        <ops:adapterKindKey>InvSvcAdapter</ops:adapterKindKey>\n        <ops:fields>\n            <ops:field key=\"VCADMIN\" valueType=\"STRING\" required=\"false\" enumerated=\"false\"/>\n            <ops:field key=\"VCADMINPASSWORD\" valueType=\"STRING\" required=\"false\" enumerated=\"false\"/>\n        </ops:fields>\n    </ops:credential-kind>\n    <ops:credential-kind id=\"HTTP\">\n        <ops:name>Http Credential</ops:name>\n        <ops:adapterKindKey>ExampleAdapter</ops:adapterKindKey>\n        <ops:fields>\n            <ops:field key=\"UserType\" defaultValue=\"User\" valueType=\"string\" required=\"false\" enumerated=\"true\">\n                <ops:enumeratedValues>\n                    <ops:enumeratedValue>Admin</ops:enumeratedValue>\n                    <ops:enumeratedValue>User</ops:enumeratedValue>\n                    <ops:enumeratedValue>Anonymous</ops:enumeratedValue>\n                </ops:enumeratedValues>\n            </ops:field>\n            <ops:field key=\"Password\" valueType=\"STRING\" required=\"false\" enumerated=\"false\"/>\n        </ops:fields>\n    </ops:credential-kind>\n</ops:credential-kinds>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/credential-kinds"
                }
              }
            },
            "description": "A list of Credential Instances"
          }
        },

        "tags": [
          "Credentials"
        ],
        "deprecated": false,
        "description": "Gets all the Credential Kinds defined in the system.  Optionally filter by adapter kind keys.",
        "operationId": "getCredentialKindsUsingGET",
        "summary": "Get all Credential Kinds defined in the system"
      }
    },
    "/api/credentials": {
      "get": {
        "parameters": [
          {
            "description": "Filter by Adapter Kind Id",
            "explode": true,
            "in": "query",
            "name": "adapterKind",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filter by Credential Instance Id",
            "explode": true,
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "explode": true,
            "in": "query",
            "name": "others",
            "required": false,
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"credentialInstances\" : [ {\n    \"id\" : \"6370f617-2117-4f3c-94ab-9b0ea8a88083\",\n    \"name\" : \"My VC Credential\",\n    \"adapterKindKey\" : \"VMWARE\",\n    \"credentialKindKey\" : \"PRINCIPALCREDENTIAL\",\n    \"fields\" : [ {\n      \"name\" : \"USER\",\n      \"value\" : \"root\"\n    }, {\n      \"name\" : \"PASSWORD\"\n    } ]\n  }, {\n    \"id\" : \"77b89023-e831-40da-a0f6-ab7b9bd27a61\",\n    \"name\" : \"My IS Credential\",\n    \"adapterKindKey\" : \"InvSvcAdapter\",\n    \"credentialKindKey\" : \"PRINCIPALCREDENTIAL\",\n    \"fields\" : [ {\n      \"name\" : \"VCUSER\",\n      \"value\" : \"root\"\n    }, {\n      \"name\" : \"VCPASSWORD\"\n    } ]\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/credential-instances"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:credential-instances xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:credential id=\"ed8cff5c-34ab-4587-b6d3-4db2e72c2b47\">\n        <ops:name>My VC Credential</ops:name>\n        <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n        <ops:credentialKindKey>PRINCIPALCREDENTIAL</ops:credentialKindKey>\n        <ops:fields>\n            <ops:field name=\"USER\">root</ops:field>\n            <ops:field name=\"PASSWORD\"/>\n        </ops:fields>\n    </ops:credential>\n    <ops:credential id=\"7c31ae50-c5ff-4892-9c8e-f8061f494449\">\n        <ops:name>My IS Credential</ops:name>\n        <ops:adapterKindKey>InvSvcAdapter</ops:adapterKindKey>\n        <ops:credentialKindKey>PRINCIPALCREDENTIAL</ops:credentialKindKey>\n        <ops:fields>\n            <ops:field name=\"VCUSER\">root</ops:field>\n            <ops:field name=\"VCPASSWORD\"/>\n        </ops:fields>\n    </ops:credential>\n</ops:credential-instances>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/credential-instances"
                }
              }
            },
            "description": "List of Credential Instances"
          }
        },

        "tags": [
          "Credentials"
        ],
        "deprecated": false,
        "description": "Gets all the Credential Instances in the system.  Optionally filter by adapter kind keys or credential instance identifiers.",
        "operationId": "getCredentialsUsingGET",
        "summary": "Get all Credential Instances in the system"
      },
      "patch": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"156e3126-fa88-4022-b151-17421089fea1\",\n  \"name\" : \"My VC Credential\",\n  \"adapterKindKey\" : \"VMWARE\",\n  \"credentialKindKey\" : \"PRINCIPALCREDENTIAL\",\n  \"fields\" : [ {\n    \"name\" : \"USER\",\n    \"value\" : \"root\"\n  }, {\n    \"name\" : \"PASSWORD\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/credential"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:credential id=\"53e83cbe-900e-4222-902d-77c0375468a2\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:name>My VC Credential</ops:name>\n    <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n    <ops:credentialKindKey>PRINCIPALCREDENTIAL</ops:credentialKindKey>\n    <ops:fields>\n        <ops:field name=\"USER\">root</ops:field>\n        <ops:field name=\"PASSWORD\"/>\n    </ops:fields>\n</ops:credential>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/credential"
                }
              }
            },
            "description": "The updated credential instance"
          },
          "404": {
            "description": "The Credential Instance does not exist"
          }
        },

        "tags": [
          "Credentials"
        ],
        "deprecated": false,
        "description": "Partial update an existing Credential Instance",
        "operationId": "partialUpdateCredentialUsingPATCH",
        "requestBody": {
          "$ref": "#/components/requestBodies/credential"
        },
        "summary": "Partial update an existing Credential Instance"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"db5f6626-264e-4a55-9e7d-99151a608aff\",\n  \"name\" : \"My VC Credential\",\n  \"adapterKindKey\" : \"VMWARE\",\n  \"credentialKindKey\" : \"PRINCIPALCREDENTIAL\",\n  \"fields\" : [ {\n    \"name\" : \"USER\",\n    \"value\" : \"root\"\n  }, {\n    \"name\" : \"PASSWORD\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/credential"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:credential id=\"1d1ee70d-4297-4627-9e08-3ded5065c2f6\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:name>My VC Credential</ops:name>\n    <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n    <ops:credentialKindKey>PRINCIPALCREDENTIAL</ops:credentialKindKey>\n    <ops:fields>\n        <ops:field name=\"USER\">root</ops:field>\n        <ops:field name=\"PASSWORD\"/>\n    </ops:fields>\n</ops:credential>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/credential"
                }
              }
            },
            "description": "The Credential Instance created"
          },
          "400": {
            "description": "Invalid request parameters or request body"
          },
          "422": {
            "description": "Credential Instance with same name already exists"
          }
        },

        "tags": [
          "Credentials"
        ],
        "deprecated": false,
        "description": "Create a new Credential Instance",
        "operationId": "createCredentialUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/credential"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/credential"
              }
            }
          },
          "description": "The Credential Instance information",
          "required": true
        },
        "summary": "Create a new Credential Instance"
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"b6a603ae-a3b2-4063-934f-436c1723f681\",\n  \"name\" : \"My VC Credential\",\n  \"adapterKindKey\" : \"VMWARE\",\n  \"credentialKindKey\" : \"PRINCIPALCREDENTIAL\",\n  \"fields\" : [ {\n    \"name\" : \"USER\",\n    \"value\" : \"root\"\n  }, {\n    \"name\" : \"PASSWORD\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/credential"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:credential id=\"a9ccbb48-a674-4f21-ba4f-195064c8bf0b\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:name>My VC Credential</ops:name>\n    <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n    <ops:credentialKindKey>PRINCIPALCREDENTIAL</ops:credentialKindKey>\n    <ops:fields>\n        <ops:field name=\"USER\">root</ops:field>\n        <ops:field name=\"PASSWORD\"/>\n    </ops:fields>\n</ops:credential>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/credential"
                }
              }
            },
            "description": "The Updated Credential Instance"
          },
          "404": {
            "description": "The Credential Instance does not exist"
          }
        },

        "tags": [
          "Credentials"
        ],
        "deprecated": false,
        "description": "Update an existing Credential Instance",
        "operationId": "updateCredentialUsingPUT",
        "requestBody": {
          "$ref": "#/components/requestBodies/credential"
        },
        "summary": "Update an existing Credential Instance"
      }
    },
    "/api/credentials/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The identifier of the specific Credential Instance",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The Credential Instance was deleted successfully or no longer exists"
          }
        },

        "tags": [
          "Credentials"
        ],
        "deprecated": false,
        "description": "Delete a Credential Instance using the identifier specified.  Requires the authenticated user to have correct privilege.",
        "operationId": "deleteCredentialUsingDELETE",
        "summary": "Delete a Credential Instance"
      },
      "get": {
        "parameters": [
          {
            "description": "The identifier of the specific Credential Instance",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"e0f55c89-673b-4d68-aff0-8c83a136ae80\",\n  \"name\" : \"My VC Credential\",\n  \"adapterKindKey\" : \"VMWARE\",\n  \"credentialKindKey\" : \"PRINCIPALCREDENTIAL\",\n  \"fields\" : [ {\n    \"name\" : \"USER\",\n    \"value\" : \"root\"\n  }, {\n    \"name\" : \"PASSWORD\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/credential"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:credential id=\"1816c212-25b5-41d0-b043-588ae9b8774f\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:name>My VC Credential</ops:name>\n    <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n    <ops:credentialKindKey>PRINCIPALCREDENTIAL</ops:credentialKindKey>\n    <ops:fields>\n        <ops:field name=\"USER\">root</ops:field>\n        <ops:field name=\"PASSWORD\"/>\n    </ops:fields>\n</ops:credential>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/credential"
                }
              }
            },
            "description": "The Credential Instance"
          },
          "404": {
            "description": "The Credential Instance does not exist"
          }
        },

        "tags": [
          "Credentials"
        ],
        "deprecated": false,
        "description": "Get a Credential Instance using the identifier specified",
        "operationId": "getCredentialUsingGET",
        "summary": "Get a Credential Instance"
      }
    },
    "/api/credentials/{id}/adapters": {
      "get": {
        "parameters": [
          {
            "description": "The identifier of the specific Credential Instance",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"adapterInstancesInfoDto\" : [ {\n    \"resourceKey\" : {\n      \"name\" : \"VC Adapter for 10.20.88.111\",\n      \"adapterKindKey\" : \"VMWARE\",\n      \"resourceKindKey\" : \"Adapter\"\n    },\n    \"description\" : \"A vCenter Adapter Instance\",\n    \"collectorId\" : 1,\n    \"credentialInstanceId\" : \"a2affef4-0335-49e0-9328-b1b4af739ffd\",\n    \"id\" : \"9bd576db-9853-4b9f-a31e-6c0d5e5ecbad\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/adapter-instances"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:adapter-instances xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:adapter-instance id=\"e3fa0bb3-e983-4ee4-9a6e-fe87a0cf71af\">\n        <ops:resourceKey>\n            <ops:name>VC Adapter for 10.20.88.111</ops:name>\n            <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n            <ops:resourceKindKey>Adapter</ops:resourceKindKey>\n            <ops:resourceIdentifiers/>\n        </ops:resourceKey>\n        <ops:description>A vCenter Adapter Instance</ops:description>\n        <ops:collectorId>1</ops:collectorId>\n        <ops:credentialInstanceId>15465577-5996-4529-b588-c7403d1078b5</ops:credentialInstanceId>\n    </ops:adapter-instance>\n</ops:adapter-instances>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/adapter-instances"
                }
              }
            },
            "description": "List of Adapter Instances which are using the specified credential instance"
          },
          "404": {
            "description": "The Credential Instance does not exist"
          }
        },

        "tags": [
          "Credentials"
        ],
        "deprecated": false,
        "description": "Gets the Adapter Instances using the Credential Instance specified by the identifier.",
        "operationId": "getAdapterInstancesUsingCredentialUsingGET",
        "summary": "Get all Adapter Instances using the Credential Instance"
      }
    },
    "/api/credentials/{id}/resources": {
      "get": {
        "parameters": [
          {
            "description": "The identifier of the specific Credential Instance",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Page number from which data needs to be displayed (0-based)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Expected number of entries per page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resources"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resources"
                }
              }
            },
            "description": "A list of Objects using the Credential Instance"
          },
          "404": {
            "description": "The Credential Instance does not exist"
          }
        },

        "tags": [
          "Credentials"
        ],
        "deprecated": false,
        "description": "Gets the Objects using the Credential Instance specified by the identifier.",
        "operationId": "getResourcesUsingCredentialUsingGET",
        "summary": "Get the Objects using the Credential Instance"
      }
    },
    "/api/deployment/cluster/dt": {
      "put": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "The type of action that one needs to perform - can be either \"start\" or \"stop\"",
            "in": "query",
            "name": "action",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "DT Calculation task was started or stopped successfully without any error"
          },
          "500": {
            "description": "DT Calculation task was not started successfully and there were some errors"
          }
        },

        "tags": [
          "Deployment"
        ],
        "deprecated": false,
        "description": "Currently one can Start or Stop a DT Run.\n<b>Sample URI:</b>\n<code>PUT /api/deployment/cluster/dt?action=start</code>\n<code>PUT /api/deployment/cluster/dt?action=stop</code>",
        "operationId": "manageDTUsingPUT",
        "summary": "Manages a specific run of Dynamic Threshold (DT) Computation in a VMware Aria Operations Cluster"
      }
    },
    "/api/deployment/config/globalsettings": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entries"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/entries"
                }
              }
            },
            "description": "The global setting keys and values"
          }
        },

        "tags": [
          "Deployment"
        ],
        "deprecated": false,
        "description": "All the key-name mappings can be found in the <i>/api/deployment/config/globalsettings/metadata</i> API's description.",
        "operationId": "getGlobalSettingsUsingGET",
        "summary": "Get all global setting values"
      }
    },
    "/api/deployment/config/globalsettings/metadata": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/global-settings-properties"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/global-settings-properties"
                }
              }
            },
            "description": "The global setting metadata"
          }
        },

        "tags": [
          "Deployment"
        ],
        "deprecated": false,
        "description": "<b>Find all the name-key mappings here: </b>\n\nAction History - ACTION_RETENTION_IN_DAYS,\nDeleted Objects - DELETED_OBJECTS_RETENTION_IN_HOURS, \nDeletion Scheduling Interval - DELETION_SCHEDULING_INTERVAL_IN_HOURS, \nObject History - OBJECT_HISTORY_RETENTION_IN_DAYS, \nGenerated Reports Retention - GENERATED_REPORTS_RETENTION_TIME_IN_MONTHS, \nSession Timeout - SESSION_TIMEOUT_IN_MINUTES, \nSymptoms/Alerts - CANCELLED_ALERTS_SYMPTOMS_RETENTION_TIME_IN_DAYS, \nTime Series Data Retention - TIME_SERIES_DATA_RETENTION_IN_MONTHS, \nAdditional Time Series Retention - ROLLUP_TIME_SERIES_DATA_RETENTION_IN_MONTHS, \nDeleted Users - DELETED_USERS_RETENTION_IN_DAYS, \nExternal Event Based Active Symptoms - OUTDATED_EVENT_BASED_SYMPTOMS_CANCELING_ENABLED, \nExternal Event Based Active Symptoms - ACTIVE_EVENT_BASED_SYMPTOMS_RETENTION_TIME_IN_DAYS, \nMaintain Relationship History - OBJECT_RELATIONSHIP_HISTORY_ENABLED, \nDynamic Threshold Calculation - DYNAMIC_THRESHOLDING_UPDATE_TIME_IN_MINUTES, \nCost Calculation - COST_CALCULATION_TIME_IN_MINUTES, \nCustomer Experience Improvement Program - TELEMETRY_ENABLED, \nAllow vCenter users to log in to individual vCenters from VMware Aria Operations - VC_USER_LOGIN_TO_INDIVIDUAL_VC_ALLOWED, \nAllow vCenter users to log into VMware Aria Operations from vCenter clients - VC_USER_LOGIN_FROM_VC_WEBUI_ALLOWED, \nAllow vCenter users to log in to all vCenters from VMware Aria Operations - VC_USER_LOGIN_TO_ALL_VC_ALLOWED, \nSystem access URL - BASE_URL, \nAutomated Actions - AUTOMATED_ACTIONS_ENABLED, \nEnable Standard Certification Validation - ENABLE_CERTIFICATE_VALIDATION_STANDARD_WAY, \nConcurrent UI login sessions - ALLOW_CONCURRENT_LOGIN_SESSIONS, \nAllow non-imported vIDM user access - ALLOW_NON_IMPORTED_VIDM_USERS_ACCESS, \nDynamic Threshold Calculation - DYNAMIC_THRESHOLDING_ENABLED, \nCost Calculation - COST_CALCULATION_ENABLED, \nDeleted Objects - DELETED_OBJECTS_RETENTION_IN_HOURS_EXPANSION, \nGenerated Reports Retention - GENERATED_REPORTS_RETENTION_ENABLED, \nDocker image default registry URL - DOCKER_IMAGE_REGISTRY_URL, \nTag Based Pricing Metrics - PRICING_TAG_DETAILED_METRICS, \nTag based Costing Metrics - COSTING_TAG_DETAILED_METRICS, \nCluster Utilization Ceiling Factor - CLUSTER_UTILIZATION_ROUND_OFF, \nGenerated Reports Retention - GENERATED_REPORTS_RETENTION_TIME_IN_DAYS, \nThreshold For Adapters Certificate Expiration Alert - CERTIFICATE_ALARM_DAYS, \nShow Cost Savings - SHOW_COST_SAVINGS_RECLAMATION_SETTING, \nInclude Powered off VMs for Reclamation (flag) - RECLAIM_POWERED_OFF_VMS_ENABLED, \nInclude Powered off VMs for Reclamation (days) - RECLAIM_POWERED_OFF_VMS_DAYS, \nInclude Idle VMs for Reclamation - RECLAIM_IDLE_VMS_ENABLED, \nMinimum number of days that VM has been idle for - RECLAIM_IDLE_VMS_DAYS, \nExclude VM provisioned in last - EXCLUDE_IDLE_VMS_PROVISIONED_IN_LAST_DAYS, \nVM Idleness Criteria (MHz) - IDLENESS_INDICATOR_THRESHOLD_MHZ, \nVM Idleness Criteria (%) - IDLENESS_INDICATOR_THRESHOLD_PERCENT, \nInclude Snapshots for Reclamation (flag) - RECLAIM_SNAPSHOTS_ENABLED, \nInclude Snapshots for Reclamation (days) - RECLAIM_SNAPSHOTS_DAYS, \nInclude Orphaned Disks for Reclamation (flag) - RECLAIM_ORPHANED_DISKS_ENABLED, \nInclude Orphaned Disks for Reclamation (days) - RECLAIM_ORPHANED_DISKS_DAYS, \nOrphaned Disks Collection Time - ORPHANED_VMDK_COLLECTION_TIME_IN_MINUTES, \nNear Real-Time Monitoring Data Retention - NEAR_REAL_TIME_OBJECT_HISTORY_RETENTION.",
        "operationId": "getGlobalSettingMetadataUsingGET",
        "summary": "Get global settings metadata"
      }
    },
    "/api/deployment/config/globalsettings/{key}": {
      "get": {
        "parameters": [
          {
            "description": "The global setting key",
            "in": "path",
            "name": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entry"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/entry"
                }
              }
            },
            "description": "The global setting value"
          }
        },

        "tags": [
          "Deployment"
        ],
        "deprecated": false,
        "description": "All the key-name mappings can be found in the <i>/api/deployment/config/globalsettings/metadata</i> API's description.",
        "operationId": "getGlobalSettingValueUsingGET",
        "summary": "Get global setting value for the requested key"
      }
    },
    "/api/deployment/config/globalsettings/{key}/{value}": {
      "put": {
        "parameters": [
          {
            "description": "The global setting key",
            "in": "path",
            "name": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The global setting value",
            "in": "path",
            "name": "value",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The global setting value is updated"
          }
        },

        "tags": [
          "Deployment"
        ],
        "deprecated": false,
        "description": "All the key-name mappings can be found in the <i>/api/deployment/config/globalsettings/metadata</i> API's description.",
        "operationId": "updateGlobalSettingValueUsingPUT",
        "summary": "Update global setting value for specified key"
      }
    },
    "/api/events": {
      "post": {
        "responses": {
          "200": {
            "description": "The Event is added successfully"
          }
        },

        "tags": [
          "Events"
        ],
        "deprecated": false,
        "description": "Push a single Event into the system",
        "operationId": "pushEventUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/event"
        },
        "summary": "Push a single Event into the system"
      }
    },
    "/api/events/adapterkinds/{adapterKind}": {
      "post": {
        "parameters": [
          {
            "description": "The adapter kind key of the adapter source",
            "in": "path",
            "name": "adapterKind",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Event is added successfully"
          }
        },

        "tags": [
          "Events"
        ],
        "deprecated": false,
        "description": "If the adapter kind specified is not present in the system, it will be created dynamically. However, \nif the adapter kind specified does already exist, then it must be of <i>OPENAPI</i> adapter kind type.\nAlso the API sanitizes the Push Adapter Kind key by removing invalid characters (e.g.: Embedded HTML & JS)",
        "operationId": "pushEventByAdapterKindKeyUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/event"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/event"
              }
            }
          },
          "description": "The event object",
          "required": true
        },
        "summary": "Push a single Event into the system with associating an adapter kind as the event source"
      }
    },
    "/api/events/bulk": {
      "post": {
        "responses": {
          "200": {
            "description": "Events are added successfully"
          }
        },

        "tags": [
          "Events"
        ],
        "deprecated": false,
        "description": "Push one or more Events into the system",
        "operationId": "pushEventsUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/events"
        },
        "summary": "Push one or more Events into the system"
      }
    },
    "/api/events/bulk/adapterkinds/{adapterKind}": {
      "post": {
        "parameters": [
          {
            "description": "The adapter kind key of the adapter source",
            "in": "path",
            "name": "adapterKind",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Events are added successfully"
          }
        },

        "tags": [
          "Events"
        ],
        "deprecated": false,
        "description": "If the adapter kind specified is not present in the system, it will be created dynamically. However, \nif the adapter kind specified does already exist, then it must be of <i>OPENAPI</i> adapter kind type.\nAlso the API sanitizes the Push Adapter Kind key by removing invalid characters (e.g.: Embedded HTML & JS)",
        "operationId": "pushEventsByAdapterKindKeyUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/events"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/events"
              }
            }
          },
          "description": "The list of events",
          "required": true
        },
        "summary": "Push one or more Events into the system with associating an adapter kind as the event source"
      }
    },
    "/api/maintenanceschedules": {
      "delete": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Maintenance schedule identifiers",
            "explode": true,
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The maintenance schedules are deleted successfully"
          }
        },

        "tags": [
          "Maintenance Schedules"
        ],
        "deprecated": false,
        "description": "Using this method, you can delete a particular <i>maintenance schedules</i>",
        "operationId": "deleteMaintenanceSchedulesUsingDELETE",
        "summary": "Delete maintenance schedules with the given identifiers."
      },
      "get": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Maintenance schedule identifiers",
            "explode": true,
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "Maintenance schedule names or keys",
            "explode": true,
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Page number from which data needs to be displayed (0-based)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Expected number of entries per page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "List of Object identifiers",
            "explode": true,
            "in": "query",
            "name": "resourceId",
            "required": false,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"schedules\" : [ {\n    \"id\" : \"cafc103f-7661-41f4-b41b-c565a664c2b9\",\n    \"key\" : \"daily-ms1\",\n    \"schedule\" : {\n      \"hour\" : 3,\n      \"minuteOfTheHour\" : 0,\n      \"duration\" : 180,\n      \"scheduleType\" : \"DAILY\",\n      \"recurrence\" : 1,\n      \"expirationDate\" : \"01/20/2050\",\n      \"timeZone\" : \"Asia/Yerevan\"\n    }\n  }, {\n    \"id\" : \"69bd8142-a734-4e25-8520-20fefc749ceb\",\n    \"key\" : \"monthly-ms1\",\n    \"schedule\" : {\n      \"hour\" : 3,\n      \"minuteOfTheHour\" : 0,\n      \"duration\" : 3,\n      \"scheduleType\" : \"MONTHLY\",\n      \"daysOfTheMonth\" : [ \"1\", \"2\" ],\n      \"months\" : [ 1 ],\n      \"timeZone\" : \"Asia/Yerevan\",\n      \"expireRuns\" : 3\n    }\n  }, {\n    \"id\" : \"9fe6a121-7fe7-46a5-859a-9eae037218f1\",\n    \"key\" : \"weekly-ms1\",\n    \"schedule\" : {\n      \"hour\" : 15,\n      \"minuteOfTheHour\" : 3,\n      \"duration\" : 1,\n      \"scheduleType\" : \"WEEKLY\",\n      \"recurrence\" : 5,\n      \"daysOfTheWeek\" : [ \"SATURDAY\", \"SUNDAY\" ],\n      \"timeZone\" : \"Asia/Yerevan\",\n      \"expireRuns\" : 7\n    }\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/maintenance-schedules"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:maintenance-schedules xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:maintenance-schedule id=\"6d662745-d5bb-425d-a496-af5adf0ddedb\" key=\"daily-ms1\">\n        <ops:schedule>\n            <ops:hour>3</ops:hour>\n            <ops:minuteOfTheHour>0</ops:minuteOfTheHour>\n            <ops:duration>180</ops:duration>\n            <ops:scheduleType>DAILY</ops:scheduleType>\n            <ops:recurrence>1</ops:recurrence>\n            <ops:expirationDate>01/20/2050</ops:expirationDate>\n            <ops:timeZone>Asia/Yerevan</ops:timeZone>\n        </ops:schedule>\n    </ops:maintenance-schedule>\n    <ops:maintenance-schedule id=\"540a719b-31ee-4502-849f-7958156177e9\" key=\"monthly-ms1\">\n        <ops:schedule>\n            <ops:hour>3</ops:hour>\n            <ops:minuteOfTheHour>0</ops:minuteOfTheHour>\n            <ops:duration>3</ops:duration>\n            <ops:scheduleType>MONTHLY</ops:scheduleType>\n            <ops:daysOfTheMonth>1 2</ops:daysOfTheMonth>\n            <ops:months>1</ops:months>\n            <ops:timeZone>Asia/Yerevan</ops:timeZone>\n            <ops:expireRuns>3</ops:expireRuns>\n        </ops:schedule>\n    </ops:maintenance-schedule>\n    <ops:maintenance-schedule id=\"c282400a-84bf-4d6b-936d-5cb1ea720660\" key=\"weekly-ms1\">\n        <ops:schedule>\n            <ops:hour>15</ops:hour>\n            <ops:minuteOfTheHour>3</ops:minuteOfTheHour>\n            <ops:duration>1</ops:duration>\n            <ops:scheduleType>WEEKLY</ops:scheduleType>\n            <ops:recurrence>5</ops:recurrence>\n            <ops:daysOfTheWeek>SATURDAY SUNDAY</ops:daysOfTheWeek>\n            <ops:timeZone>Asia/Yerevan</ops:timeZone>\n            <ops:expireRuns>7</ops:expireRuns>\n        </ops:schedule>\n    </ops:maintenance-schedule>\n</ops:maintenance-schedules>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/maintenance-schedules"
                }
              }
            },
            "description": "The Maintenance Schedules that match the criteria specified"
          }
        },

        "tags": [
          "Maintenance Schedules"
        ],
        "deprecated": false,
        "description": "Using this method, you can get all <i>maintenance schedules</i> with or without specific parameters",
        "operationId": "getMaintenanceSchedulesUsingGET",
        "summary": "Query for all maintenance schedules based on schedule id, schedule name and resource id"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/maintenance-schedule"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/maintenance-schedule"
                }
              }
            },
            "description": "The maintenance schedule created"
          },
          "400": {
            "description": "Invalid request parameters or request body"
          },
          "422": {
            "description": "A maintenance schedule with the same key already exists"
          }
        },

        "tags": [
          "Maintenance Schedules"
        ],
        "deprecated": false,
        "description": "Using this method, you can create a particular <i>maintenance schedules</i>",
        "operationId": "createMaintenanceSchedulesUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/maintenance-schedule"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/maintenance-schedule"
              }
            }
          },
          "description": "The maintenance schedule to be created",
          "required": true
        },
        "summary": "Create a maintenance schedule"
      },
      "put": {
        "responses": {
          "200": {
            "description": "The maintenance schedule was updated successfully"
          },
          "404": {
            "description": "The maintenance schedule does not exist"
          }
        },

        "tags": [
          "Maintenance Schedules"
        ],
        "deprecated": false,
        "description": "Using this method, you can update a particular <i>maintenance schedules</i>",
        "operationId": "updateMaintenanceSchedulesUsingPUT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/maintenance-schedule"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/maintenance-schedule"
              }
            }
          },
          "description": "The maintenance schedules to be updated",
          "required": true
        },
        "summary": "Update an existing maintenance schedules"
      }
    },
    "/api/notifications/email/templates": {
      "get": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "List of identifiers. If only <i>id</i>s are specified,e-mail templates with matching identifiers are returned",
            "explode": true,
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "Name of the e-mail template (case insensitive), wild cards are not supported. If not specified, all e-mail templates are included in the response.",
            "explode": true,
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"emailTemplateList\" : [ {\n    \"id\" : \"06677976-0dd0-48d8-8f7b-bccf47bab30f\",\n    \"name\" : \"MyTemplate1\",\n    \"html\" : true,\n    \"template\" : \"\\\\$\\\\$Subject=[VMware Aria Operations] {{AlertStatus}} Type:{{AlertType}}, Sub-Type:{{AlertSubType}}, State:{{AlertCriticality}}, Object Type:{{AffectedResourceKind}}, Name:{{AffectedResourceName}} New alert was generated at: {{AlertGenerateTime}} Info: {{AffectedResourceName}} {{AffectedResourceKind}}<br> Alert Definition Name: {{AlertDefinitionName}} Alert Definition Description: {{AlertDefinitionDesc}} Object Name : {{AffectedResourceName}} Object Type : {{AffectedResourceKind}} Alert Impact: {{AlertImpact}} Alert State : {{AlertCriticality}} Alert Type : {{AlertType}} Alert Sub-Type : {{AlertSubType}} Object Health State: {{ResourceHealthState}} Object Risk State: {{ResourceRiskState}} Object Efficiency State: {{ResourceEfficiencyState}} Symptoms:<br>{{Anomalies}} Recommendations: {{AlertRecommendation}} Notification Rule Name: {{FilterRuleName}} Notification Rule Description: {{FilterRuleDesc}} Alert ID : {{AlertId}} VCOps Server - {{vcopsServerName}} <a href={{AlertSummaryLink}}>Alert details</a><br>\"\n  }, {\n    \"id\" : \"9df591d7-1567-4e77-b5c4-dd79820e177a\",\n    \"name\" : \"Another-Email-Template\",\n    \"html\" : true,\n    \"template\" : \"\\\\$\\\\$Subject=[VMware Aria Operations] {{AlertStatus}}  Type:{{AlertType}}, Sub-Type:{{AlertSubType}}, State:{{AlertCriticality}}, Object Type:{{AffectedResourceKind}}, Name:{{AffectedResourceName}} Alert ID : {{AlertId}} VCOps Server - {{vcopsServerName}} \"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/email-templates"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:email-templates xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:email-template id=\"86fe1485-ee16-4ece-badb-3506e61433cb\" html=\"true\">\n        <ops:name>MyTemplate1</ops:name>\n        <ops:template>\\$\\$Subject=[VMware Aria Operations] {{AlertStatus}} Type:{{AlertType}}, Sub-Type:{{AlertSubType}}, State:{{AlertCriticality}}, Object Type:{{AffectedResourceKind}}, Name:{{AffectedResourceName}} New alert was generated at: {{AlertGenerateTime}} Info: {{AffectedResourceName}} {{AffectedResourceKind}}&lt;br&gt; Alert Definition Name: {{AlertDefinitionName}} Alert Definition Description: {{AlertDefinitionDesc}} Object Name : {{AffectedResourceName}} Object Type : {{AffectedResourceKind}} Alert Impact: {{AlertImpact}} Alert State : {{AlertCriticality}} Alert Type : {{AlertType}} Alert Sub-Type : {{AlertSubType}} Object Health State: {{ResourceHealthState}} Object Risk State: {{ResourceRiskState}} Object Efficiency State: {{ResourceEfficiencyState}} Symptoms:&lt;br&gt;{{Anomalies}} Recommendations: {{AlertRecommendation}} Notification Rule Name: {{FilterRuleName}} Notification Rule Description: {{FilterRuleDesc}} Alert ID : {{AlertId}} VCOps Server - {{vcopsServerName}} &lt;a href={{AlertSummaryLink}}&gt;Alert details&lt;/a&gt;&lt;br&gt;</ops:template>\n    </ops:email-template>\n    <ops:email-template id=\"15f6a99e-7a24-4fe3-8752-5b57df5ed906\" html=\"true\">\n        <ops:name>Another-Email-Template</ops:name>\n        <ops:template>\\$\\$Subject=[VMware Aria Operations] {{AlertStatus}}  Type:{{AlertType}}, Sub-Type:{{AlertSubType}}, State:{{AlertCriticality}}, Object Type:{{AffectedResourceKind}}, Name:{{AffectedResourceName}} Alert ID : {{AlertId}} VCOps Server - {{vcopsServerName}} </ops:template>\n    </ops:email-template>\n</ops:email-templates>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/email-templates"
                }
              }
            },
            "description": "The collection of E-Mail templates that match the filters specified"
          }
        },

        "tags": [
          "Notifications"
        ],
        "deprecated": true,
        "description": "<b>Note: </b> This method is deprecated and will be removed in next release.\nUse the recommended public method, instead (see <code> GET /api/notifications/templates/{id} </code>)",
        "operationId": "queryEmailTemplatesUsingGET",
        "summary": "(Deprecated) Query for Email templates based on names and identifiers"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"663e17ca-7207-4f14-8ec7-b8526faff963\",\n  \"name\" : \"MyTemplate1\",\n  \"html\" : true,\n  \"template\" : \"\\\\$\\\\$Subject=[VMware Aria Operations] {{AlertStatus}} Type:{{AlertType}}, Sub-Type:{{AlertSubType}}, State:{{AlertCriticality}}, Object Type:{{AffectedResourceKind}}, Name:{{AffectedResourceName}} New alert was generated at: {{AlertGenerateTime}} Info: {{AffectedResourceName}} {{AffectedResourceKind}}<br> Alert Definition Name: {{AlertDefinitionName}} Alert Definition Description: {{AlertDefinitionDesc}} Object Name : {{AffectedResourceName}} Object Type : {{AffectedResourceKind}} Alert Impact: {{AlertImpact}} Alert State : {{AlertCriticality}} Alert Type : {{AlertType}} Alert Sub-Type : {{AlertSubType}} Object Health State: {{ResourceHealthState}} Object Risk State: {{ResourceRiskState}} Object Efficiency State: {{ResourceEfficiencyState}} Symptoms:<br>{{Anomalies}} Recommendations: {{AlertRecommendation}} Notification Rule Name: {{FilterRuleName}} Notification Rule Description: {{FilterRuleDesc}} Alert ID : {{AlertId}} VCOps Server - {{vcopsServerName}} <a href={{AlertSummaryLink}}>Alert details</a><br>\"\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/email-template"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:email-template id=\"305607f0-e693-4360-87ed-11552060c251\" html=\"true\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:name>MyTemplate1</ops:name>\n    <ops:template>\\$\\$Subject=[VMware Aria Operations] {{AlertStatus}} Type:{{AlertType}}, Sub-Type:{{AlertSubType}}, State:{{AlertCriticality}}, Object Type:{{AffectedResourceKind}}, Name:{{AffectedResourceName}} New alert was generated at: {{AlertGenerateTime}} Info: {{AffectedResourceName}} {{AffectedResourceKind}}&lt;br&gt; Alert Definition Name: {{AlertDefinitionName}} Alert Definition Description: {{AlertDefinitionDesc}} Object Name : {{AffectedResourceName}} Object Type : {{AffectedResourceKind}} Alert Impact: {{AlertImpact}} Alert State : {{AlertCriticality}} Alert Type : {{AlertType}} Alert Sub-Type : {{AlertSubType}} Object Health State: {{ResourceHealthState}} Object Risk State: {{ResourceRiskState}} Object Efficiency State: {{ResourceEfficiencyState}} Symptoms:&lt;br&gt;{{Anomalies}} Recommendations: {{AlertRecommendation}} Notification Rule Name: {{FilterRuleName}} Notification Rule Description: {{FilterRuleDesc}} Alert ID : {{AlertId}} VCOps Server - {{vcopsServerName}} &lt;a href={{AlertSummaryLink}}&gt;Alert details&lt;/a&gt;&lt;br&gt;</ops:template>\n</ops:email-template>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/email-template"
                }
              }
            },
            "description": "The newly created e-mail template"
          }
        },

        "tags": [
          "Notifications"
        ],
        "deprecated": true,
        "description": "<b>Note: </b> This method is deprecated and will be removed in next release.\nUse the recommended public method, instead (see <code> POST /api/notifications/templates </code>)",
        "operationId": "createEmailTemplateUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/email-template"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/email-template"
              }
            }
          },
          "description": "E-mail template as payload\n <i>Notes</i> Examples for new/updated/canceled Alerts)",
          "required": true
        },
        "summary": "(Deprecated) Create a new E-Mail template in the system"
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"9a4adac7-2ee8-45bd-b715-cf8754e473cd\",\n  \"name\" : \"MyTemplate1\",\n  \"html\" : true,\n  \"template\" : \"\\\\$\\\\$Subject=[VMware Aria Operations] {{AlertStatus}} Type:{{AlertType}}, Sub-Type:{{AlertSubType}}, State:{{AlertCriticality}}, Object Type:{{AffectedResourceKind}}, Name:{{AffectedResourceName}} New alert was generated at: {{AlertGenerateTime}} Info: {{AffectedResourceName}} {{AffectedResourceKind}}<br> Alert Definition Name: {{AlertDefinitionName}} Alert Definition Description: {{AlertDefinitionDesc}} Object Name : {{AffectedResourceName}} Object Type : {{AffectedResourceKind}} Alert Impact: {{AlertImpact}} Alert State : {{AlertCriticality}} Alert Type : {{AlertType}} Alert Sub-Type : {{AlertSubType}} Object Health State: {{ResourceHealthState}} Object Risk State: {{ResourceRiskState}} Object Efficiency State: {{ResourceEfficiencyState}} Symptoms:<br>{{Anomalies}} Recommendations: {{AlertRecommendation}} Notification Rule Name: {{FilterRuleName}} Notification Rule Description: {{FilterRuleDesc}} Alert ID : {{AlertId}} VCOps Server - {{vcopsServerName}} <a href={{AlertSummaryLink}}>Alert details</a><br>\"\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/email-template"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:email-template id=\"d25c39db-a4f4-4d47-b236-996d102f1ebc\" html=\"true\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:name>MyTemplate1</ops:name>\n    <ops:template>\\$\\$Subject=[VMware Aria Operations] {{AlertStatus}} Type:{{AlertType}}, Sub-Type:{{AlertSubType}}, State:{{AlertCriticality}}, Object Type:{{AffectedResourceKind}}, Name:{{AffectedResourceName}} New alert was generated at: {{AlertGenerateTime}} Info: {{AffectedResourceName}} {{AffectedResourceKind}}&lt;br&gt; Alert Definition Name: {{AlertDefinitionName}} Alert Definition Description: {{AlertDefinitionDesc}} Object Name : {{AffectedResourceName}} Object Type : {{AffectedResourceKind}} Alert Impact: {{AlertImpact}} Alert State : {{AlertCriticality}} Alert Type : {{AlertType}} Alert Sub-Type : {{AlertSubType}} Object Health State: {{ResourceHealthState}} Object Risk State: {{ResourceRiskState}} Object Efficiency State: {{ResourceEfficiencyState}} Symptoms:&lt;br&gt;{{Anomalies}} Recommendations: {{AlertRecommendation}} Notification Rule Name: {{FilterRuleName}} Notification Rule Description: {{FilterRuleDesc}} Alert ID : {{AlertId}} VCOps Server - {{vcopsServerName}} &lt;a href={{AlertSummaryLink}}&gt;Alert details&lt;/a&gt;&lt;br&gt;</ops:template>\n</ops:email-template>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/email-template"
                }
              }
            },
            "description": "The Updated Email Template"
          }
        },

        "tags": [
          "Notifications"
        ],
        "deprecated": true,
        "description": "<b>Note: </b> This method is deprecated and will be removed in next release.\nUse the recommended public method, instead (see <code> PUT /api/notifications/templates </code>)",
        "operationId": "updateEmailTemplateUsingPUT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/email-template"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/email-template"
              }
            }
          },
          "description": "The e-mail template to be updated",
          "required": true
        },
        "summary": "(Deprecated) Update an E-Mail template in the system"
      }
    },
    "/api/notifications/email/templates/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The identifier of the e-mail template to be deleted",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "203": {
            "description": "The user does not have the privilege to perform the operation"
          },
          "204": {
            "description": "The Email Template with the identifier specified was successfully deleted"
          },
          "404": {
            "description": "There is no Email Template with the specified identifier"
          }
        },

        "tags": [
          "Notifications"
        ],
        "deprecated": true,
        "description": "<b>Note: </b> This method is deprecated and will be removed in next release.\nUse the recommended public method, instead (see <code> DELETE /api/notifications/templates/{id} </code>)",
        "operationId": "deleteEmailTemplateUsingDELETE",
        "summary": "(Deprecated) Delete an E-Mail template from the system"
      },
      "get": {
        "parameters": [
          {
            "description": "The identifier of the E-Mail template",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"646e71b7-373b-41c4-a871-d2da9f4f7f05\",\n  \"name\" : \"MyTemplate1\",\n  \"html\" : true,\n  \"template\" : \"\\\\$\\\\$Subject=[VMware Aria Operations] {{AlertStatus}} Type:{{AlertType}}, Sub-Type:{{AlertSubType}}, State:{{AlertCriticality}}, Object Type:{{AffectedResourceKind}}, Name:{{AffectedResourceName}} New alert was generated at: {{AlertGenerateTime}} Info: {{AffectedResourceName}} {{AffectedResourceKind}}<br> Alert Definition Name: {{AlertDefinitionName}} Alert Definition Description: {{AlertDefinitionDesc}} Object Name : {{AffectedResourceName}} Object Type : {{AffectedResourceKind}} Alert Impact: {{AlertImpact}} Alert State : {{AlertCriticality}} Alert Type : {{AlertType}} Alert Sub-Type : {{AlertSubType}} Object Health State: {{ResourceHealthState}} Object Risk State: {{ResourceRiskState}} Object Efficiency State: {{ResourceEfficiencyState}} Symptoms:<br>{{Anomalies}} Recommendations: {{AlertRecommendation}} Notification Rule Name: {{FilterRuleName}} Notification Rule Description: {{FilterRuleDesc}} Alert ID : {{AlertId}} VCOps Server - {{vcopsServerName}} <a href={{AlertSummaryLink}}>Alert details</a><br>\"\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/email-template"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:email-template id=\"06130515-aab9-4fd2-9e01-ad59a4b07990\" html=\"true\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:name>MyTemplate1</ops:name>\n    <ops:template>\\$\\$Subject=[VMware Aria Operations] {{AlertStatus}} Type:{{AlertType}}, Sub-Type:{{AlertSubType}}, State:{{AlertCriticality}}, Object Type:{{AffectedResourceKind}}, Name:{{AffectedResourceName}} New alert was generated at: {{AlertGenerateTime}} Info: {{AffectedResourceName}} {{AffectedResourceKind}}&lt;br&gt; Alert Definition Name: {{AlertDefinitionName}} Alert Definition Description: {{AlertDefinitionDesc}} Object Name : {{AffectedResourceName}} Object Type : {{AffectedResourceKind}} Alert Impact: {{AlertImpact}} Alert State : {{AlertCriticality}} Alert Type : {{AlertType}} Alert Sub-Type : {{AlertSubType}} Object Health State: {{ResourceHealthState}} Object Risk State: {{ResourceRiskState}} Object Efficiency State: {{ResourceEfficiencyState}} Symptoms:&lt;br&gt;{{Anomalies}} Recommendations: {{AlertRecommendation}} Notification Rule Name: {{FilterRuleName}} Notification Rule Description: {{FilterRuleDesc}} Alert ID : {{AlertId}} VCOps Server - {{vcopsServerName}} &lt;a href={{AlertSummaryLink}}&gt;Alert details&lt;/a&gt;&lt;br&gt;</ops:template>\n</ops:email-template>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/email-template"
                }
              }
            },
            "description": "The Email Template with the specified identifier"
          },
          "404": {
            "description": "There is no Email Template with the specified identifier"
          }
        },

        "tags": [
          "Notifications"
        ],
        "deprecated": true,
        "description": "<b>Note: </b> This method is deprecated and will be removed in next release.\nUse the recommended public method, instead (see <code> GET /api/notifications/templates/{id} </code>)",
        "operationId": "getEmailTemplateUsingGET",
        "summary": "(Deprecated) Look up an E-Mail template by its identifier"
      }
    },
    "/api/notifications/email/templates/{id}/conditions": {
      "delete": {
        "parameters": [
          {
            "description": "The identifier of the E-Mail template",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "All the Conditions for the specified Template were deleted successfully"
          },
          "404": {
            "description": "There is no Email Template with the specified path parameter"
          }
        },

        "tags": [
          "Notifications"
        ],
        "deprecated": true,
        "description": "Clear all conditions associated with the E-Mail template",
        "operationId": "unsetEmailConditionUsingDELETE",
        "summary": "(Deprecated) Clear all conditions associated with the E-Mail template"
      },
      "get": {
        "parameters": [
          {
            "description": "The identifier of the E-Mail template",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"emailTemplateConditionsList\" : [ {\n    \"alertType\" : 7,\n    \"alertSubType\" : 15,\n    \"alertStatus\" : \"ACTIVE\",\n    \"emailAddress\" : \"user1@domain.com\"\n  }, {\n    \"alertType\" : 8,\n    \"alertSubType\" : 16,\n    \"alertStatus\" : \"ACTIVE\",\n    \"emailAddress\" : \"user2@domain.com\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/email-template-conditions"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:email-template-conditions xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:email-template-condition alertType=\"7\" alertSubType=\"15\">\n        <ops:alertStatus>ACTIVE</ops:alertStatus>\n        <ops:emailAddress>user1@domain.com</ops:emailAddress>\n    </ops:email-template-condition>\n    <ops:email-template-condition alertType=\"8\" alertSubType=\"16\">\n        <ops:alertStatus>ACTIVE</ops:alertStatus>\n        <ops:emailAddress>user2@domain.com</ops:emailAddress>\n    </ops:email-template-condition>\n</ops:email-template-conditions>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/email-template-conditions"
                }
              }
            },
            "description": "The Collection of Conditions for the specified Email Template"
          },
          "404": {
            "description": "There is no Email Template with the specified path parameter"
          }
        },

        "tags": [
          "Notifications"
        ],
        "deprecated": true,
        "description": "Get all Email Template Conditions for a particular Email Template",
        "operationId": "getEmailConditionsUsingGET",
        "summary": "(Deprecated) Get all Email Template Conditions for a particular Email Template"
      },
      "post": {
        "parameters": [
          {
            "description": "The identifier of the Email Template",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/email-template-condition"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/email-template-condition"
                }
              }
            },
            "description": "The EmailTemplateCondition after associating with the specified Email Template"
          },
          "404": {
            "description": "There is no Email Template with the specified path parameter"
          }
        },

        "tags": [
          "Notifications"
        ],
        "deprecated": true,
        "description": "This allows user to select different templates based on the alert that was triggered.\nThe various Alert Types and associated Sub-Types available in the system\ncan be queried via the API <code>GET /api/alerts/types</code>",
        "operationId": "setEmailConditionUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/email-template-condition"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/email-template-condition"
              }
            }
          },
          "description": "The Request payload containing the E-Mail Condition",
          "required": true
        },
        "summary": "(Deprecated) Set the E-Mail template condition on an E-Mail template"
      }
    },
    "/api/notifications/rules": {
      "get": {
        "parameters": [
          {
            "description": "Page number from which data needs to be displayed (0-based)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Expected number of entries per page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"rules\" : [ {\n    \"id\" : \"7ac60419-6770-4ed7-a02a-5c600ab0f690\",\n    \"name\" : \"Notification Rule 1\",\n    \"pluginId\" : \"Some Notification Plugin Instance ID\",\n    \"enabled\" : true,\n    \"templateId\" : \"Some Payload Template ID\",\n    \"alertControlStates\" : [ \"OPEN\", \"ASSIGNED\" ],\n    \"alertStatuses\" : [ \"NEW\", \"ACTIVE\" ],\n    \"criticalities\" : [ \"IMMEDIATE\", \"CRITICAL\" ],\n    \"resourceKindFilter\" : {\n      \"resourceKind\" : \"Datastore\",\n      \"adapterKind\" : \"VMWARE\"\n    },\n    \"alertDefinitionIdFilters\" : {\n      \"values\" : [ \"VMWARE-Datastore-NotEnoughIOPS\" ]\n    },\n    \"sendHeartbeat\" : false\n  }, {\n    \"id\" : \"1b9def6e-e6a8-4a15-a401-4dd40315ef9d\",\n    \"name\" : \"Notification Rule 2\",\n    \"pluginId\" : \"Some Other Notification Plugin Instance ID\",\n    \"enabled\" : false,\n    \"templateId\" : \"Some Other Payload Template ID\",\n    \"alertControlStates\" : [ \"SUPPRESSED\", \"SUSPENDED\" ],\n    \"alertStatuses\" : [ \"CANCELED\", \"UPDATED\" ],\n    \"criticalities\" : [ \"WARNING\", \"INFORMATION\" ],\n    \"resourceFilters\" : [ {\n      \"resourceId\" : \"37d43628-2830-4991-96a7-162e47f3371e\"\n    } ],\n    \"alertImpactFilters\" : {\n      \"values\" : [ \"HEALTH\", \"RISK\" ]\n    },\n    \"sendHeartbeat\" : true\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/notification-rules"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:notification-rules xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:notification-rule id=\"381ec256-4a90-4717-8316-8252491abd94\">\n        <ops:name>Notification Rule 1</ops:name>\n        <ops:pluginId>Some Notification Plugin Instance ID</ops:pluginId>\n        <ops:enabled>true</ops:enabled>\n        <ops:templateId>Some Payload Template ID</ops:templateId>\n        <ops:alertControlStates>OPEN ASSIGNED</ops:alertControlStates>\n        <ops:alertStatuses>NEW ACTIVE</ops:alertStatuses>\n        <ops:criticalities>IMMEDIATE CRITICAL</ops:criticalities>\n        <ops:resourceKindFilter>\n            <ops:resourceKind>Datastore</ops:resourceKind>\n            <ops:adapterKind>VMWARE</ops:adapterKind>\n        </ops:resourceKindFilter>\n        <ops:resourceKindFilters/>\n        <ops:resourceFilters/>\n        <ops:alertDefinitionIdFilters>\n            <ops:values>VMWARE-Datastore-NotEnoughIOPS</ops:values>\n        </ops:alertDefinitionIdFilters>\n        <ops:sendHeartbeat>false</ops:sendHeartbeat>\n    </ops:notification-rule>\n    <ops:notification-rule id=\"5d842111-76df-4bdd-aa95-a66a2213a2f2\">\n        <ops:name>Notification Rule 2</ops:name>\n        <ops:pluginId>Some Other Notification Plugin Instance ID</ops:pluginId>\n        <ops:enabled>false</ops:enabled>\n        <ops:templateId>Some Other Payload Template ID</ops:templateId>\n        <ops:alertControlStates>SUPPRESSED SUSPENDED</ops:alertControlStates>\n        <ops:alertStatuses>CANCELED UPDATED</ops:alertStatuses>\n        <ops:criticalities>WARNING INFORMATION</ops:criticalities>\n        <ops:resourceKindFilters/>\n        <ops:resourceFilters>\n            <ops:filter resourceId=\"41046d37-7c35-462b-8a9f-1591913dc6d3\"/>\n        </ops:resourceFilters>\n        <ops:alertImpactFilters>\n            <ops:values>HEALTH</ops:values>\n            <ops:values>RISK</ops:values>\n        </ops:alertImpactFilters>\n        <ops:sendHeartbeat>true</ops:sendHeartbeat>\n    </ops:notification-rule>\n</ops:notification-rules>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/notification-rules"
                }
              }
            },
            "description": "All the Notification Rules defined in the system"
          },
          "500": {
            "description": "There was an error while returning all the Notification Rules defined in the system"
          }
        },

        "tags": [
          "Notifications"
        ],
        "deprecated": false,
        "description": "Get all the Notification Rules defined in the system",
        "operationId": "getAllNotificationRulesUsingGET",
        "summary": "Get all the Notification Rules defined in the system"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"df0dfc07-b521-4010-9c8b-419fd0a9265b\",\n  \"name\" : \"Notification Rule 1\",\n  \"pluginId\" : \"Some Notification Plugin Instance ID\",\n  \"enabled\" : true,\n  \"templateId\" : \"Some Payload Template ID\",\n  \"alertControlStates\" : [ \"OPEN\", \"ASSIGNED\" ],\n  \"alertStatuses\" : [ \"NEW\", \"ACTIVE\" ],\n  \"criticalities\" : [ \"IMMEDIATE\", \"CRITICAL\" ],\n  \"resourceKindFilter\" : {\n    \"resourceKind\" : \"Datastore\",\n    \"adapterKind\" : \"VMWARE\"\n  },\n  \"alertDefinitionIdFilters\" : {\n    \"values\" : [ \"VMWARE-Datastore-NotEnoughIOPS\" ]\n  },\n  \"sendHeartbeat\" : false\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/notification-rule"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:notification-rule id=\"8813e324-7851-4caf-be49-660bc4b7dd70\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:name>Notification Rule 1</ops:name>\n    <ops:pluginId>Some Notification Plugin Instance ID</ops:pluginId>\n    <ops:enabled>true</ops:enabled>\n    <ops:templateId>Some Payload Template ID</ops:templateId>\n    <ops:alertControlStates>OPEN ASSIGNED</ops:alertControlStates>\n    <ops:alertStatuses>NEW ACTIVE</ops:alertStatuses>\n    <ops:criticalities>IMMEDIATE CRITICAL</ops:criticalities>\n    <ops:resourceKindFilter>\n        <ops:resourceKind>Datastore</ops:resourceKind>\n        <ops:adapterKind>VMWARE</ops:adapterKind>\n    </ops:resourceKindFilter>\n    <ops:resourceKindFilters/>\n    <ops:resourceFilters/>\n    <ops:alertDefinitionIdFilters>\n        <ops:values>VMWARE-Datastore-NotEnoughIOPS</ops:values>\n    </ops:alertDefinitionIdFilters>\n    <ops:sendHeartbeat>false</ops:sendHeartbeat>\n</ops:notification-rule>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/notification-rule"
                }
              }
            },
            "description": "The Notification Rule was created successfully in the system"
          },
          "404": {
            "description": "An invalid Alert Definition identifier was specified as part of Alert Definition Filter"
          },
          "422": {
            "description": "An invalid request body was specified or any constraints were violated"
          },
          "500": {
            "description": "There was an error during the creation of the Notification Rule"
          }
        },

        "tags": [
          "Notifications"
        ],
        "deprecated": false,
        "description": "The Notification Plugin with which the Rule needs to be associated must be specified as part of the request.",
        "operationId": "createNotificationPluginRuleUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/notification-rule"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/notification-rule"
              }
            }
          },
          "description": "The notification rule that needs to be created",
          "required": true
        },
        "summary": "Create a new Notification Rule for a Notification Plugin Instance"
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"f0886ec2-edb2-41be-91b5-b759cb289614\",\n  \"name\" : \"Notification Rule 1\",\n  \"pluginId\" : \"Some Notification Plugin Instance ID\",\n  \"enabled\" : true,\n  \"templateId\" : \"Some Payload Template ID\",\n  \"alertControlStates\" : [ \"OPEN\", \"ASSIGNED\" ],\n  \"alertStatuses\" : [ \"NEW\", \"ACTIVE\" ],\n  \"criticalities\" : [ \"IMMEDIATE\", \"CRITICAL\" ],\n  \"resourceKindFilter\" : {\n    \"resourceKind\" : \"Datastore\",\n    \"adapterKind\" : \"VMWARE\"\n  },\n  \"alertDefinitionIdFilters\" : {\n    \"values\" : [ \"VMWARE-Datastore-NotEnoughIOPS\" ]\n  },\n  \"sendHeartbeat\" : false\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/notification-rule"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:notification-rule id=\"8a0143a2-a70f-4b75-8c71-6cc6679e4e9b\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:name>Notification Rule 1</ops:name>\n    <ops:pluginId>Some Notification Plugin Instance ID</ops:pluginId>\n    <ops:enabled>true</ops:enabled>\n    <ops:templateId>Some Payload Template ID</ops:templateId>\n    <ops:alertControlStates>OPEN ASSIGNED</ops:alertControlStates>\n    <ops:alertStatuses>NEW ACTIVE</ops:alertStatuses>\n    <ops:criticalities>IMMEDIATE CRITICAL</ops:criticalities>\n    <ops:resourceKindFilter>\n        <ops:resourceKind>Datastore</ops:resourceKind>\n        <ops:adapterKind>VMWARE</ops:adapterKind>\n    </ops:resourceKindFilter>\n    <ops:resourceKindFilters/>\n    <ops:resourceFilters/>\n    <ops:alertDefinitionIdFilters>\n        <ops:values>VMWARE-Datastore-NotEnoughIOPS</ops:values>\n    </ops:alertDefinitionIdFilters>\n    <ops:sendHeartbeat>false</ops:sendHeartbeat>\n</ops:notification-rule>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/notification-rule"
                }
              }
            },
            "description": "The Notification Rule was updated successfully in the system"
          },
          "422": {
            "description": "An invalid request body was specified or any constraints were violated"
          },
          "500": {
            "description": "There was an error during the update of the Notification Rule"
          }
        },

        "tags": [
          "Notifications"
        ],
        "deprecated": false,
        "description": "Update a specific Notification Rule for a Notification Plugin Instance",
        "operationId": "updateNotificationPluginRuleUsingPUT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/notification-rule"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/notification-rule"
              }
            }
          },
          "description": "The notification rule that needs to be updated",
          "required": true
        },
        "summary": "Update a specific Notification Rule for a Notification Plugin Instance"
      }
    },
    "/api/notifications/rules/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The Notification Rule Identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The notification plugin rules are deleted successfully"
          }
        },

        "tags": [
          "Notifications"
        ],
        "deprecated": false,
        "description": "Using this method, you can delete a particular <i>notification plugin rule</i>",
        "operationId": "deleteNotificationPluginRulesUsingDELETE",
        "summary": "Delete a specific existing Notification Rule associated with a Notification Plugin Instance"
      },
      "get": {
        "parameters": [
          {
            "description": "The Identifier of the notification rule",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"1c4c31a1-012b-4225-b60e-b38ddfaabc63\",\n  \"name\" : \"Notification Rule 1\",\n  \"pluginId\" : \"Some Notification Plugin Instance ID\",\n  \"enabled\" : true,\n  \"templateId\" : \"Some Payload Template ID\",\n  \"alertControlStates\" : [ \"OPEN\", \"ASSIGNED\" ],\n  \"alertStatuses\" : [ \"NEW\", \"ACTIVE\" ],\n  \"criticalities\" : [ \"IMMEDIATE\", \"CRITICAL\" ],\n  \"resourceKindFilter\" : {\n    \"resourceKind\" : \"Datastore\",\n    \"adapterKind\" : \"VMWARE\"\n  },\n  \"alertDefinitionIdFilters\" : {\n    \"values\" : [ \"VMWARE-Datastore-NotEnoughIOPS\" ]\n  },\n  \"sendHeartbeat\" : false\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/notification-rule"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:notification-rule id=\"4d2ea419-97c3-430c-843d-0c807ef88e6a\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:name>Notification Rule 1</ops:name>\n    <ops:pluginId>Some Notification Plugin Instance ID</ops:pluginId>\n    <ops:enabled>true</ops:enabled>\n    <ops:templateId>Some Payload Template ID</ops:templateId>\n    <ops:alertControlStates>OPEN ASSIGNED</ops:alertControlStates>\n    <ops:alertStatuses>NEW ACTIVE</ops:alertStatuses>\n    <ops:criticalities>IMMEDIATE CRITICAL</ops:criticalities>\n    <ops:resourceKindFilter>\n        <ops:resourceKind>Datastore</ops:resourceKind>\n        <ops:adapterKind>VMWARE</ops:adapterKind>\n    </ops:resourceKindFilter>\n    <ops:resourceKindFilters/>\n    <ops:resourceFilters/>\n    <ops:alertDefinitionIdFilters>\n        <ops:values>VMWARE-Datastore-NotEnoughIOPS</ops:values>\n    </ops:alertDefinitionIdFilters>\n    <ops:sendHeartbeat>false</ops:sendHeartbeat>\n</ops:notification-rule>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/notification-rule"
                }
              }
            },
            "description": "The Notification Rule for the specified identifier"
          },
          "404": {
            "description": "There is no Notification Rule for the specified identifier"
          },
          "500": {
            "description": "There was an error while returning the response"
          }
        },

        "tags": [
          "Notifications"
        ],
        "deprecated": false,
        "description": "Get the Notification Rule for the specified identifier",
        "operationId": "getNotificationRuleUsingGET",
        "summary": "Get the Notification Rule for the specified identifier"
      }
    },
    "/api/policies": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"policySummaries\" : [ {\n    \"id\" : \"3ce44577-080a-4554-af0c-377b49e7bea3\",\n    \"name\" : \"XYZ Production Policy Policy\",\n    \"defaultPolicy\" : false\n  }, {\n    \"id\" : \"9210aa09-3650-4490-96e6-a9917378d17a\",\n    \"name\" : \"CPU Overcommit Policy\",\n    \"defaultPolicy\" : false\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/policy-summaries-collection"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:policy-summaries-collection xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:policySummaries>\n        <ops:policySummary id=\"5c450755-bbd6-4f25-9452-ebafba64c5ed\" name=\"XYZ Production Policy Policy\">\n            <ops:defaultPolicy>false</ops:defaultPolicy>\n        </ops:policySummary>\n        <ops:policySummary id=\"0f20215b-a8dd-41e7-b473-2ba218727399\" name=\"CPU Overcommit Policy\">\n            <ops:defaultPolicy>false</ops:defaultPolicy>\n        </ops:policySummary>\n    </ops:policySummaries>\n</ops:policy-summaries-collection>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/policy-summaries-collection"
                }
              }
            },
            "description": "Array of {Policy Id, name} pairs"
          }
        },

        "tags": [
          "Policies"
        ],
        "deprecated": false,
        "description": "Returns all available policies.",
        "operationId": "getPoliciesUsingGET",
        "summary": "Get all available policies."
      }
    },
    "/api/policies/apply": {
      "post": {
        "responses": {
          "200": {
            "description": "The policy is applied successfully"
          }
        },

        "tags": [
          "Policies"
        ],
        "deprecated": false,
        "description": "Applies policy to the given groups.",
        "operationId": "applyPolicyUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/policy-groups"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/policy-groups"
              }
            }
          },
          "description": "The Policy object carrying id and name of the policy",
          "required": true
        },
        "summary": "Apply policy to the given groups"
      }
    },
    "/api/policies/default": {
      "put": {
        "parameters": [
          {
            "description": "id",
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The given policy is now set as default."
          }
        },

        "tags": [
          "Policies"
        ],
        "deprecated": false,
        "description": "Set given policy as default policy.",
        "operationId": "setDefaultPolicyUsingPUT",
        "summary": "Set given policy as default policy."
      }
    },
    "/api/policies/export": {
      "get": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Policy identifiers to export",
            "explode": true,
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The content of specified policies are exported successfully."
          },
          "404": {
            "description": "Policies with provided ids not found."
          },
          "500": {
            "description": "Failed to export policies."
          }
        },

        "tags": [
          "Policies"
        ],
        "deprecated": false,
        "description": "Exports the content of policies into ZIP archive. The format of the exported data is subject to change and should be used only in the scope of same product version. Note: while exporting an embedded policy its parent will be exported as well.",
        "operationId": "exportPoliciesUsingGET",
        "summary": "Export the content of policies into ZIP archive."
      }
    },
    "/api/policies/import": {
      "post": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "True to overwrite the existing policies, false to skip importing when there is a conflict",
            "example": false,
            "in": "query",
            "name": "forceImport",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"createdPolicies\" : [ {\n    \"id\" : \"f38d1e3c-b4bb-4e43-8846-8f303cdbc349\",\n    \"name\" : \"CPU Allocation Policy\",\n    \"defaultPolicy\" : false\n  } ],\n  \"updatedPolicies\" : [ {\n    \"id\" : \"19cf221d-dff3-46ee-bb57-6d351081ecda\",\n    \"name\" : \"RAM Allocation Policy\",\n    \"defaultPolicy\" : false\n  } ],\n  \"skippedPolicies\" : [ {\n    \"id\" : \"0b78f890-7e31-417c-baef-463875dfb28b\",\n    \"name\" : \"CPU Overcommit Policy\",\n    \"defaultPolicy\" : false\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/policy-update-outcome"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:policy-update-outcome xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:createdPolicies>\n        <ops:createdPolicy id=\"22b3d46e-80cb-4645-b7d2-aa30117ae07d\" name=\"CPU Allocation Policy\">\n            <ops:defaultPolicy>false</ops:defaultPolicy>\n        </ops:createdPolicy>\n    </ops:createdPolicies>\n    <ops:updatedPolicies>\n        <ops:updatedPolicy id=\"c3bdae87-6dcf-4986-b775-859821cd9b51\" name=\"RAM Allocation Policy\">\n            <ops:defaultPolicy>false</ops:defaultPolicy>\n        </ops:updatedPolicy>\n    </ops:updatedPolicies>\n    <ops:skippedPolicies>\n        <ops:skippedPolicy id=\"9d41d04d-4e66-4727-beaf-7507d54e0e4f\" name=\"CPU Overcommit Policy\">\n            <ops:defaultPolicy>false</ops:defaultPolicy>\n        </ops:skippedPolicy>\n    </ops:skippedPolicies>\n</ops:policy-update-outcome>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/policy-update-outcome"
                }
              }
            },
            "description": "The Imported policies"
          }
        },

        "tags": [
          "Policies"
        ],
        "deprecated": false,
        "description": "Imports policy content from an archive of ZIP format.",
        "operationId": "importPoliciesUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/importCertificateUsingPOST"
        },
        "summary": "Import policy content from an archive of ZIP format"
      }
    },
    "/api/pricing": {
      "get": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Filter by Creator of the policy",
            "explode": true,
            "in": "query",
            "name": "createdBy",
            "required": false,
            "schema": {
              "enum": [
                "VRA",
                "TA",
                "TA_VCD",
                "TA_VC",
                "VROPS",
                "UNKNOWN"
              ],
              "items": {
                "enum": [
                  "VRA",
                  "TA",
                  "TA_VCD",
                  "TA_VC",
                  "VROPS",
                  "UNKNOWN"
                ],
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"policies\" : [ {\n    \"id\" : \"16f16002-98c4-40c1-8ef0-b6a27339a13f\",\n    \"name\" : \"Pricing Policy Name\",\n    \"description\" : \"The description of the policy\",\n    \"createdBy\" : \"UNKNOWN\",\n    \"chargeModel\" : \"PAY_AS_YOU_GO\",\n    \"lastUpdateTimestamp\" : 0,\n    \"meterings\" : [ {\n      \"itemName\" : \"cpu\",\n      \"metering\" : {\n        \"chargePeriod\" : \"DAILY\",\n        \"baseRate\" : 0.0,\n        \"chargeOnPowerState\" : \"ALWAYS\",\n        \"overage\" : false,\n        \"overageRate\" : 0.0,\n        \"fixedPrice\" : 0.0,\n        \"chargeBasedOn\" : \"USAGE\"\n      }\n    } ],\n    \"namedMeterings\" : [ {\n      \"itemName\" : \"guestOSs\",\n      \"meterings\" : [ {\n        \"name\" : \"Linux\",\n        \"metering\" : {\n          \"chargePeriod\" : \"DAILY\",\n          \"baseRate\" : 0.0,\n          \"chargeOnPowerState\" : \"ALWAYS\",\n          \"overage\" : false,\n          \"overageRate\" : 0.0,\n          \"fixedPrice\" : 0.0,\n          \"chargeBasedOn\" : \"USAGE\"\n        }\n      } ]\n    } ],\n    \"tagBasedMeterings\" : [ {\n      \"itemName\" : \"vmTags\",\n      \"meterings\" : [ {\n        \"key\" : \"category\",\n        \"value\" : \"value\",\n        \"metering\" : {\n          \"chargePeriod\" : \"DAILY\",\n          \"baseRate\" : 0.0,\n          \"chargeOnPowerState\" : \"ALWAYS\",\n          \"overage\" : false,\n          \"overageRate\" : 0.0,\n          \"fixedPrice\" : 0.0,\n          \"chargeBasedOn\" : \"USAGE\"\n        }\n      } ]\n    } ],\n    \"unconditionalMeterings\" : [ {\n      \"itemName\" : \"fixedPrice\",\n      \"unconditionalMetering\" : {\n        \"rate\" : 0.0,\n        \"chargePeriod\" : \"DAILY\"\n      }\n    } ],\n    \"tagBasedPolicyRefs\" : [ {\n      \"itemName\" : \"vmTags\",\n      \"policyRefs\" : [ {\n        \"key\" : \"category\",\n        \"value\" : \"value\",\n        \"policyRef\" : {\n          \"priority\" : 1,\n          \"policyId\" : \"5a983979-f212-49e7-99a6-dbb035b55bbc\"\n        }\n      } ]\n    } ],\n    \"tagBasedRateFactors\" : [ {\n      \"itemName\" : \"vmTagsRateFactor\",\n      \"rateFactors\" : [ {\n        \"key\" : \"category\",\n        \"value\" : \"value\",\n        \"rateFactor\" : {\n          \"contextMeteringItem\" : \"cpu\",\n          \"rateFactor\" : 5.4\n        }\n      } ]\n    } ]\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/pricing-policies"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:pricing-policies xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:pricing-policy id=\"1701eb52-c4dc-49ad-abb8-71dbdc3010e5\" name=\"Pricing Policy Name\" createdBy=\"UNKNOWN\" chargeModel=\"PAY_AS_YOU_GO\">\n        <ops:description>The description of the policy</ops:description>\n        <ops:lastUpdateTimestamp>0</ops:lastUpdateTimestamp>\n        <ops:meterings>\n            <ops:metering itemName=\"cpu\">\n                <ops:metering chargePeriod=\"DAILY\" baseRate=\"0.0\" chargeOnPowerState=\"ALWAYS\" fixedPrice=\"0.0\" chargeBasedOn=\"USAGE\">\n                    <ops:conditionalBaseRates/>\n                    <ops:overage>false</ops:overage>\n                    <ops:overageRate>0.0</ops:overageRate>\n                    <ops:unit></ops:unit>\n                </ops:metering>\n            </ops:metering>\n        </ops:meterings>\n        <ops:namedMeterings>\n            <ops:namedMetering itemName=\"guestOSs\">\n                <ops:meterings name=\"Linux\">\n                    <ops:metering chargePeriod=\"DAILY\" baseRate=\"0.0\" chargeOnPowerState=\"ALWAYS\" fixedPrice=\"0.0\" chargeBasedOn=\"USAGE\">\n                        <ops:conditionalBaseRates/>\n                        <ops:overage>false</ops:overage>\n                        <ops:overageRate>0.0</ops:overageRate>\n                        <ops:unit></ops:unit>\n                    </ops:metering>\n                </ops:meterings>\n            </ops:namedMetering>\n        </ops:namedMeterings>\n        <ops:tagBasedMeterings>\n            <ops:tagBasedMetering itemName=\"vmTags\">\n                <ops:meterings key=\"category\" value=\"value\">\n                    <ops:metering chargePeriod=\"DAILY\" baseRate=\"0.0\" chargeOnPowerState=\"ALWAYS\" fixedPrice=\"0.0\" chargeBasedOn=\"USAGE\">\n                        <ops:conditionalBaseRates/>\n                        <ops:overage>false</ops:overage>\n                        <ops:overageRate>0.0</ops:overageRate>\n                        <ops:unit></ops:unit>\n                    </ops:metering>\n                </ops:meterings>\n            </ops:tagBasedMetering>\n        </ops:tagBasedMeterings>\n        <ops:unconditionalMeterings>\n            <ops:unconditionalMetering itemName=\"fixedPrice\">\n                <ops:unconditionalMetering rate=\"0.0\" chargePeriod=\"DAILY\"/>\n            </ops:unconditionalMetering>\n        </ops:unconditionalMeterings>\n        <ops:oneTimeMeterings/>\n        <ops:tagBasedOneTimeMeterings/>\n        <ops:tagBasedPolicyRefs>\n            <ops:tagBasedPolicyRef itemName=\"vmTags\">\n                <ops:policyRefs key=\"category\" value=\"value\">\n                    <ops:policyRef priority=\"1\" policyId=\"697cb9fc-4ac1-407b-aff3-1a0898b0b39c\"/>\n                </ops:policyRefs>\n            </ops:tagBasedPolicyRef>\n        </ops:tagBasedPolicyRefs>\n        <ops:tagBasedRateFactors>\n            <ops:tagBasedRateFactor itemName=\"vmTagsRateFactor\">\n                <ops:rateFactors key=\"category\" value=\"value\">\n                    <ops:rateFactor contextMeteringItem=\"cpu\" rateFactor=\"5.4\"/>\n                </ops:rateFactors>\n            </ops:tagBasedRateFactor>\n        </ops:tagBasedRateFactors>\n    </ops:pricing-policy>\n</ops:pricing-policies>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/pricing-policies"
                }
              }
            },
            "description": "The list of all pricing policies"
          },
          "500": {
            "description": "There was an error while returning the pricing policy"
          }
        },

        "tags": [
          "Pricing Policies"
        ],
        "deprecated": false,
        "description": "Get a listing of all pricing policies",
        "operationId": "getPricingPoliciesUsingGET",
        "summary": "Get a listing of pricing policies"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"1f309440-4fc3-4a89-9612-270f9ec6c5a9\",\n  \"name\" : \"Pricing Policy Name\",\n  \"description\" : \"The description of the policy\",\n  \"createdBy\" : \"UNKNOWN\",\n  \"chargeModel\" : \"PAY_AS_YOU_GO\",\n  \"lastUpdateTimestamp\" : 0,\n  \"meterings\" : [ {\n    \"itemName\" : \"cpu\",\n    \"metering\" : {\n      \"chargePeriod\" : \"DAILY\",\n      \"baseRate\" : 0.0,\n      \"chargeOnPowerState\" : \"ALWAYS\",\n      \"overage\" : false,\n      \"overageRate\" : 0.0,\n      \"fixedPrice\" : 0.0,\n      \"chargeBasedOn\" : \"USAGE\"\n    }\n  } ],\n  \"namedMeterings\" : [ {\n    \"itemName\" : \"guestOSs\",\n    \"meterings\" : [ {\n      \"name\" : \"Linux\",\n      \"metering\" : {\n        \"chargePeriod\" : \"DAILY\",\n        \"baseRate\" : 0.0,\n        \"chargeOnPowerState\" : \"ALWAYS\",\n        \"overage\" : false,\n        \"overageRate\" : 0.0,\n        \"fixedPrice\" : 0.0,\n        \"chargeBasedOn\" : \"USAGE\"\n      }\n    } ]\n  } ],\n  \"tagBasedMeterings\" : [ {\n    \"itemName\" : \"vmTags\",\n    \"meterings\" : [ {\n      \"key\" : \"category\",\n      \"value\" : \"value\",\n      \"metering\" : {\n        \"chargePeriod\" : \"DAILY\",\n        \"baseRate\" : 0.0,\n        \"chargeOnPowerState\" : \"ALWAYS\",\n        \"overage\" : false,\n        \"overageRate\" : 0.0,\n        \"fixedPrice\" : 0.0,\n        \"chargeBasedOn\" : \"USAGE\"\n      }\n    } ]\n  } ],\n  \"unconditionalMeterings\" : [ {\n    \"itemName\" : \"fixedPrice\",\n    \"unconditionalMetering\" : {\n      \"rate\" : 0.0,\n      \"chargePeriod\" : \"DAILY\"\n    }\n  } ],\n  \"tagBasedPolicyRefs\" : [ {\n    \"itemName\" : \"vmTags\",\n    \"policyRefs\" : [ {\n      \"key\" : \"category\",\n      \"value\" : \"value\",\n      \"policyRef\" : {\n        \"priority\" : 1,\n        \"policyId\" : \"e97f5dca-4d2b-4477-9cc4-4a9def4d32e1\"\n      }\n    } ]\n  } ],\n  \"tagBasedRateFactors\" : [ {\n    \"itemName\" : \"vmTagsRateFactor\",\n    \"rateFactors\" : [ {\n      \"key\" : \"category\",\n      \"value\" : \"value\",\n      \"rateFactor\" : {\n        \"contextMeteringItem\" : \"cpu\",\n        \"rateFactor\" : 5.4\n      }\n    } ]\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/pricing-policy"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:pricing-policy id=\"dd5058eb-5db1-4350-856a-6d6431ec896d\" name=\"Pricing Policy Name\" createdBy=\"UNKNOWN\" chargeModel=\"PAY_AS_YOU_GO\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:description>The description of the policy</ops:description>\n    <ops:lastUpdateTimestamp>0</ops:lastUpdateTimestamp>\n    <ops:meterings>\n        <ops:metering itemName=\"cpu\">\n            <ops:metering chargePeriod=\"DAILY\" baseRate=\"0.0\" chargeOnPowerState=\"ALWAYS\" fixedPrice=\"0.0\" chargeBasedOn=\"USAGE\">\n                <ops:conditionalBaseRates/>\n                <ops:overage>false</ops:overage>\n                <ops:overageRate>0.0</ops:overageRate>\n                <ops:unit></ops:unit>\n            </ops:metering>\n        </ops:metering>\n    </ops:meterings>\n    <ops:namedMeterings>\n        <ops:namedMetering itemName=\"guestOSs\">\n            <ops:meterings name=\"Linux\">\n                <ops:metering chargePeriod=\"DAILY\" baseRate=\"0.0\" chargeOnPowerState=\"ALWAYS\" fixedPrice=\"0.0\" chargeBasedOn=\"USAGE\">\n                    <ops:conditionalBaseRates/>\n                    <ops:overage>false</ops:overage>\n                    <ops:overageRate>0.0</ops:overageRate>\n                    <ops:unit></ops:unit>\n                </ops:metering>\n            </ops:meterings>\n        </ops:namedMetering>\n    </ops:namedMeterings>\n    <ops:tagBasedMeterings>\n        <ops:tagBasedMetering itemName=\"vmTags\">\n            <ops:meterings key=\"category\" value=\"value\">\n                <ops:metering chargePeriod=\"DAILY\" baseRate=\"0.0\" chargeOnPowerState=\"ALWAYS\" fixedPrice=\"0.0\" chargeBasedOn=\"USAGE\">\n                    <ops:conditionalBaseRates/>\n                    <ops:overage>false</ops:overage>\n                    <ops:overageRate>0.0</ops:overageRate>\n                    <ops:unit></ops:unit>\n                </ops:metering>\n            </ops:meterings>\n        </ops:tagBasedMetering>\n    </ops:tagBasedMeterings>\n    <ops:unconditionalMeterings>\n        <ops:unconditionalMetering itemName=\"fixedPrice\">\n            <ops:unconditionalMetering rate=\"0.0\" chargePeriod=\"DAILY\"/>\n        </ops:unconditionalMetering>\n    </ops:unconditionalMeterings>\n    <ops:oneTimeMeterings/>\n    <ops:tagBasedOneTimeMeterings/>\n    <ops:tagBasedPolicyRefs>\n        <ops:tagBasedPolicyRef itemName=\"vmTags\">\n            <ops:policyRefs key=\"category\" value=\"value\">\n                <ops:policyRef priority=\"1\" policyId=\"6cc846a8-db9f-4828-b6c2-7dd9808a1a5d\"/>\n            </ops:policyRefs>\n        </ops:tagBasedPolicyRef>\n    </ops:tagBasedPolicyRefs>\n    <ops:tagBasedRateFactors>\n        <ops:tagBasedRateFactor itemName=\"vmTagsRateFactor\">\n            <ops:rateFactors key=\"category\" value=\"value\">\n                <ops:rateFactor contextMeteringItem=\"cpu\" rateFactor=\"5.4\"/>\n            </ops:rateFactors>\n        </ops:tagBasedRateFactor>\n    </ops:tagBasedRateFactors>\n</ops:pricing-policy>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/pricing-policy"
                }
              }
            },
            "description": "The pricing policy was created successfully in the system"
          },
          "422": {
            "description": "An invalid request body was specified or any constraints were violated"
          },
          "500": {
            "description": "There was an error during the creation of the pricing policy"
          }
        },

        "tags": [
          "Pricing Policies"
        ],
        "deprecated": false,
        "description": "Create a new pricing policy",
        "operationId": "createMeteringPolicyUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pricing-policy"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/pricing-policy"
              }
            }
          },
          "description": "The pricing policy that needs to be created",
          "required": true
        },
        "summary": "Create a new pricing policy"
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"a66dbf24-2112-4fcb-8aaf-e90250d2ac1e\",\n  \"name\" : \"Pricing Policy Name\",\n  \"description\" : \"The description of the policy\",\n  \"createdBy\" : \"UNKNOWN\",\n  \"chargeModel\" : \"PAY_AS_YOU_GO\",\n  \"lastUpdateTimestamp\" : 0,\n  \"meterings\" : [ {\n    \"itemName\" : \"cpu\",\n    \"metering\" : {\n      \"chargePeriod\" : \"DAILY\",\n      \"baseRate\" : 0.0,\n      \"chargeOnPowerState\" : \"ALWAYS\",\n      \"overage\" : false,\n      \"overageRate\" : 0.0,\n      \"fixedPrice\" : 0.0,\n      \"chargeBasedOn\" : \"USAGE\"\n    }\n  } ],\n  \"namedMeterings\" : [ {\n    \"itemName\" : \"guestOSs\",\n    \"meterings\" : [ {\n      \"name\" : \"Linux\",\n      \"metering\" : {\n        \"chargePeriod\" : \"DAILY\",\n        \"baseRate\" : 0.0,\n        \"chargeOnPowerState\" : \"ALWAYS\",\n        \"overage\" : false,\n        \"overageRate\" : 0.0,\n        \"fixedPrice\" : 0.0,\n        \"chargeBasedOn\" : \"USAGE\"\n      }\n    } ]\n  } ],\n  \"tagBasedMeterings\" : [ {\n    \"itemName\" : \"vmTags\",\n    \"meterings\" : [ {\n      \"key\" : \"category\",\n      \"value\" : \"value\",\n      \"metering\" : {\n        \"chargePeriod\" : \"DAILY\",\n        \"baseRate\" : 0.0,\n        \"chargeOnPowerState\" : \"ALWAYS\",\n        \"overage\" : false,\n        \"overageRate\" : 0.0,\n        \"fixedPrice\" : 0.0,\n        \"chargeBasedOn\" : \"USAGE\"\n      }\n    } ]\n  } ],\n  \"unconditionalMeterings\" : [ {\n    \"itemName\" : \"fixedPrice\",\n    \"unconditionalMetering\" : {\n      \"rate\" : 0.0,\n      \"chargePeriod\" : \"DAILY\"\n    }\n  } ],\n  \"tagBasedPolicyRefs\" : [ {\n    \"itemName\" : \"vmTags\",\n    \"policyRefs\" : [ {\n      \"key\" : \"category\",\n      \"value\" : \"value\",\n      \"policyRef\" : {\n        \"priority\" : 1,\n        \"policyId\" : \"dbb75aba-554a-47b7-a41d-8382dcf7550d\"\n      }\n    } ]\n  } ],\n  \"tagBasedRateFactors\" : [ {\n    \"itemName\" : \"vmTagsRateFactor\",\n    \"rateFactors\" : [ {\n      \"key\" : \"category\",\n      \"value\" : \"value\",\n      \"rateFactor\" : {\n        \"contextMeteringItem\" : \"cpu\",\n        \"rateFactor\" : 5.4\n      }\n    } ]\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/pricing-policy"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:pricing-policy id=\"be9073d3-cd66-4ac0-89a2-b43279d1afef\" name=\"Pricing Policy Name\" createdBy=\"UNKNOWN\" chargeModel=\"PAY_AS_YOU_GO\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:description>The description of the policy</ops:description>\n    <ops:lastUpdateTimestamp>0</ops:lastUpdateTimestamp>\n    <ops:meterings>\n        <ops:metering itemName=\"cpu\">\n            <ops:metering chargePeriod=\"DAILY\" baseRate=\"0.0\" chargeOnPowerState=\"ALWAYS\" fixedPrice=\"0.0\" chargeBasedOn=\"USAGE\">\n                <ops:conditionalBaseRates/>\n                <ops:overage>false</ops:overage>\n                <ops:overageRate>0.0</ops:overageRate>\n                <ops:unit></ops:unit>\n            </ops:metering>\n        </ops:metering>\n    </ops:meterings>\n    <ops:namedMeterings>\n        <ops:namedMetering itemName=\"guestOSs\">\n            <ops:meterings name=\"Linux\">\n                <ops:metering chargePeriod=\"DAILY\" baseRate=\"0.0\" chargeOnPowerState=\"ALWAYS\" fixedPrice=\"0.0\" chargeBasedOn=\"USAGE\">\n                    <ops:conditionalBaseRates/>\n                    <ops:overage>false</ops:overage>\n                    <ops:overageRate>0.0</ops:overageRate>\n                    <ops:unit></ops:unit>\n                </ops:metering>\n            </ops:meterings>\n        </ops:namedMetering>\n    </ops:namedMeterings>\n    <ops:tagBasedMeterings>\n        <ops:tagBasedMetering itemName=\"vmTags\">\n            <ops:meterings key=\"category\" value=\"value\">\n                <ops:metering chargePeriod=\"DAILY\" baseRate=\"0.0\" chargeOnPowerState=\"ALWAYS\" fixedPrice=\"0.0\" chargeBasedOn=\"USAGE\">\n                    <ops:conditionalBaseRates/>\n                    <ops:overage>false</ops:overage>\n                    <ops:overageRate>0.0</ops:overageRate>\n                    <ops:unit></ops:unit>\n                </ops:metering>\n            </ops:meterings>\n        </ops:tagBasedMetering>\n    </ops:tagBasedMeterings>\n    <ops:unconditionalMeterings>\n        <ops:unconditionalMetering itemName=\"fixedPrice\">\n            <ops:unconditionalMetering rate=\"0.0\" chargePeriod=\"DAILY\"/>\n        </ops:unconditionalMetering>\n    </ops:unconditionalMeterings>\n    <ops:oneTimeMeterings/>\n    <ops:tagBasedOneTimeMeterings/>\n    <ops:tagBasedPolicyRefs>\n        <ops:tagBasedPolicyRef itemName=\"vmTags\">\n            <ops:policyRefs key=\"category\" value=\"value\">\n                <ops:policyRef priority=\"1\" policyId=\"53da7a6c-0959-4d2a-acc8-47e571b2864c\"/>\n            </ops:policyRefs>\n        </ops:tagBasedPolicyRef>\n    </ops:tagBasedPolicyRefs>\n    <ops:tagBasedRateFactors>\n        <ops:tagBasedRateFactor itemName=\"vmTagsRateFactor\">\n            <ops:rateFactors key=\"category\" value=\"value\">\n                <ops:rateFactor contextMeteringItem=\"cpu\" rateFactor=\"5.4\"/>\n            </ops:rateFactors>\n        </ops:tagBasedRateFactor>\n    </ops:tagBasedRateFactors>\n</ops:pricing-policy>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/pricing-policy"
                }
              }
            },
            "description": "The pricing policy was updated successfully in the system"
          },
          "422": {
            "description": "An invalid request body was specified or any constraints were violated"
          },
          "500": {
            "description": "There was an error during the update of the pricing policy"
          }
        },

        "tags": [
          "Pricing Policies"
        ],
        "deprecated": false,
        "description": "Update the specified pricing policy",
        "operationId": "updateMeteringPolicyUsingPUT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pricing-policy"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/pricing-policy"
              }
            }
          },
          "description": "The pricing policy identifier",
          "required": true
        },
        "summary": "Update the specified pricing policy"
      }
    },
    "/api/pricing/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The pricing policy identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The pricing policy is deleted successfully"
          },
          "404": {
            "description": "There is no pricing policy for the specified identifier"
          }
        },

        "tags": [
          "Pricing Policies"
        ],
        "deprecated": false,
        "description": "Delete the pricing policy for the specified identifier",
        "operationId": "deleteMeteringPolicyUsingDELETE",
        "summary": "Delete the pricing policy for the specified identifier"
      },
      "get": {
        "parameters": [
          {
            "description": "The pricing policy identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"5f2ffede-7f54-457e-b735-c61da52a242e\",\n  \"name\" : \"Pricing Policy Name\",\n  \"description\" : \"The description of the policy\",\n  \"createdBy\" : \"UNKNOWN\",\n  \"chargeModel\" : \"PAY_AS_YOU_GO\",\n  \"lastUpdateTimestamp\" : 0,\n  \"meterings\" : [ {\n    \"itemName\" : \"cpu\",\n    \"metering\" : {\n      \"chargePeriod\" : \"DAILY\",\n      \"baseRate\" : 0.0,\n      \"chargeOnPowerState\" : \"ALWAYS\",\n      \"overage\" : false,\n      \"overageRate\" : 0.0,\n      \"fixedPrice\" : 0.0,\n      \"chargeBasedOn\" : \"USAGE\"\n    }\n  } ],\n  \"namedMeterings\" : [ {\n    \"itemName\" : \"guestOSs\",\n    \"meterings\" : [ {\n      \"name\" : \"Linux\",\n      \"metering\" : {\n        \"chargePeriod\" : \"DAILY\",\n        \"baseRate\" : 0.0,\n        \"chargeOnPowerState\" : \"ALWAYS\",\n        \"overage\" : false,\n        \"overageRate\" : 0.0,\n        \"fixedPrice\" : 0.0,\n        \"chargeBasedOn\" : \"USAGE\"\n      }\n    } ]\n  } ],\n  \"tagBasedMeterings\" : [ {\n    \"itemName\" : \"vmTags\",\n    \"meterings\" : [ {\n      \"key\" : \"category\",\n      \"value\" : \"value\",\n      \"metering\" : {\n        \"chargePeriod\" : \"DAILY\",\n        \"baseRate\" : 0.0,\n        \"chargeOnPowerState\" : \"ALWAYS\",\n        \"overage\" : false,\n        \"overageRate\" : 0.0,\n        \"fixedPrice\" : 0.0,\n        \"chargeBasedOn\" : \"USAGE\"\n      }\n    } ]\n  } ],\n  \"unconditionalMeterings\" : [ {\n    \"itemName\" : \"fixedPrice\",\n    \"unconditionalMetering\" : {\n      \"rate\" : 0.0,\n      \"chargePeriod\" : \"DAILY\"\n    }\n  } ],\n  \"tagBasedPolicyRefs\" : [ {\n    \"itemName\" : \"vmTags\",\n    \"policyRefs\" : [ {\n      \"key\" : \"category\",\n      \"value\" : \"value\",\n      \"policyRef\" : {\n        \"priority\" : 1,\n        \"policyId\" : \"5ffdffa1-72c1-4ebc-9d81-e5bfd707a4f9\"\n      }\n    } ]\n  } ],\n  \"tagBasedRateFactors\" : [ {\n    \"itemName\" : \"vmTagsRateFactor\",\n    \"rateFactors\" : [ {\n      \"key\" : \"category\",\n      \"value\" : \"value\",\n      \"rateFactor\" : {\n        \"contextMeteringItem\" : \"cpu\",\n        \"rateFactor\" : 5.4\n      }\n    } ]\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/pricing-policy"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:pricing-policy id=\"c49301a3-a545-43a7-9ea6-c221844a60fd\" name=\"Pricing Policy Name\" createdBy=\"UNKNOWN\" chargeModel=\"PAY_AS_YOU_GO\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:description>The description of the policy</ops:description>\n    <ops:lastUpdateTimestamp>0</ops:lastUpdateTimestamp>\n    <ops:meterings>\n        <ops:metering itemName=\"cpu\">\n            <ops:metering chargePeriod=\"DAILY\" baseRate=\"0.0\" chargeOnPowerState=\"ALWAYS\" fixedPrice=\"0.0\" chargeBasedOn=\"USAGE\">\n                <ops:conditionalBaseRates/>\n                <ops:overage>false</ops:overage>\n                <ops:overageRate>0.0</ops:overageRate>\n                <ops:unit></ops:unit>\n            </ops:metering>\n        </ops:metering>\n    </ops:meterings>\n    <ops:namedMeterings>\n        <ops:namedMetering itemName=\"guestOSs\">\n            <ops:meterings name=\"Linux\">\n                <ops:metering chargePeriod=\"DAILY\" baseRate=\"0.0\" chargeOnPowerState=\"ALWAYS\" fixedPrice=\"0.0\" chargeBasedOn=\"USAGE\">\n                    <ops:conditionalBaseRates/>\n                    <ops:overage>false</ops:overage>\n                    <ops:overageRate>0.0</ops:overageRate>\n                    <ops:unit></ops:unit>\n                </ops:metering>\n            </ops:meterings>\n        </ops:namedMetering>\n    </ops:namedMeterings>\n    <ops:tagBasedMeterings>\n        <ops:tagBasedMetering itemName=\"vmTags\">\n            <ops:meterings key=\"category\" value=\"value\">\n                <ops:metering chargePeriod=\"DAILY\" baseRate=\"0.0\" chargeOnPowerState=\"ALWAYS\" fixedPrice=\"0.0\" chargeBasedOn=\"USAGE\">\n                    <ops:conditionalBaseRates/>\n                    <ops:overage>false</ops:overage>\n                    <ops:overageRate>0.0</ops:overageRate>\n                    <ops:unit></ops:unit>\n                </ops:metering>\n            </ops:meterings>\n        </ops:tagBasedMetering>\n    </ops:tagBasedMeterings>\n    <ops:unconditionalMeterings>\n        <ops:unconditionalMetering itemName=\"fixedPrice\">\n            <ops:unconditionalMetering rate=\"0.0\" chargePeriod=\"DAILY\"/>\n        </ops:unconditionalMetering>\n    </ops:unconditionalMeterings>\n    <ops:oneTimeMeterings/>\n    <ops:tagBasedOneTimeMeterings/>\n    <ops:tagBasedPolicyRefs>\n        <ops:tagBasedPolicyRef itemName=\"vmTags\">\n            <ops:policyRefs key=\"category\" value=\"value\">\n                <ops:policyRef priority=\"1\" policyId=\"34b4fbea-857c-4860-ba5e-bb5c07a711b2\"/>\n            </ops:policyRefs>\n        </ops:tagBasedPolicyRef>\n    </ops:tagBasedPolicyRefs>\n    <ops:tagBasedRateFactors>\n        <ops:tagBasedRateFactor itemName=\"vmTagsRateFactor\">\n            <ops:rateFactors key=\"category\" value=\"value\">\n                <ops:rateFactor contextMeteringItem=\"cpu\" rateFactor=\"5.4\"/>\n            </ops:rateFactors>\n        </ops:tagBasedRateFactor>\n    </ops:tagBasedRateFactors>\n</ops:pricing-policy>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/pricing-policy"
                }
              }
            },
            "description": "The pricing policy for the specified identifier"
          },
          "404": {
            "description": "There is no pricing policy for the specified identifier"
          }
        },

        "tags": [
          "Pricing Policies"
        ],
        "deprecated": false,
        "description": "Get the pricing policy for the specified identifier",
        "operationId": "getPricingPolicyUsingGET",
        "summary": "Get the pricing policy for the specified identifier"
      }
    },
    "/api/pricing/{id}/history": {
      "get": {
        "parameters": [
          {
            "description": "The pricing policy identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"policies\" : [ {\n    \"id\" : \"0a70112a-117a-41b7-a61e-0ff0b57d259a\",\n    \"name\" : \"Pricing Policy Name\",\n    \"description\" : \"The description of the policy\",\n    \"createdBy\" : \"UNKNOWN\",\n    \"chargeModel\" : \"PAY_AS_YOU_GO\",\n    \"lastUpdateTimestamp\" : 0,\n    \"meterings\" : [ {\n      \"itemName\" : \"cpu\",\n      \"metering\" : {\n        \"chargePeriod\" : \"DAILY\",\n        \"baseRate\" : 0.0,\n        \"chargeOnPowerState\" : \"ALWAYS\",\n        \"overage\" : false,\n        \"overageRate\" : 0.0,\n        \"fixedPrice\" : 0.0,\n        \"chargeBasedOn\" : \"USAGE\"\n      }\n    } ],\n    \"namedMeterings\" : [ {\n      \"itemName\" : \"guestOSs\",\n      \"meterings\" : [ {\n        \"name\" : \"Linux\",\n        \"metering\" : {\n          \"chargePeriod\" : \"DAILY\",\n          \"baseRate\" : 0.0,\n          \"chargeOnPowerState\" : \"ALWAYS\",\n          \"overage\" : false,\n          \"overageRate\" : 0.0,\n          \"fixedPrice\" : 0.0,\n          \"chargeBasedOn\" : \"USAGE\"\n        }\n      } ]\n    } ],\n    \"tagBasedMeterings\" : [ {\n      \"itemName\" : \"vmTags\",\n      \"meterings\" : [ {\n        \"key\" : \"category\",\n        \"value\" : \"value\",\n        \"metering\" : {\n          \"chargePeriod\" : \"DAILY\",\n          \"baseRate\" : 0.0,\n          \"chargeOnPowerState\" : \"ALWAYS\",\n          \"overage\" : false,\n          \"overageRate\" : 0.0,\n          \"fixedPrice\" : 0.0,\n          \"chargeBasedOn\" : \"USAGE\"\n        }\n      } ]\n    } ],\n    \"unconditionalMeterings\" : [ {\n      \"itemName\" : \"fixedPrice\",\n      \"unconditionalMetering\" : {\n        \"rate\" : 0.0,\n        \"chargePeriod\" : \"DAILY\"\n      }\n    } ],\n    \"tagBasedPolicyRefs\" : [ {\n      \"itemName\" : \"vmTags\",\n      \"policyRefs\" : [ {\n        \"key\" : \"category\",\n        \"value\" : \"value\",\n        \"policyRef\" : {\n          \"priority\" : 1,\n          \"policyId\" : \"2796fefc-276a-4307-a1d4-784d50a3a467\"\n        }\n      } ]\n    } ],\n    \"tagBasedRateFactors\" : [ {\n      \"itemName\" : \"vmTagsRateFactor\",\n      \"rateFactors\" : [ {\n        \"key\" : \"category\",\n        \"value\" : \"value\",\n        \"rateFactor\" : {\n          \"contextMeteringItem\" : \"cpu\",\n          \"rateFactor\" : 5.4\n        }\n      } ]\n    } ]\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/pricing-policies"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:pricing-policies xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:pricing-policy id=\"53876205-7b90-458e-97b1-bc08ca6da57f\" name=\"Pricing Policy Name\" createdBy=\"UNKNOWN\" chargeModel=\"PAY_AS_YOU_GO\">\n        <ops:description>The description of the policy</ops:description>\n        <ops:lastUpdateTimestamp>0</ops:lastUpdateTimestamp>\n        <ops:meterings>\n            <ops:metering itemName=\"cpu\">\n                <ops:metering chargePeriod=\"DAILY\" baseRate=\"0.0\" chargeOnPowerState=\"ALWAYS\" fixedPrice=\"0.0\" chargeBasedOn=\"USAGE\">\n                    <ops:conditionalBaseRates/>\n                    <ops:overage>false</ops:overage>\n                    <ops:overageRate>0.0</ops:overageRate>\n                    <ops:unit></ops:unit>\n                </ops:metering>\n            </ops:metering>\n        </ops:meterings>\n        <ops:namedMeterings>\n            <ops:namedMetering itemName=\"guestOSs\">\n                <ops:meterings name=\"Linux\">\n                    <ops:metering chargePeriod=\"DAILY\" baseRate=\"0.0\" chargeOnPowerState=\"ALWAYS\" fixedPrice=\"0.0\" chargeBasedOn=\"USAGE\">\n                        <ops:conditionalBaseRates/>\n                        <ops:overage>false</ops:overage>\n                        <ops:overageRate>0.0</ops:overageRate>\n                        <ops:unit></ops:unit>\n                    </ops:metering>\n                </ops:meterings>\n            </ops:namedMetering>\n        </ops:namedMeterings>\n        <ops:tagBasedMeterings>\n            <ops:tagBasedMetering itemName=\"vmTags\">\n                <ops:meterings key=\"category\" value=\"value\">\n                    <ops:metering chargePeriod=\"DAILY\" baseRate=\"0.0\" chargeOnPowerState=\"ALWAYS\" fixedPrice=\"0.0\" chargeBasedOn=\"USAGE\">\n                        <ops:conditionalBaseRates/>\n                        <ops:overage>false</ops:overage>\n                        <ops:overageRate>0.0</ops:overageRate>\n                        <ops:unit></ops:unit>\n                    </ops:metering>\n                </ops:meterings>\n            </ops:tagBasedMetering>\n        </ops:tagBasedMeterings>\n        <ops:unconditionalMeterings>\n            <ops:unconditionalMetering itemName=\"fixedPrice\">\n                <ops:unconditionalMetering rate=\"0.0\" chargePeriod=\"DAILY\"/>\n            </ops:unconditionalMetering>\n        </ops:unconditionalMeterings>\n        <ops:oneTimeMeterings/>\n        <ops:tagBasedOneTimeMeterings/>\n        <ops:tagBasedPolicyRefs>\n            <ops:tagBasedPolicyRef itemName=\"vmTags\">\n                <ops:policyRefs key=\"category\" value=\"value\">\n                    <ops:policyRef priority=\"1\" policyId=\"cb95ba3a-b1d1-42c1-a50c-8dd11305b98f\"/>\n                </ops:policyRefs>\n            </ops:tagBasedPolicyRef>\n        </ops:tagBasedPolicyRefs>\n        <ops:tagBasedRateFactors>\n            <ops:tagBasedRateFactor itemName=\"vmTagsRateFactor\">\n                <ops:rateFactors key=\"category\" value=\"value\">\n                    <ops:rateFactor contextMeteringItem=\"cpu\" rateFactor=\"5.4\"/>\n                </ops:rateFactors>\n            </ops:tagBasedRateFactor>\n        </ops:tagBasedRateFactors>\n    </ops:pricing-policy>\n</ops:pricing-policies>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/pricing-policies"
                }
              }
            },
            "description": "The list of pricing policy changes"
          },
          "404": {
            "description": "There is no pricing policy history for the specified identifier"
          }
        },

        "tags": [
          "Pricing Policies"
        ],
        "deprecated": false,
        "description": "Get a listing of pricing policy changes",
        "operationId": "getPricingPolicyHistoryUsingGET",
        "summary": "Get a listing of pricing policy changes"
      }
    },
    "/api/recommendations": {
      "get": {
        "parameters": [
          {
            "description": "Get Recommendations with the matching id, both system defined and user defined",
            "explode": true,
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Get Recommendations that have an associated recommended action on and the action\nis applicable to the resource of the specified adapter kind.",
            "in": "query",
            "name": "targetAdapterKind",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Get Recommendations that have an associated recommended action on and the action\nis applicable to the resource of the specified resource kind.",
            "in": "query",
            "name": "targetResourceKind",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"recommendations\" : [ {\n    \"id\" : \"69fd27b4-3ebe-44b6-ad5b-14f19696b17e\",\n    \"description\" : \"Restart the Virtual Machine\",\n    \"action\" : {\n      \"actionAdapterKindId\" : \"VcoRemediation\",\n      \"targetAdapterKindId\" : \"VMWARE\",\n      \"targetResourceKindId\" : \"VirtualMachine\",\n      \"targetMethod\" : \"reset\"\n    }\n  }, {\n    \"id\" : \"04860026-9a65-40ab-8370-7fa8bba32755\",\n    \"description\" : \"Reboot the Host after migrating the Virtual Machines\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/recommendations"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:recommendations xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:recommendation>\n        <ops:id>aefe6fe2-ba6e-40b7-ad14-275b7eff42f0</ops:id>\n        <ops:description>Restart the Virtual Machine</ops:description>\n        <ops:action>\n            <ops:actionAdapterKindId>VcoRemediation</ops:actionAdapterKindId>\n            <ops:targetAdapterKindId>VMWARE</ops:targetAdapterKindId>\n            <ops:targetResourceKindId>VirtualMachine</ops:targetResourceKindId>\n            <ops:targetMethod>reset</ops:targetMethod>\n        </ops:action>\n    </ops:recommendation>\n    <ops:recommendation>\n        <ops:id>e63712d1-d9db-4b9b-b980-c9fbaf53e378</ops:id>\n        <ops:description>Reboot the Host after migrating the Virtual Machines</ops:description>\n    </ops:recommendation>\n</ops:recommendations>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/recommendations"
                }
              }
            },
            "description": "The list of recommendations"
          }
        },

        "tags": [
          "Recommendations"
        ],
        "deprecated": false,
        "description": "If no query set, all recommendations will be returned",
        "operationId": "getRecommendationsUsingGET",
        "summary": "Get recommendations"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"description\" : \"Restart the Virtual Machine\",\n  \"action\" : {\n    \"actionAdapterKindId\" : \"VcoRemediation\",\n    \"targetAdapterKindId\" : \"VMWARE\",\n    \"targetResourceKindId\" : \"VirtualMachine\",\n    \"targetMethod\" : \"reset\"\n  }\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/recommendation"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:recommendation xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:description>Restart the Virtual Machine</ops:description>\n    <ops:action>\n        <ops:actionAdapterKindId>VcoRemediation</ops:actionAdapterKindId>\n        <ops:targetAdapterKindId>VMWARE</ops:targetAdapterKindId>\n        <ops:targetResourceKindId>VirtualMachine</ops:targetResourceKindId>\n        <ops:targetMethod>reset</ops:targetMethod>\n    </ops:action>\n</ops:recommendation>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/recommendation"
                }
              }
            },
            "description": "The created recommendation"
          }
        },

        "tags": [
          "Recommendations"
        ],
        "deprecated": false,
        "description": "The recommendation identifier must be unique for the system.",
        "operationId": "createRecommendationUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/recommendation"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/recommendation"
              }
            }
          },
          "description": "The Recommendation to create",
          "required": true
        },
        "summary": "Create a recommendation"
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"5219d2cd-0ac3-4ce7-a33c-7788e18175c2\",\n  \"description\" : \"Restart the modified Virtual Machine\",\n  \"action\" : {\n    \"actionAdapterKindId\" : \"VcoRemediation\",\n    \"targetAdapterKindId\" : \"VMWARE\",\n    \"targetResourceKindId\" : \"VirtualMachine\",\n    \"targetMethod\" : \"reset\"\n  }\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/recommendation"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:recommendation xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:id>1340631a-2cc4-42ba-9b0d-ed9ad7d315d1</ops:id>\n    <ops:description>Restart the modified Virtual Machine</ops:description>\n    <ops:action>\n        <ops:actionAdapterKindId>VcoRemediation</ops:actionAdapterKindId>\n        <ops:targetAdapterKindId>VMWARE</ops:targetAdapterKindId>\n        <ops:targetResourceKindId>VirtualMachine</ops:targetResourceKindId>\n        <ops:targetMethod>reset</ops:targetMethod>\n    </ops:action>\n</ops:recommendation>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/recommendation"
                }
              }
            },
            "description": "The updated recommendation"
          }
        },

        "tags": [
          "Recommendations"
        ],
        "deprecated": false,
        "description": "Update an existing recommendation",
        "operationId": "updateRecommendationUsingPUT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/recommendation"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/recommendation"
              }
            }
          },
          "description": "The Recommendation to update",
          "required": true
        },
        "summary": "Update an existing recommendation"
      }
    },
    "/api/recommendations/{id}": {
      "delete": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "If true,then delete recommendation and if it is referenced in problem definition, update corresponding problem definition to remove the reference. If false, then delete recommendation only if it is not referenced by any problem definition.",
            "example": false,
            "in": "query",
            "name": "force",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "The identifier of the recommendation to delete",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The recommendation is deleted successfully"
          }
        },

        "tags": [
          "Recommendations"
        ],
        "deprecated": false,
        "description": "If a recommendation with the specified identifier does not exist no error will be returned",
        "operationId": "deleteRecommendationUsingDELETE",
        "summary": "Delete a recommendation"
      },
      "get": {
        "parameters": [
          {
            "description": "The identifier of the recommendation",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"9f4c00eb-b426-4ae9-b77c-d225b03cc85f\",\n  \"description\" : \"Reboot the Host after migrating the Virtual Machines\"\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/recommendation"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:recommendation xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:id>3374ff5e-e128-423a-82c0-446965fd9910</ops:id>\n    <ops:description>Reboot the Host after migrating the Virtual Machines</ops:description>\n</ops:recommendation>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/recommendation"
                }
              }
            },
            "description": "The recommendation corresponding to the specified ID"
          }
        },

        "tags": [
          "Recommendations"
        ],
        "deprecated": false,
        "description": "Get the recommendation specified by the given identifier",
        "operationId": "getRecommendationByIdUsingGET",
        "summary": "Get the recommendation specified by the given identifier"
      }
    },
    "/api/reportdefinitions": {
      "get": {
        "parameters": [
          {
            "description": "Names of the Report Definitions",
            "explode": true,
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "explode": true,
            "in": "query",
            "name": "others",
            "required": false,
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          {
            "description": "Owners of the Report Definitions",
            "explode": true,
            "in": "query",
            "name": "owner",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Page number from which data needs to be displayed (0-based)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Expected number of entries per page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Subjects of the Report Definitions",
            "explode": true,
            "in": "query",
            "name": "subject",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"reportDefinitions\" : [ {\n    \"id\" : \"ad08c531-054c-4b17-b724-75bed179583c\",\n    \"description\" : \"Stressed VMs Report\",\n    \"lastRunTime\" : 1689236477792,\n    \"active\" : true,\n    \"owner\" : \"admin\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/report-definitions"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:report-definitions xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:report-definition id=\"9ba3cbe0-addc-4ad0-9747-8017fc2edb78\" active=\"true\">\n        <ops:description>Stressed VMs Report</ops:description>\n        <ops:lastRunTime>2023-07-13T08:21:17.793Z</ops:lastRunTime>\n        <ops:owner>admin</ops:owner>\n    </ops:report-definition>\n</ops:report-definitions>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/report-definitions"
                }
              }
            },
            "description": "The ReportDefinitions object that contains a list of ReportDefinition objects matching the query spec"
          }
        },

        "tags": [
          "Reports"
        ],
        "deprecated": false,
        "description": "Get the Report Definitions based on the query specification specified",
        "operationId": "getReportDefinitionsUsingGET",
        "summary": "Get the Report Definitions based on the query specification specified"
      }
    },
    "/api/reportdefinitions/{id}": {
      "get": {
        "parameters": [
          {
            "description": "The Report Definition identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"f6eb2dfa-f2d5-4069-8d45-42a3e68530dc\",\n  \"description\" : \"Stressed VMs Report\",\n  \"lastRunTime\" : 1689236477771,\n  \"active\" : true,\n  \"owner\" : \"admin\"\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/report-definition"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:report-definition id=\"09e95017-5004-4a14-a36d-bd77e44f53cd\" active=\"true\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:description>Stressed VMs Report</ops:description>\n    <ops:lastRunTime>2023-07-13T08:21:17.773Z</ops:lastRunTime>\n    <ops:owner>admin</ops:owner>\n</ops:report-definition>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/report-definition"
                }
              }
            },
            "description": "The ReportDefinition object"
          },
          "404": {
            "description": "There is no Report Definition in the system for the specified identifier"
          }
        },

        "tags": [
          "Reports"
        ],
        "deprecated": false,
        "description": "Get a Report Definition by identifier",
        "operationId": "getReportDefinitionUsingGET",
        "summary": "Get a Report Definition"
      }
    },
    "/api/reportdefinitions/{id}/schedules": {
      "get": {
        "parameters": [
          {
            "description": "The Report Definition identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Page number from which data needs to be displayed (0-based)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Expected number of entries per page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"reportSchedules\" : [ {\n    \"reportDefinitionId\" : \"5661ca9b-a573-4db9-a28a-338f3190985f\",\n    \"resourceId\" : [ \"330a5ac6-c104-49f3-9db5-b52a8d125e88\" ],\n    \"startDate\" : \"01/01/2015\",\n    \"reportScheduleType\" : \"MONTHLY\",\n    \"startHour\" : 8,\n    \"startMinute\" : 0,\n    \"recurrence\" : 1,\n    \"dayOfTheMonth\" : 1,\n    \"emailAddresses\" : [ \"vrops@vmware.com\" ]\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/report-schedules"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:report-schedules xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:report-schedule reportDefinitionId=\"bc62fd5a-f72a-473c-b889-a377ad8eb4a0\">\n        <ops:resourceId>1abb3e49-d115-43cd-87c1-816dfde085dd</ops:resourceId>\n        <ops:startDate>01/01/2015</ops:startDate>\n        <ops:reportScheduleType>MONTHLY</ops:reportScheduleType>\n        <ops:startHour>8</ops:startHour>\n        <ops:startMinute>0</ops:startMinute>\n        <ops:recurrence>1</ops:recurrence>\n        <ops:dayOfTheMonth>1</ops:dayOfTheMonth>\n        <ops:emailAddresses>vrops@vmware.com</ops:emailAddresses>\n    </ops:report-schedule>\n</ops:report-schedules>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/report-schedules"
                }
              }
            },
            "description": "The Report Schedules associated with the Report Definition identifier"
          }
        },

        "tags": [
          "Reports"
        ],
        "deprecated": false,
        "description": "The date and time values configured within the Report Schedule are converted to GMT time zone.",
        "operationId": "getReportSchedulesUsingGET",
        "summary": "Get all the Report Schedules associated with a Report Definition"
      },
      "post": {
        "parameters": [
          {
            "description": "Custom HTTP header used by Ops API clients to specify Timezone information.\nThis Timezone value will be typically used for Report Generation.\nEither an abbreviation such as \"GMT\", \"PDT\" can be specified,\nor a full name such as \"America/Los_Angeles\". Other\nformats and representations are not supported.\n",
            "in": "header",
            "name": "X-Ops-API-Timezone",
            "required": false,
            "schema": {
              "default": "GMT",
              "type": "string"
            }
          },
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"reportDefinitionId\" : \"49ffa504-2e68-4362-a017-071eff8d0d8e\",\n  \"resourceId\" : [ \"40c4bfdf-551d-42fc-b529-3f3db443c89f\" ],\n  \"startDate\" : \"01/01/2015\",\n  \"reportScheduleType\" : \"MONTHLY\",\n  \"startHour\" : 8,\n  \"startMinute\" : 0,\n  \"recurrence\" : 1,\n  \"dayOfTheMonth\" : 1,\n  \"emailAddresses\" : [ \"vrops@vmware.com\" ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/report-schedule"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:report-schedule reportDefinitionId=\"af9fb5da-a8ff-4fca-8bb1-dc48d94fc685\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:resourceId>c36c3583-329c-4ab9-9b09-c49d9387d032</ops:resourceId>\n    <ops:startDate>01/01/2015</ops:startDate>\n    <ops:reportScheduleType>MONTHLY</ops:reportScheduleType>\n    <ops:startHour>8</ops:startHour>\n    <ops:startMinute>0</ops:startMinute>\n    <ops:recurrence>1</ops:recurrence>\n    <ops:dayOfTheMonth>1</ops:dayOfTheMonth>\n    <ops:emailAddresses>vrops@vmware.com</ops:emailAddresses>\n</ops:report-schedule>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/report-schedule"
                }
              }
            },
            "description": "The Report Schedule to create in the system"
          }
        },

        "tags": [
          "Reports"
        ],
        "deprecated": false,
        "description": "To specify the time zone add <i>X-Ops-API-Timezone</i> header with value of format e.g. Asia/Yerevan.\nAll the schedules created using this API will be configured to use GMT time zone.",
        "operationId": "createReportScheduleUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/report-schedule"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/report-schedule"
              }
            }
          },
          "description": "The Report Schedule to create in the system",
          "required": true
        },
        "summary": "Create a Report Schedule to generate a Report for the specified Report Definition and Resource(s)"
      },
      "put": {
        "parameters": [
          {
            "description": "The Report Definition identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"reportDefinitionId\" : \"eaf156b3-5c52-4886-b9e3-9a3422c26c23\",\n  \"resourceId\" : [ \"a1593aea-dd88-4795-a089-26edb2cf0707\" ],\n  \"startDate\" : \"01/01/2015\",\n  \"reportScheduleType\" : \"MONTHLY\",\n  \"startHour\" : 8,\n  \"startMinute\" : 0,\n  \"recurrence\" : 1,\n  \"dayOfTheMonth\" : 1,\n  \"emailAddresses\" : [ \"vrops@vmware.com\" ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/report-schedule"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:report-schedule reportDefinitionId=\"1d9ecdbe-7ab5-40af-bdf6-159ad22c1868\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:resourceId>9cac6419-bc52-4593-809b-b29607371d0e</ops:resourceId>\n    <ops:startDate>01/01/2015</ops:startDate>\n    <ops:reportScheduleType>MONTHLY</ops:reportScheduleType>\n    <ops:startHour>8</ops:startHour>\n    <ops:startMinute>0</ops:startMinute>\n    <ops:recurrence>1</ops:recurrence>\n    <ops:dayOfTheMonth>1</ops:dayOfTheMonth>\n    <ops:emailAddresses>vrops@vmware.com</ops:emailAddresses>\n</ops:report-schedule>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/report-schedule"
                }
              }
            },
            "description": "The updated Report Schedule object"
          },
          "404": {
            "description": "No Report Definition/Schedule is found with the specified identifier"
          }
        },

        "tags": [
          "Reports"
        ],
        "deprecated": false,
        "description": "The update of a schedule is a \"Replace\" operation.<br/>If a schedule with the specified   \nschedule id is present in the system it will be replaced else the API returns a 404 error.",
        "operationId": "updateReportScheduleUsingPUT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/report-schedule"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/report-schedule"
              }
            }
          },
          "description": "The Report Schedule to update",
          "required": true
        },
        "summary": "Update Report Schedule associated with the specific Report Definition and for the specified Schedule identifier"
      }
    },
    "/api/reportdefinitions/{id}/schedules/{scheduleId}": {
      "delete": {
        "parameters": [
          {
            "description": "The Report Definition identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The Report Schedule identifier",
            "in": "path",
            "name": "scheduleId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The Report Schedule was successfully deleted from the system"
          },
          "404": {
            "description": "No Report Definition/Schedule is found with the specified identifier"
          }
        },

        "tags": [
          "Reports"
        ],
        "deprecated": false,
        "description": "Delete Report Schedule associated with the specific Report Definition and for the specified Schedule identifier",
        "operationId": "deleteScheduleUsingDELETE",
        "summary": "Delete Report Schedule associated with the specific Report Definition and for the specified Schedule identifier"
      },
      "get": {
        "parameters": [
          {
            "description": "The Report Definition identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The Report Schedule identifier",
            "in": "path",
            "name": "scheduleId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"reportDefinitionId\" : \"81c5dc85-95c9-4a49-a878-f9746ee5ebcb\",\n  \"resourceId\" : [ \"04e65ced-4587-4600-af94-7fbe50f6bf54\" ],\n  \"startDate\" : \"01/01/2015\",\n  \"reportScheduleType\" : \"MONTHLY\",\n  \"startHour\" : 8,\n  \"startMinute\" : 0,\n  \"recurrence\" : 1,\n  \"dayOfTheMonth\" : 1,\n  \"emailAddresses\" : [ \"vrops@vmware.com\" ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/report-schedule"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:report-schedule reportDefinitionId=\"61ddcd07-b5c5-4a85-a3f4-1d554ffc8b4f\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:resourceId>738621a2-4cb2-423a-835f-43c836a2c3da</ops:resourceId>\n    <ops:startDate>01/01/2015</ops:startDate>\n    <ops:reportScheduleType>MONTHLY</ops:reportScheduleType>\n    <ops:startHour>8</ops:startHour>\n    <ops:startMinute>0</ops:startMinute>\n    <ops:recurrence>1</ops:recurrence>\n    <ops:dayOfTheMonth>1</ops:dayOfTheMonth>\n    <ops:emailAddresses>vrops@vmware.com</ops:emailAddresses>\n</ops:report-schedule>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/report-schedule"
                }
              }
            },
            "description": "The Report Schedules associated with the Report Definition identifier"
          },
          "404": {
            "description": "No Report Definition/Schedule is found with the specified identifier"
          }
        },

        "tags": [
          "Reports"
        ],
        "deprecated": false,
        "description": "The date and time values configured within the Report Schedule are converted to GMT time zone.",
        "operationId": "getReportScheduleUsingGET",
        "summary": "Get a specific Report Schedule for the specified Report Definition and Schedule identifier"
      }
    },
    "/api/reports": {
      "get": {
        "parameters": [
          {
            "description": "Reports name with which the filtering can be done",
            "explode": true,
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "explode": true,
            "in": "query",
            "name": "others",
            "required": false,
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          {
            "description": "Page number from which data needs to be displayed (0-based)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Expected number of entries per page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Resources on which the reports are generated",
            "explode": true,
            "in": "query",
            "name": "resourceId",
            "required": false,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Status of the report",
            "explode": true,
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Subjects with which the filtering can be done",
            "explode": true,
            "in": "query",
            "name": "subject",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"reports\" : [ {\n    \"description\" : \"Cluster Capacity Risk Forecast Report\",\n    \"owner\" : \"admin\",\n    \"status\" : \"Completed\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/reports"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:reports xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:report>\n        <ops:description>Cluster Capacity Risk Forecast Report</ops:description>\n        <ops:subject></ops:subject>\n        <ops:owner>admin</ops:owner>\n        <ops:status>Completed</ops:status>\n    </ops:report>\n</ops:reports>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/reports"
                }
              }
            },
            "description": "The Collection of Reports matching the specified search critiera"
          }
        },

        "tags": [
          "Reports"
        ],
        "deprecated": false,
        "description": "If the query spec is not provided, all Reports present in the system are returned.",
        "operationId": "getReportsUsingGET",
        "summary": "Get the Reports based on the Report Query Spec provided"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"description\" : \"Cluster Capacity Risk Forecast Report\",\n  \"owner\" : \"admin\",\n  \"completionTime\" : \"1 hour ago\",\n  \"status\" : \"Completed\"\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/report"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:report xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:description>Cluster Capacity Risk Forecast Report</ops:description>\n    <ops:subject></ops:subject>\n    <ops:owner>admin</ops:owner>\n    <ops:completionTime>1 hour ago</ops:completionTime>\n    <ops:status>Completed</ops:status>\n</ops:report>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/report"
                }
              }
            },
            "description": "The Generated Report"
          }
        },

        "tags": [
          "Reports"
        ],
        "deprecated": false,
        "description": "Generate (create) a Report using the specified Report Definition and for the specified Resource",
        "operationId": "createReportUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/report"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/report"
              }
            }
          },
          "description": "The Report that needs to be generated",
          "required": true
        },
        "summary": "Generate (create) a Report using the specified Report Definition and for the specified Resource"
      }
    },
    "/api/reports/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Report identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The report is deleted successfully"
          }
        },

        "tags": [
          "Reports"
        ],
        "deprecated": false,
        "description": "Delete a report by its identifier",
        "operationId": "deleteReportUsingDELETE",
        "summary": "Delete a report by its identifier"
      },
      "get": {
        "parameters": [
          {
            "description": "The Identifier of the Report",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"description\" : \"Cluster Capacity Risk Forecast Report\",\n  \"owner\" : \"admin\",\n  \"completionTime\" : \"1 hour ago\",\n  \"status\" : \"Completed\"\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/report"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:report xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:description>Cluster Capacity Risk Forecast Report</ops:description>\n    <ops:subject></ops:subject>\n    <ops:owner>admin</ops:owner>\n    <ops:completionTime>1 hour ago</ops:completionTime>\n    <ops:status>Completed</ops:status>\n</ops:report>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/report"
                }
              }
            },
            "description": "The details of the Report"
          }
        },

        "tags": [
          "Reports"
        ],
        "deprecated": false,
        "description": "Get the detail of a Report given its identifier",
        "operationId": "getReportUsingGET",
        "summary": "Get the detail of a Report given its identifier"
      }
    },
    "/api/reports/{id}/download": {
      "get": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "The format of the Report",
            "in": "query",
            "name": "format",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Identifier of the Report",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "format": "byte",
                  "type": "string"
                }
              },
              "application/pdf": {
                "schema": {
                  "format": "byte",
                  "type": "string"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "format": "byte",
                  "type": "string"
                }
              },
              "text/csv": {
                "schema": {
                  "format": "byte",
                  "type": "string"
                }
              }
            },
            "description": "The link to download the report"
          }
        },

        "tags": [
          "Reports"
        ],
        "deprecated": false,
        "description": "The supported formats for Reports are PDF, CSV. If the format is not\nspecified the downloaded report will be in PDF format.",
        "operationId": "downloadReportUsingGET",
        "summary": "Download the Report given its identifier"
      }
    },
    "/api/resources": {
      "get": {
        "parameters": [
          {
            "description": "Array of uuids that identify adapter instances",
            "explode": true,
            "in": "query",
            "name": "adapterInstanceId",
            "required": false,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Array of Adapter Kind keys",
            "explode": true,
            "in": "query",
            "name": "adapterKind",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Array of Collector Identifiers",
            "explode": true,
            "in": "query",
            "name": "collectorId",
            "required": false,
            "schema": {
              "items": {
                "format": "int32",
                "type": "integer"
              },
              "type": "array"
            }
          },
          {
            "description": "Array of Collector names",
            "explode": true,
            "in": "query",
            "name": "collectorName",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Array of CredentialIDs",
            "explode": true,
            "in": "query",
            "name": "credentialId",
            "required": false,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "None null value specifies to include related resource ids of given relationship type in resource result.\nUses the RelationshipType.representation value.\n",
            "in": "query",
            "name": "includeRelated",
            "required": false,
            "schema": {
              "enum": [
                "PARENT",
                "CHILD",
                "CONTAINS",
                "CONTAINED_BY",
                "REFERENCES",
                "REFERENCED_BY",
                "USES",
                "USED_BY",
                "SELF",
                "DESCENDANT",
                "ANCESTOR",
                "TST",
                "ALL"
              ],
              "type": "string"
            }
          },
          {
            "description": "Array of {@link UUID} that identify Maintenance Schedules.\nSince vROps 6.1.0 release onwards, we don't support search\nand look up of Resources using Maintenance Schedules' identifiers.",
            "explode": true,
            "in": "query",
            "name": "maintenanceScheduleId",
            "required": false,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Array of resource names to query for.\n<b>NOTE:</b> Currently, only single element supported",
            "explode": true,
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "explode": true,
            "in": "query",
            "name": "others",
            "required": false,
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          {
            "description": "Page number from which data needs to be displayed (0-based)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Expected number of entries per page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Array of UUID of object that are the parent resource in a parent child relationship",
            "explode": true,
            "in": "query",
            "name": "parentId",
            "required": false,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Name of property. Query only supports filtering for a single property.",
            "in": "query",
            "name": "propertyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Value of property. Omitting the property value will check for existence\nof the property name on the resource.\n<b>NOTE:</b> Use 'propertyConditions' to specify lookup of Resource using multiple properties.",
            "in": "query",
            "name": "propertyValue",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return resources created after the specified value. Value is the number of seconds since Midnight January 1, 1970 GMT.",
            "in": "query",
            "name": "recentlyAdded",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Array of resource names in java regex format.\n<b>NOTE:</b> <i>regex</i> and <i>name</i> are mutually exclusive. If both are specified, <i>name</i> is given preference.",
            "explode": true,
            "in": "query",
            "name": "regex",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Array of resource health",
            "explode": true,
            "in": "query",
            "name": "resourceHealth",
            "required": false,
            "schema": {
              "enum": [
                "GREEN",
                "YELLOW",
                "ORANGE",
                "RED",
                "GREY"
              ],
              "items": {
                "enum": [
                  "GREEN",
                  "YELLOW",
                  "ORANGE",
                  "RED",
                  "GREY"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Array of Resource Identifiers",
            "explode": true,
            "in": "query",
            "name": "resourceId",
            "required": false,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Array of Resource Kind keys",
            "explode": true,
            "in": "query",
            "name": "resourceKind",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Array of resource states",
            "explode": true,
            "in": "query",
            "name": "resourceState",
            "required": false,
            "schema": {
              "enum": [
                "STOPPED",
                "STARTING",
                "STARTED",
                "STOPPING",
                "UPDATING",
                "FAILED",
                "MAINTAINED",
                "MAINTAINED_MANUAL",
                "REMOVING",
                "NOT_EXISTING",
                "NONE",
                "UNKNOWN"
              ],
              "items": {
                "enum": [
                  "STOPPED",
                  "STARTING",
                  "STARTED",
                  "STOPPING",
                  "UPDATING",
                  "FAILED",
                  "MAINTAINED",
                  "MAINTAINED_MANUAL",
                  "REMOVING",
                  "NOT_EXISTING",
                  "NONE",
                  "UNKNOWN"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Array of resource data collection stats",
            "explode": true,
            "in": "query",
            "name": "resourceStatus",
            "required": false,
            "schema": {
              "enum": [
                "NONE",
                "ERROR",
                "UNKNOWN",
                "DOWN",
                "DATA_RECEIVING",
                "OLD_DATA_RECEIVING",
                "NO_DATA_RECEIVING",
                "NO_PARENT_MONITORING",
                "COLLECTOR_DOWN"
              ],
              "items": {
                "enum": [
                  "NONE",
                  "ERROR",
                  "UNKNOWN",
                  "DOWN",
                  "DATA_RECEIVING",
                  "OLD_DATA_RECEIVING",
                  "NO_DATA_RECEIVING",
                  "NO_PARENT_MONITORING",
                  "COLLECTOR_DOWN"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Name of resource StatKey to validate value is within a range.\nUse with statKeyLowerBound, statKeyUpperBound and statKeyInclusive to create comparison conditions\n<b>NOTE:</b> Use 'statConditions' to specify lookup of Resource using multiple stat keys.",
            "in": "query",
            "name": "statKey",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filtering by statKey values is inclusive or exclusive of boundary values.  Defaults to true",
            "in": "query",
            "name": "statKeyInclusive",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "StatKey value matching range lower bound",
            "in": "query",
            "name": "statKeyLowerBound",
            "required": false,
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "StatKey value matching range upper bound",
            "in": "query",
            "name": "statKeyUpperBound",
            "required": false,
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resources"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resources"
                }
              }
            },
            "description": "The Collection of Resources matching the specified query parameters"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "Get a listing of resources based on the query spec specified",
        "operationId": "getResourcesUsingGET",
        "summary": "Get a listing of resources based on the query spec specified"
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resource"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resource"
                }
              }
            },
            "description": "The updated Resource object"
          },
          "404": {
            "description": "No Resource is found in the system corresponding to the identifier in the Request Body"
          },
          "500": {
            "description": "The ResourceKey of the Resource is missing the uniquely identifying and required Resource Identifiers"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "<p>\nImplementation Notes: <br/>\n<ul>\n<li>When updating a Resource, if the Resource Identifiers that are unique and required\nare not specified, the API would return an error with HTTP status code of 500\nand an error message indicating the set of missing Resource Identifiers.\n<li>\nWhen updating a Resource, if the Resource Identifiers that are unique but not required\nare not specified, the Resource is updated where the uniquely identifying Resource Identifiers\nthat were not specified will have their value as an empty string.\n</ul>",
        "operationId": "updateResourceUsingPUT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/resource"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/resource"
              }
            }
          },
          "description": "The Resource object that needs to be updated",
          "required": true
        },
        "summary": "Update a Resource in the system"
      }
    },
    "/api/resources/adapterkinds/{adapterKindKey}": {
      "post": {
        "parameters": [
          {
            "description": "The adapter kind key",
            "in": "path",
            "name": "adapterKindKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"creationTime\" : 1689236478588,\n  \"resourceKey\" : {\n    \"name\" : \"VM1\",\n    \"adapterKindKey\" : \"VMWARE\",\n    \"resourceKindKey\" : \"VirtualMachine\",\n    \"resourceIdentifiers\" : [ {\n      \"identifierType\" : {\n        \"name\" : \"VMEntityObjectID\",\n        \"dataType\" : \"STRING\",\n        \"isPartOfUniqueness\" : true\n      },\n      \"value\" : \"vm-123\"\n    }, {\n      \"identifierType\" : {\n        \"name\" : \"VMEntityVCID\",\n        \"dataType\" : \"STRING\",\n        \"isPartOfUniqueness\" : true\n      },\n      \"value\" : \"CBAD174A-622E-4650-805A-064F824FFA76\"\n    }, {\n      \"identifierType\" : {\n        \"name\" : \"VMEntityName\",\n        \"dataType\" : \"STRING\",\n        \"isPartOfUniqueness\" : true\n      },\n      \"value\" : \"VM1\"\n    } ]\n  },\n  \"credentialInstanceId\" : \"51f8f60d-4a39-4839-9924-698d022e2e10\",\n  \"dtEnabled\" : true,\n  \"badges\" : [ ],\n  \"identifier\" : \"f7843d9a-a133-413c-815c-ff0f56c352de\"\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resource"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:resource creationTime=\"1689236478588\" identifier=\"bcc259b2-2a58-4b60-99e4-fa61add7280c\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:resourceKey>\n        <ops:name>VM1</ops:name>\n        <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n        <ops:resourceKindKey>VirtualMachine</ops:resourceKindKey>\n        <ops:resourceIdentifiers>\n            <ops:resourceIdentifier>\n                <ops:identifierType name=\"VMEntityObjectID\" dataType=\"STRING\" isPartOfUniqueness=\"true\"/>\n                <ops:value>vm-123</ops:value>\n            </ops:resourceIdentifier>\n            <ops:resourceIdentifier>\n                <ops:identifierType name=\"VMEntityVCID\" dataType=\"STRING\" isPartOfUniqueness=\"true\"/>\n                <ops:value>CBAD174A-622E-4650-805A-064F824FFA76</ops:value>\n            </ops:resourceIdentifier>\n            <ops:resourceIdentifier>\n                <ops:identifierType name=\"VMEntityName\" dataType=\"STRING\" isPartOfUniqueness=\"true\"/>\n                <ops:value>VM1</ops:value>\n            </ops:resourceIdentifier>\n        </ops:resourceIdentifiers>\n    </ops:resourceKey>\n    <ops:credentialInstanceId>51f8f60d-4a39-4839-9924-698d022e2e10</ops:credentialInstanceId>\n    <ops:resourceStatusStates/>\n    <ops:dtEnabled>true</ops:dtEnabled>\n    <ops:badges/>\n    <ops:relatedResources/>\n</ops:resource>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resource"
                }
              }
            },
            "description": "The created Resource"
          },
          "500": {
            "description": "The 'Push' adapter kind specified already exists in the system and doesn't correspond to an Adapter Kind that is of <i>OPENAPI</i> type"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "This adapter kind (referred to as 'Push' adapter kind) will be created if it does not\nexist in the system and an instance of it will be associated with the Resource being created.\nThis adapter kind if it already exists must of <i>OPENAPI</i> adapter kind type.\nThe API will also create the missing Adapter Kind and Resource Kind\ncontained within the ResourceKey of the Resource if they do not exist.\n<p>\nAdditional implementation notes:\n<ul>\n<li>When creating a Resource, if the Resource Identifiers that are unique and required\nare not specified, the API would return an error with HTTP status code of 500\nand an error message indicating the set of missing Resource Identifiers.\n<li>\nWhen creating a Resource, if the Resource Identifiers that are unique but not required\nare not specified, the Resource is created where the uniquely identifying Resource Identifiers\nthat were not specified will have their value as an empty string.\n</ul>",
        "operationId": "createResourceUsingAdapterKindUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/resource"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/resource"
              }
            }
          },
          "description": "The request object that contains info necessary to create a new resource",
          "required": true
        },
        "summary": "Create a new Resource in the system associated with the specified adapter kind"
      }
    },
    "/api/resources/adapters/{adapterInstanceId}": {
      "post": {
        "parameters": [
          {
            "description": "The adapter instance id",
            "in": "path",
            "name": "adapterInstanceId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"creationTime\" : 1689236478522,\n  \"resourceKey\" : {\n    \"name\" : \"VM1\",\n    \"adapterKindKey\" : \"VMWARE\",\n    \"resourceKindKey\" : \"VirtualMachine\",\n    \"resourceIdentifiers\" : [ {\n      \"identifierType\" : {\n        \"name\" : \"VMEntityObjectID\",\n        \"dataType\" : \"STRING\",\n        \"isPartOfUniqueness\" : true\n      },\n      \"value\" : \"vm-123\"\n    }, {\n      \"identifierType\" : {\n        \"name\" : \"VMEntityVCID\",\n        \"dataType\" : \"STRING\",\n        \"isPartOfUniqueness\" : true\n      },\n      \"value\" : \"CBAD174A-622E-4650-805A-064F824FFA76\"\n    }, {\n      \"identifierType\" : {\n        \"name\" : \"VMEntityName\",\n        \"dataType\" : \"STRING\",\n        \"isPartOfUniqueness\" : true\n      },\n      \"value\" : \"VM1\"\n    } ]\n  },\n  \"credentialInstanceId\" : \"51f8f60d-4a39-4839-9924-698d022e2e10\",\n  \"dtEnabled\" : true,\n  \"badges\" : [ ],\n  \"identifier\" : \"031e6323-ae80-4e05-9e46-ce5ab23ecba2\"\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resource"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:resource creationTime=\"1689236478522\" identifier=\"25867928-d783-4699-9ab6-ec16e560260d\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:resourceKey>\n        <ops:name>VM1</ops:name>\n        <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n        <ops:resourceKindKey>VirtualMachine</ops:resourceKindKey>\n        <ops:resourceIdentifiers>\n            <ops:resourceIdentifier>\n                <ops:identifierType name=\"VMEntityObjectID\" dataType=\"STRING\" isPartOfUniqueness=\"true\"/>\n                <ops:value>vm-123</ops:value>\n            </ops:resourceIdentifier>\n            <ops:resourceIdentifier>\n                <ops:identifierType name=\"VMEntityVCID\" dataType=\"STRING\" isPartOfUniqueness=\"true\"/>\n                <ops:value>CBAD174A-622E-4650-805A-064F824FFA76</ops:value>\n            </ops:resourceIdentifier>\n            <ops:resourceIdentifier>\n                <ops:identifierType name=\"VMEntityName\" dataType=\"STRING\" isPartOfUniqueness=\"true\"/>\n                <ops:value>VM1</ops:value>\n            </ops:resourceIdentifier>\n        </ops:resourceIdentifiers>\n    </ops:resourceKey>\n    <ops:credentialInstanceId>51f8f60d-4a39-4839-9924-698d022e2e10</ops:credentialInstanceId>\n    <ops:resourceStatusStates/>\n    <ops:dtEnabled>true</ops:dtEnabled>\n    <ops:badges/>\n    <ops:relatedResources/>\n</ops:resource>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resource"
                }
              }
            },
            "description": "The created Resource"
          },
          "404": {
            "description": "No Adapter Instance is found in the system corresponding to the Path Parameter that was specified"
          },
          "500": {
            "description": "The ResourceKey of the Resource is missing the uniquely identifying and required Resource Identifiers"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "The API will create the missing Adapter Kind and Resource Kind\ncontained within the ResourceKey of the Resource if they do not exist.\nThe API will return an error if the adapter instance specified does not exist.\nAdditional implementation notes: \n<ul>\n<li>When creating a Resource, if the Resource Identifiers that are unique and required\nare not specified, the API would return an error with HTTP status code of 500\nand an error message indicating the set of missing Resource Identifiers.\n<li>\nWhen creating a Resource, if the Resource Identifiers that are unique but not required\nare not specified, the Resource is created where the uniquely identifying Resource Identifiers\nthat were not specified will have their value as an empty string.\n</ul>",
        "operationId": "createResourceUsingAdapterInstanceUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/resource"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/resource"
              }
            }
          },
          "description": "The request object that contains info necessary to create a new resource",
          "required": true
        },
        "summary": "Create a new Resource in the system associated with an existing adapter instance"
      }
    },
    "/api/resources/bulk": {
      "delete": {
        "responses": {
          "204": {
            "description": "If there is no error in starting the deletion of Resource(s)"
          },
          "500": {
            "description": "If there is any error in starting the deletion of Resource(s)"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "<b>NOTE: </b> Deletion of Resources is <em>not synchronous</em>. As a result, \nthe delete operation may not happen immediately. Furthermore, there is no way \nto track the status of the deletion operation. It is recommended to query back\nthe system with the resource identifiers and ensure that the system returns a \n404 error.",
        "operationId": "deleteResourcesUsingDELETE",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/uuid-values"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/uuid-values"
              }
            }
          },
          "description": "Identifiers of Resources to delete",
          "required": true
        },
        "summary": "Delete multiple Resources"
      }
    },
    "/api/resources/bulk/relationships": {
      "post": {
        "parameters": [
          {
            "description": "Page number from which data needs to be displayed (0-based)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Expected number of entries per page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"relationshipType\" : \"DESCENDANT\",\n  \"resourcesRelations\" : [ {\n    \"resource\" : {\n      \"creationTime\" : 1689236475209,\n      \"resourceKey\" : {\n        \"name\" : \"VM1\",\n        \"adapterKindKey\" : \"VMWARE\",\n        \"resourceKindKey\" : \"VirtualMachine\",\n        \"resourceIdentifiers\" : [ {\n          \"identifierType\" : {\n            \"name\" : \"VMEntityObjectID\",\n            \"dataType\" : \"STRING\",\n            \"isPartOfUniqueness\" : true\n          },\n          \"value\" : \"vm-123\"\n        }, {\n          \"identifierType\" : {\n            \"name\" : \"VMEntityVCID\",\n            \"dataType\" : \"STRING\",\n            \"isPartOfUniqueness\" : true\n          },\n          \"value\" : \"CBAD174A-622E-4650-805A-064F824FFA76\"\n        }, {\n          \"identifierType\" : {\n            \"name\" : \"VMEntityName\",\n            \"dataType\" : \"STRING\",\n            \"isPartOfUniqueness\" : true\n          },\n          \"value\" : \"VM1\"\n        } ]\n      },\n      \"credentialInstanceId\" : \"51f8f60d-4a39-4839-9924-698d022e2e10\",\n      \"dtEnabled\" : true,\n      \"badges\" : [ ],\n      \"identifier\" : \"0ec2b617-b00a-4060-a0dc-07070ce5e4a7\"\n    },\n    \"relatedResources\" : [ \"5897a25b-f24e-4300-b61e-5dcecc2858c9\", \"47e7ed9e-6152-4763-8e4c-5a8e33402520\" ]\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resources-relation"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:resources-relation relationshipType=\"DESCENDANT\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:resourcesRelations>\n        <ops:resourceRelations>\n            <ops:resource creationTime=\"1689236475238\" identifier=\"818bf873-aa3a-4a4d-b74c-7a97ac5af74c\">\n                <ops:resourceKey>\n                    <ops:name>VM1</ops:name>\n                    <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n                    <ops:resourceKindKey>VirtualMachine</ops:resourceKindKey>\n                    <ops:resourceIdentifiers>\n                        <ops:resourceIdentifier>\n                            <ops:identifierType name=\"VMEntityObjectID\" dataType=\"STRING\" isPartOfUniqueness=\"true\"/>\n                            <ops:value>vm-123</ops:value>\n                        </ops:resourceIdentifier>\n                        <ops:resourceIdentifier>\n                            <ops:identifierType name=\"VMEntityVCID\" dataType=\"STRING\" isPartOfUniqueness=\"true\"/>\n                            <ops:value>CBAD174A-622E-4650-805A-064F824FFA76</ops:value>\n                        </ops:resourceIdentifier>\n                        <ops:resourceIdentifier>\n                            <ops:identifierType name=\"VMEntityName\" dataType=\"STRING\" isPartOfUniqueness=\"true\"/>\n                            <ops:value>VM1</ops:value>\n                        </ops:resourceIdentifier>\n                    </ops:resourceIdentifiers>\n                </ops:resourceKey>\n                <ops:credentialInstanceId>51f8f60d-4a39-4839-9924-698d022e2e10</ops:credentialInstanceId>\n                <ops:resourceStatusStates/>\n                <ops:dtEnabled>true</ops:dtEnabled>\n                <ops:badges/>\n                <ops:relatedResources/>\n            </ops:resource>\n            <ops:relatedResources>d268c678-9ff7-46cc-90e6-2a2cf68ca0a1 02692699-c5d4-416f-9313-330a2e378568</ops:relatedResources>\n        </ops:resourceRelations>\n    </ops:resourcesRelations>\n</ops:resources-relation>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resources-relation"
                }
              }
            },
            "description": "The Collection of Resources related to given set of resources and matching the query Spec"
          },
          "404": {
            "description": "If could find none of the resources from ResourceRelationshipsQuery.resourceIds"
          },
          "500": {
            "description": "If there is an error during the query"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "Get resources that satisfy filtering criteria and are related to specified listof resources with the given relationship type",
        "operationId": "getResourcesRelationshipsUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/resource-relationships-query"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/resource-relationships-query"
              }
            }
          },
          "description": "Query spec that encapsulates various filtering criteria for related resources look up",
          "required": true
        },
        "summary": "Get resources that satisfy filtering criteria and are related to specified list of resources with the given relationship type"
      }
    },
    "/api/resources/groups": {
      "get": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Collection of group identifiers",
            "explode": true,
            "in": "query",
            "name": "groupId",
            "required": false,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "Flag that controls the retrieval of policy identifier applied to group",
            "example": false,
            "in": "query",
            "name": "includePolicy",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"groups\" : [ {\n    \"id\" : \"51f7088b-9808-4569-ba02-0a3cf640f856\",\n    \"resourceKey\" : {\n      \"name\" : \"Sample Custom Group with Metric Key Condition\",\n      \"adapterKindKey\" : \"Container\",\n      \"resourceKindKey\" : \"Environment\"\n    },\n    \"autoResolveMembership\" : false,\n    \"membershipDefinition\" : {\n      \"rules\" : [ {\n        \"resourceKindKey\" : {\n          \"resourceKind\" : \"VirtualMachine\",\n          \"adapterKind\" : \"VMWARE\"\n        },\n        \"statConditionRules\" : [ {\n          \"key\" : \"cpu|usage_average\",\n          \"doubleValue\" : 85.0,\n          \"compareOperator\" : \"GT\"\n        } ]\n      } ]\n    }\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/cgroups"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:cgroups xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:custom-group id=\"b579d597-11ba-463b-b741-d65c0e3d62c1\" autoResolveMembership=\"false\">\n        <ops:resourceKey>\n            <ops:name>Sample Custom Group with Metric Key Condition</ops:name>\n            <ops:adapterKindKey>Container</ops:adapterKindKey>\n            <ops:resourceKindKey>Environment</ops:resourceKindKey>\n        </ops:resourceKey>\n        <ops:membershipDefinition>\n            <ops:includedResources></ops:includedResources>\n            <ops:excludedResources></ops:excludedResources>\n            <ops:custom-group-properties/>\n            <ops:membership-rule-group>\n                <ops:resourceKindKey>\n                    <ops:resourceKind>VirtualMachine</ops:resourceKind>\n                    <ops:adapterKind>VMWARE</ops:adapterKind>\n                </ops:resourceKindKey>\n                <ops:statConditionRules key=\"cpu|usage_average\">\n                    <ops:doubleValue>85.0</ops:doubleValue>\n                    <ops:compareOperator>GT</ops:compareOperator>\n                </ops:statConditionRules>\n            </ops:membership-rule-group>\n        </ops:membershipDefinition>\n    </ops:custom-group>\n</ops:cgroups>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/cgroups"
                }
              }
            },
            "description": "Collection of custom groups"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "Get all custom groups with or without policy",
        "operationId": "getCustomGroupsUsingGET",
        "summary": "Get all custom groups"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/custom-group"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/custom-group"
                }
              }
            },
            "description": "The newly created custom group"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "See different request examples with Metric Key, Property Key, Relationship and Resource Name Condition.",
        "operationId": "createCustomGroupUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/custom-group"
        },
        "summary": "Create a new custom group definition"
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/custom-group"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/custom-group"
                }
              }
            },
            "description": "The updated custom group"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "<b>NOTE: </b> Method is enabled for user groups only",
        "operationId": "modifyCustomGroupUsingPUT",
        "requestBody": {
          "$ref": "#/components/requestBodies/custom-group"
        },
        "summary": "Modify an existing custom group definition"
      }
    },
    "/api/resources/groups/types": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"groupTypes\" : [ {\n    \"name\" : \"Department\",\n    \"key\" : \"Department\"\n  }, {\n    \"name\" : \"Environment\",\n    \"key\" : \"Environment\"\n  }, {\n    \"name\" : \"Security Zone\",\n    \"key\" : \"Security Zone\"\n  }, {\n    \"name\" : \"Universe\",\n    \"key\" : \"Universe\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/group-types"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:group-types xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:group-type name=\"Department\" key=\"Department\"/>\n    <ops:group-type name=\"Environment\" key=\"Environment\"/>\n    <ops:group-type name=\"Security Zone\" key=\"Security Zone\"/>\n    <ops:group-type name=\"Universe\" key=\"Universe\"/>\n</ops:group-types>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/group-types"
                }
              }
            },
            "description": "Collection of group types"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "Get Group Types",
        "operationId": "getGroupTypesUsingGET",
        "summary": "Get group types"
      },
      "post": {
        "responses": {
          "201": {
            "description": "The group type is added successfully"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "Add a new group type\n<b>NOTE: </b> The value of key must either not be sent or must match with the value of name.",
        "operationId": "addGroupTypeUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/group-type"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/group-type"
              }
            }
          },
          "description": "The Group type to create",
          "required": true
        },
        "summary": "Add a new group type"
      }
    },
    "/api/resources/groups/types/{key}": {
      "delete": {
        "parameters": [
          {
            "description": "Key of the group type to delete",
            "in": "path",
            "name": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The group type is deleted successfully"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "Delete the group type",
        "operationId": "deleteGroupTypeUsingDELETE",
        "summary": "Delete the group type"
      }
    },
    "/api/resources/groups/{groupId}": {
      "delete": {
        "parameters": [
          {
            "description": "The Identifier of the group",
            "in": "path",
            "name": "groupId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The custom group is deleted successfully"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "<b>NOTE: </b> Method is enabled for user groups only",
        "operationId": "deleteCustomGroupUsingDELETE",
        "summary": "Delete a custom group"
      },
      "get": {
        "parameters": [
          {
            "description": "Group identifier",
            "in": "path",
            "name": "groupId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "Flag that controls the retrieval of policy identifier applied to group",
            "example": false,
            "in": "query",
            "name": "includePolicy",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"938d037b-8a0b-4afe-92f5-c180841be171\",\n  \"resourceKey\" : {\n    \"name\" : \"Sample Custom Group with Metric Key Condition\",\n    \"adapterKindKey\" : \"Container\",\n    \"resourceKindKey\" : \"Environment\"\n  },\n  \"autoResolveMembership\" : false,\n  \"membershipDefinition\" : {\n    \"rules\" : [ {\n      \"resourceKindKey\" : {\n        \"resourceKind\" : \"VirtualMachine\",\n        \"adapterKind\" : \"VMWARE\"\n      },\n      \"statConditionRules\" : [ {\n        \"key\" : \"cpu|usage_average\",\n        \"doubleValue\" : 85.0,\n        \"compareOperator\" : \"GT\"\n      } ]\n    } ]\n  }\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/custom-group"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:custom-group id=\"caa8ade7-ea7f-4c82-a8fe-2b211e16452c\" autoResolveMembership=\"false\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:resourceKey>\n        <ops:name>Sample Custom Group with Metric Key Condition</ops:name>\n        <ops:adapterKindKey>Container</ops:adapterKindKey>\n        <ops:resourceKindKey>Environment</ops:resourceKindKey>\n    </ops:resourceKey>\n    <ops:membershipDefinition>\n        <ops:includedResources></ops:includedResources>\n        <ops:excludedResources></ops:excludedResources>\n        <ops:custom-group-properties/>\n        <ops:membership-rule-group>\n            <ops:resourceKindKey>\n                <ops:resourceKind>VirtualMachine</ops:resourceKind>\n                <ops:adapterKind>VMWARE</ops:adapterKind>\n            </ops:resourceKindKey>\n            <ops:statConditionRules key=\"cpu|usage_average\">\n                <ops:doubleValue>85.0</ops:doubleValue>\n                <ops:compareOperator>GT</ops:compareOperator>\n            </ops:statConditionRules>\n        </ops:membership-rule-group>\n    </ops:membershipDefinition>\n</ops:custom-group>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/custom-group"
                }
              }
            },
            "description": "The custom group with sought identifier"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "Get a custom group with or without policy",
        "operationId": "getCustomGroupUsingGET",
        "summary": "Get custom group"
      }
    },
    "/api/resources/groups/{groupId}/members": {
      "get": {
        "parameters": [
          {
            "description": "Group identifier",
            "in": "path",
            "name": "groupId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"resourceList\" : [ {\n    \"description\" : \"Description of this virtual machine\",\n    \"creationTime\" : 1544433248,\n    \"resourceKey\" : {\n      \"name\" : \"VM1\",\n      \"adapterKindKey\" : \"VMWARE\",\n      \"resourceKindKey\" : \"VirtualMachine\",\n      \"resourceIdentifiers\" : [ {\n        \"identifierType\" : {\n          \"name\" : \"VMEntityObjectID\",\n          \"dataType\" : \"STRING\",\n          \"isPartOfUniqueness\" : true\n        },\n        \"value\" : \"vm-123\"\n      }, {\n        \"identifierType\" : {\n          \"name\" : \"VMEntityVCID\",\n          \"dataType\" : \"STRING\",\n          \"isPartOfUniqueness\" : true\n        },\n        \"value\" : \"79caa569-8157-40f1-8a99-0b0693431ea8\"\n      }, {\n        \"identifierType\" : {\n          \"name\" : \"VMEntityName\",\n          \"dataType\" : \"STRING\",\n          \"isPartOfUniqueness\" : true\n        },\n        \"value\" : \"VM1\"\n      } ]\n    },\n    \"credentialInstanceId\" : \"3c35fad4-deee-42c7-87a1-062dc9ae7dcf\",\n    \"dtEnabled\" : true,\n    \"monitoringInterval\" : 5,\n    \"badges\" : [ ],\n    \"identifier\" : \"741577a2-8558-4052-b24f-603d679d7960\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resources"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:resources xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:resource creationTime=\"1544433248\" identifier=\"d2952c84-fd0b-44e9-b1f1-218c0c7ae669\">\n        <ops:description>Description of this virtual machine</ops:description>\n        <ops:resourceKey>\n            <ops:name>VM1</ops:name>\n            <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n            <ops:resourceKindKey>VirtualMachine</ops:resourceKindKey>\n            <ops:resourceIdentifiers>\n                <ops:resourceIdentifier>\n                    <ops:identifierType name=\"VMEntityObjectID\" dataType=\"STRING\" isPartOfUniqueness=\"true\"/>\n                    <ops:value>vm-123</ops:value>\n                </ops:resourceIdentifier>\n                <ops:resourceIdentifier>\n                    <ops:identifierType name=\"VMEntityVCID\" dataType=\"STRING\" isPartOfUniqueness=\"true\"/>\n                    <ops:value>5d7e1b04-d5cc-4b06-bad3-91ba20d9fa35</ops:value>\n                </ops:resourceIdentifier>\n                <ops:resourceIdentifier>\n                    <ops:identifierType name=\"VMEntityName\" dataType=\"STRING\" isPartOfUniqueness=\"true\"/>\n                    <ops:value>VM1</ops:value>\n                </ops:resourceIdentifier>\n            </ops:resourceIdentifiers>\n        </ops:resourceKey>\n        <ops:credentialInstanceId>dbb37511-7a3d-4c09-ad55-85cd12756691</ops:credentialInstanceId>\n        <ops:resourceStatusStates/>\n        <ops:dtEnabled>true</ops:dtEnabled>\n        <ops:monitoringInterval>5</ops:monitoringInterval>\n        <ops:badges/>\n        <ops:relatedResources/>\n    </ops:resource>\n</ops:resources>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resources"
                }
              }
            },
            "description": "Collection of the member resources of the group"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "Get members of the specified group",
        "operationId": "getCustomGroupMembersUsingGET",
        "summary": "Get members of the group"
      }
    },
    "/api/resources/maintained": {
      "delete": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "A collection of Resource identifiers",
            "explode": true,
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The resource is brought out from maintenance successfully"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "Bring the specified set of Resources out of Maintenance manually",
        "operationId": "unmarkResourcesAsBeingMaintainedUsingDELETE",
        "summary": "Bring the specified set of Resources out of Maintenance manually"
      },
      "put": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "The Duration for which this resource will be in maintenance (In Minutes)",
            "in": "query",
            "name": "duration",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "The End time of the maintenance window as a long value (Epoch time)",
            "in": "query",
            "name": "end",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "The Resource identifiers",
            "explode": true,
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The resource is put in maintenance successfully"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "The Resources can end up in two maintenance states - <i>MAINTAINED</i> OR <i>MAINTAINED_MANUAL</i> -\ndepending upon the inputs specified.<br/>\n<ul>\n<li>If duration/end time is specified, the Resources will be placed in <i>MAINTAINED</i>\nstate and after the duration/end time expires, the state of the Resources would be automatically\nset to the state they were in before entering the maintenance window.\n<li>If duration/end time is not specified, the Resources will be placed in <i>MAINTAINED_MANUAL</i> state.\nCallers have to execute <code>DELETE /suite-api/api/resources/maintained?id=ID1&id=ID2</code> API\nto set the Resources back to whatever state they were in.\n<li>If both duration and end time are specified, end time takes preference over duration.\n</ul>",
        "operationId": "markResourcesAsBeingMaintainedUsingPUT",
        "summary": "Put all the specified Resource in Maintenance"
      }
    },
    "/api/resources/monitoringstate/start": {
      "put": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Collection of adapter instance identifiers that should start monitoring the Resources",
            "explode": true,
            "in": "query",
            "name": "adapterId",
            "required": false,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "The Resource identifiers that need to be monitored",
            "explode": true,
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The resource monitoring is started successfully"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "The query parameter <i>id</i> is for specifying the set of Resources that should\nbe monitored.\nThe optional query parameter <i>adapterId</i> determines which of the\nAdapters need to be informed to start monitoring the Resources. If this is\nnot specified, then all of the Adapters will start monitoring the specified Resources.",
        "operationId": "startMonitoringResourcesUsingPUT",
        "summary": "Inform one or more or all Adapters to start monitoring a Collection of Resources"
      }
    },
    "/api/resources/monitoringstate/stop": {
      "put": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Collection of adapter instance identifiers that should stop monitoring the Resources",
            "explode": true,
            "in": "query",
            "name": "adapterId",
            "required": false,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "The Resource identifiers that no longer need to be monitored",
            "explode": true,
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The resource monitoring is stopped successfully"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "The query parameter <i>id</i> is for specifying the set of Resources that should\nno longer be monitored.\nThe optional query parameter <i>adapterId</i> determines which of the\nAdapters need to be informed to stop monitoring the Resources. If this is\nnot specified, then all of the Adapters will stop monitoring the specified Resources.",
        "operationId": "stopMonitoringResourcesUsingPUT",
        "summary": "Inform one or more or all Adapters to stop monitoring a Collection of Resources"
      }
    },
    "/api/resources/profiles": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"profiles\" : [ {\n    \"id\" : \"203f2bc4-a0ff-4715-9bb5-79de9218cb1e\",\n    \"name\" : \"Sample Custom Profile\",\n    \"description\" : \"Description of Custom Profile\",\n    \"objectType\" : {\n      \"adapterKind\" : \"VMWARE\",\n      \"resourceKind\" : \"VirtualMachine\"\n    },\n    \"custom-profile-metrics\" : [ {\n      \"metric\" : \"cpu\",\n      \"value\" : 117.49,\n      \"unit\" : \"mhz\"\n    }, {\n      \"metric\" : \"mem-alloc\",\n      \"value\" : 9999.0,\n      \"unit\" : \"kb\"\n    } ]\n  }, {\n    \"id\" : \"e7b44d0f-2dfb-4345-9116-d3eda4093efb\",\n    \"name\" : \"Sample Custom Profile\",\n    \"description\" : \"Description of Custom Profile\",\n    \"objectType\" : {\n      \"adapterKind\" : \"VMWARE\",\n      \"resourceKind\" : \"VirtualMachine\"\n    },\n    \"custom-profile-metrics\" : [ {\n      \"metric\" : \"cpu\",\n      \"value\" : 44.44,\n      \"unit\" : \"mhz\"\n    }, {\n      \"metric\" : \"mem-alloc\",\n      \"value\" : 88.88,\n      \"unit\" : \"kb\"\n    } ]\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/custom-profiles"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:custom-profiles xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:custom-profile id=\"4ec8525d-6d20-4713-b455-e15ee04f03b3\">\n        <ops:name>Sample Custom Profile</ops:name>\n        <ops:description>Description of Custom Profile</ops:description>\n        <ops:objectType>\n            <ops:adapterKind>VMWARE</ops:adapterKind>\n            <ops:resourceKind>VirtualMachine</ops:resourceKind>\n        </ops:objectType>\n        <ops:custom-profile-metrics>\n            <ops:profile-metric>\n                <ops:metric>cpu</ops:metric>\n                <ops:value>117.49</ops:value>\n                <ops:unit>mhz</ops:unit>\n            </ops:profile-metric>\n            <ops:profile-metric>\n                <ops:metric>mem-alloc</ops:metric>\n                <ops:value>9999.0</ops:value>\n                <ops:unit>kb</ops:unit>\n            </ops:profile-metric>\n        </ops:custom-profile-metrics>\n    </ops:custom-profile>\n    <ops:custom-profile id=\"c2d46aa0-3f78-4926-8655-a968a9085608\">\n        <ops:name>Sample Custom Profile</ops:name>\n        <ops:description>Description of Custom Profile</ops:description>\n        <ops:objectType>\n            <ops:adapterKind>VMWARE</ops:adapterKind>\n            <ops:resourceKind>VirtualMachine</ops:resourceKind>\n        </ops:objectType>\n        <ops:custom-profile-metrics>\n            <ops:profile-metric>\n                <ops:metric>cpu</ops:metric>\n                <ops:value>44.44</ops:value>\n                <ops:unit>mhz</ops:unit>\n            </ops:profile-metric>\n            <ops:profile-metric>\n                <ops:metric>mem-alloc</ops:metric>\n                <ops:value>88.88</ops:value>\n                <ops:unit>kb</ops:unit>\n            </ops:profile-metric>\n        </ops:custom-profile-metrics>\n    </ops:custom-profile>\n</ops:custom-profiles>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/custom-profiles"
                }
              }
            },
            "description": "The Collection of all custom profiles"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "Get all custom profiles",
        "operationId": "getCustomProfilesUsingGET",
        "summary": "Get all custom profiles"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/custom-profile"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/custom-profile"
                }
              }
            },
            "description": "The newly created custom profile"
          },
          "404": {
            "description": "No Alert with the specified identifier is found"
          },
          "500": {
            "description": "Error occurred while retrieving the Alert with the specified identifier"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "Example: <code>GET /api/alerts/{id}</code>",
        "operationId": "createCustomProfileUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/custom-profile"
        },
        "summary": "Create a new custom profile definition"
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/custom-profile"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/custom-profile"
                }
              }
            },
            "description": "The updated custom profile"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "Modify an existing custom profile definition",
        "operationId": "modifyCustomProfileUsingPUT",
        "requestBody": {
          "$ref": "#/components/requestBodies/custom-profile"
        },
        "summary": "Modify an existing custom profile definition"
      }
    },
    "/api/resources/profiles/{profileId}": {
      "delete": {
        "parameters": [
          {
            "description": "The Identifier of the profile",
            "in": "path",
            "name": "profileId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The custom profile is deleted successfully"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "Delete a custom profile",
        "operationId": "deleteCustomProfileUsingDELETE",
        "summary": "Delete a custom profile"
      },
      "get": {
        "parameters": [
          {
            "description": "The Profile identifier",
            "in": "path",
            "name": "profileId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"c507f3eb-57d1-4acb-886f-2ee4da5b32da\",\n  \"name\" : \"Sample Custom Profile\",\n  \"description\" : \"Description of Custom Profile\",\n  \"objectType\" : {\n    \"adapterKind\" : \"VMWARE\",\n    \"resourceKind\" : \"VirtualMachine\"\n  },\n  \"custom-profile-metrics\" : [ {\n    \"metric\" : \"cpu\",\n    \"value\" : 100.0,\n    \"unit\" : \"mhz\"\n  }, {\n    \"metric\" : \"mem-alloc\",\n    \"value\" : 10000.0,\n    \"unit\" : \"kb\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/custom-profile"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:custom-profile id=\"2fa92e6b-e6e7-4ab7-9387-ddb0eb4c8ffd\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:name>Sample Custom Profile</ops:name>\n    <ops:description>Description of Custom Profile</ops:description>\n    <ops:objectType>\n        <ops:adapterKind>VMWARE</ops:adapterKind>\n        <ops:resourceKind>VirtualMachine</ops:resourceKind>\n    </ops:objectType>\n    <ops:custom-profile-metrics>\n        <ops:profile-metric>\n            <ops:metric>cpu</ops:metric>\n            <ops:value>100.0</ops:value>\n            <ops:unit>mhz</ops:unit>\n        </ops:profile-metric>\n        <ops:profile-metric>\n            <ops:metric>mem-alloc</ops:metric>\n            <ops:value>10000.0</ops:value>\n            <ops:unit>kb</ops:unit>\n        </ops:profile-metric>\n    </ops:custom-profile-metrics>\n</ops:custom-profile>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/custom-profile"
                }
              }
            },
            "description": "The custom profile with sought identifier"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "Get custom profile",
        "operationId": "getCustomProfileUsingGET",
        "summary": "Get custom profile"
      }
    },
    "/api/resources/properties": {
      "get": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "The Collection of the Resource Identifiers",
            "explode": true,
            "in": "query",
            "name": "resourceId",
            "required": true,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"resourcePropertiesList\" : [ {\n    \"resourceId\" : \"7b637f15-7a7c-413c-9a03-ff07a18d8e0c\",\n    \"property\" : [ {\n      \"name\" : \"Key1\",\n      \"value\" : \"Value1\"\n    } ]\n  }, {\n    \"resourceId\" : \"dcda04e2-0edd-4886-a66b-f57b94e64779\",\n    \"property\" : [ {\n      \"name\" : \"Key1\",\n      \"value\" : \"Value1\"\n    } ]\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resource-properties"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:resource-properties xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:resource-property resourceId=\"5a93d2bf-185e-4ebb-bd7b-3702088adbcb\">\n        <ops:property name=\"Key1\">Value1</ops:property>\n    </ops:resource-property>\n    <ops:resource-property resourceId=\"973af464-e64c-456d-a363-a5173f5bbfed\">\n        <ops:property name=\"Key1\">Value1</ops:property>\n    </ops:resource-property>\n</ops:resource-properties>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resource-properties"
                }
              }
            },
            "description": "The Resources, their Properties and current values"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "Get all the Properties and their current (latest) values for the specified Resources",
        "operationId": "getResourcePropertiesListUsingGET",
        "summary": "Get all the Properties and their current (latest) values for the specified Resources"
      },
      "post": {
        "responses": {
          "200": {
            "description": "The properties are added successfully"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "In this case, the adapter instance used for pushing data will default to <i>vRealizeOpsMgrAPI</i>.\nIt is recommended (though not required) to use this API when the resources were created using the API\n<code>POST /api/resources/{id}/adapters/{adapterInstanceId}</code>. Otherwise an additional\nadapter instance might be created.",
        "operationId": "addResourcesPropertiesUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/resources-property-contents"
        },
        "summary": "Add Properties to Resources"
      }
    },
    "/api/resources/properties/adapterkinds/{adapterKind}": {
      "post": {
        "parameters": [
          {
            "description": "The Adapter Kind key of the adapter instance that will push the properties",
            "in": "path",
            "name": "adapterKind",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The properties are added successfully"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "If the adapter kind specified is not present in the system, it will be created dynamically.\nHowever if the adapter kind specified already exists, then it must be of <i>OPENAPI</i> adapter kind type.",
        "operationId": "addResourcesPropertiesUsingAdapterKindUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/resources-property-contents"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/resources-property-contents"
              }
            }
          },
          "description": "The properties for the Resources",
          "required": true
        },
        "summary": "Add Properties to Resources Using Adapter Kind"
      }
    },
    "/api/resources/properties/latest/query": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"values\" : [ {\n    \"resourceId\" : \"d36c5ce1-8bd7-4c3c-9855-6b58e59ef147\",\n    \"property-contents\" : {\n      \"property-content\" : [ {\n        \"statKey\" : \"system|availability\",\n        \"timestamps\" : [ 1119844280663 ],\n        \"values\" : [ \"UP\" ]\n      }, {\n        \"statKey\" : \"config|num|processes\",\n        \"timestamps\" : [ 1119844280663 ],\n        \"data\" : [ 93.0 ]\n      } ]\n    }\n  }, {\n    \"resourceId\" : \"68016f9f-fbad-4901-9173-742d73503d86\",\n    \"property-contents\" : {\n      \"property-content\" : [ {\n        \"statKey\" : \"system|availability\",\n        \"timestamps\" : [ 1119844280663 ],\n        \"values\" : [ \"UP\" ]\n      }, {\n        \"statKey\" : \"config|num|processes\",\n        \"timestamps\" : [ 1119844280663 ],\n        \"data\" : [ 93.0 ]\n      } ]\n    }\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resources-property-contents"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:resources-property-contents xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:resource-property-contents>\n        <ops:resourceId>86019f04-5121-4199-a561-91c843de9b93</ops:resourceId>\n        <ops:property-contents>\n            <ops:property-content statKey=\"system|availability\">\n                <ops:timestamps>1119844280663</ops:timestamps>\n                <ops:values>UP</ops:values>\n            </ops:property-content>\n            <ops:property-content statKey=\"config|num|processes\">\n                <ops:timestamps>1119844280663</ops:timestamps>\n                <ops:data>93.0</ops:data>\n            </ops:property-content>\n        </ops:property-contents>\n    </ops:resource-property-contents>\n    <ops:resource-property-contents>\n        <ops:resourceId>c7145b01-e6ee-4a4e-b235-1c5f987e8bff</ops:resourceId>\n        <ops:property-contents>\n            <ops:property-content statKey=\"system|availability\">\n                <ops:timestamps>1119844280663</ops:timestamps>\n                <ops:values>UP</ops:values>\n            </ops:property-content>\n            <ops:property-content statKey=\"config|num|processes\">\n                <ops:timestamps>1119844280663</ops:timestamps>\n                <ops:data>93.0</ops:data>\n            </ops:property-content>\n        </ops:property-contents>\n    </ops:resource-property-contents>\n</ops:resources-property-contents>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resources-property-contents"
                }
              }
            },
            "description": "The mapping from requested resources to current (latest) values of specified properties"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "Get current (latest) values of requested properties for the specified resources",
        "operationId": "queryLatestPropertiesOfResourcesUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/properties-query"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/properties-query"
              }
            }
          },
          "description": "The query spec",
          "required": true
        },
        "summary": "Get current (latest) values of requested properties for the specified resources"
      }
    },
    "/api/resources/query": {
      "post": {
        "parameters": [
          {
            "description": "Page number from which data needs to be displayed (0-based)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Expected number of entries per page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resources"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resources"
                }
              }
            },
            "description": "The Collection of Resources matching the specified query parameters"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "Gets a listing of resources based on the query spec specified",
        "operationId": "getMatchingResourcesUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/resource-query"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/resource-query"
              }
            }
          },
          "description": "Query spec that encapsulates various filtering criteria for looking up Resources",
          "required": true
        },
        "summary": "Gets a listing of resources based on the query spec specified"
      }
    },
    "/api/resources/statkeys": {
      "get": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "The identifiers of the Resources",
            "in": "query",
            "name": "resourceId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "An optional wildcard search string that allows\nuser to refine the list of returned Stat Key details by\nkey name. Usage is similar to a LIKE \"<tt>%searchstring%</tt>\"",
            "in": "query",
            "name": "searchstring",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"stat-key\" : [ {\n    \"key\" : \"cpu|demand\"\n  }, {\n    \"key\" : \"cpu|usage\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/stat-keys"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:stat-keys xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:stat-key>\n        <ops:key>cpu|demand</ops:key>\n    </ops:stat-key>\n    <ops:stat-key>\n        <ops:key>cpu|usage</ops:key>\n    </ops:stat-key>\n</ops:stat-keys>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/stat-keys"
                }
              }
            },
            "description": "Collection of StatKey objects available for the Resources"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "<b>Sample URI: </b>\n<code>/api/resources/statkeys?resourceId=UUID1&resourceId=UUID2</code>",
        "operationId": "getStatKeysOfResourcesUsingGET",
        "summary": "Get all the available Stat Keys and their details for the specified set of Resources"
      }
    },
    "/api/resources/stats": {
      "get": {
        "parameters": [
          {
            "description": "The beginning date as a long value of the range of stats to return\nValue measures the number of milliseconds since January 1, 1970 00:00:00 UTC\nNOTE: If not provided, 24 hour rearward of ending date is used",
            "in": "query",
            "name": "begin",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Indicates whether to report only \"current\" stat values, i.e. skip the stat-s that haven't published any value\nduring recent collection cycles.",
            "in": "query",
            "name": "currentOnly",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates that the requested stats are based on some dynamic threshold.\n<b>Defaults to false which indicates that stats are not based on dynamic threshold.",
            "in": "query",
            "name": "dt",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The ending date as a long value of the range of stats to return\nLong value is number of milliseconds since January 1, 1970 00:00:00 UTC\nNOTE: The ending date must not be less than the beginning date.\nIf not provided, current time as UTC milliseconds is used",
            "in": "query",
            "name": "end",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Number for the interval type",
            "in": "query",
            "name": "intervalQuantifier",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Interval type requested by the user (e.g: Days, Weeks, Months etc.)",
            "in": "query",
            "name": "intervalType",
            "required": false,
            "schema": {
              "enum": [
                "HOURS",
                "MINUTES",
                "SECONDS",
                "DAYS",
                "WEEKS",
                "MONTHS",
                "YEARS"
              ],
              "type": "string"
            }
          },
          {
            "description": "The maximum number of samples to return when querying latest.\nWhen processing the get latest stats query if it is omitted a value of 1 is assumed.\nA query for the latest samples is not compatible with specifying the RollUpType value.",
            "in": "query",
            "name": "latestMaxSamples",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Indicates whether specified statKey-s of query should be forcibly treated as metrics (does not include instanced stats)",
            "in": "query",
            "name": "metrics",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Array of Resource ids for which the stats should be fetched",
            "explode": true,
            "in": "query",
            "name": "resourceId",
            "required": false,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Rollup Type requested by the user (e.g.: AVG, MIN, MAX etc.)",
            "in": "query",
            "name": "rollUpType",
            "required": false,
            "schema": {
              "enum": [
                "SUM",
                "AVG",
                "MIN",
                "MAX",
                "NONE",
                "LATEST",
                "COUNT"
              ],
              "type": "string"
            }
          },
          {
            "description": "Array of stat keys for which the stats should be returned",
            "explode": true,
            "in": "query",
            "name": "statKey",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Indicates whether stat values should be wrapped for application/xml response content type.\nThis flag is false by default and not needed for application/json response.\nIf set to true \"statValues\" will be returned instead of \"values\" for all content types.",
            "in": "query",
            "name": "wrapStatValues",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/stats-of-resources"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/stats-of-resources"
                }
              },
              "text/csv": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/stats-of-resources"
                }
              }
            },
            "description": "The object containing a map of list of stat objects keyed by each Resource identifier"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "This is a <i>GET</i> endpoint and the query parameters control the data that is retrieved.\nIf the number of Resources for which one needs to query data is large, it is recommended to\nuse the <code>POST /api/stats/query</code> endpoint to avoid the URL length limitations.\n<b>Takes the form:</b>\n<code>api/resources/stats?resourceId=UUID1</code> <b>OR</b>\n<code>api/resources/stats?resourceId=UUID2&statKey=cpu|usagemhz&rollUpType=&begin=&end=</code>",
        "operationId": "getStatsOfResourcesUsingGET",
        "summary": "Get stats for one or more Resources using the specific query spec"
      },
      "post": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Whether the current data set\ngoes through Analytics processing (Threshold checking, Alert generation) or not.\nDefaults to false. But when set to true will result in no evaluation of Alerts\nbut the data gets stored",
            "example": false,
            "in": "query",
            "name": "disableAnalyticsProcessing",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The stats are added to resources successfully"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "In this case, the adapter instance used for pushing data will default to <i>vRealizeOpsMgrAPI</i>.\nIt is recommended (though not required) to use this API when the resources were created using the API\n<code>POST /api/resources/{id}/adapters/{adapterInstanceId}</code>. Otherwise an additional\nadapter instance might be created.",
        "operationId": "addStatsForResourcesUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/resources-stat-contents"
        },
        "summary": "Add Stats to a Collection of Resources"
      }
    },
    "/api/resources/stats/adapterkinds/{adapterKind}": {
      "post": {
        "parameters": [
          {
            "description": "The ID of the adapter kind that will push the stats",
            "in": "path",
            "name": "adapterKind",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "Whether the current data set\ngoes through Analytics processing (Threshold checking, Alert generation) or not.\nDefaults to false. But when set to true will result in no evaluation of Alerts\nbut the data gets stored.",
            "example": false,
            "in": "query",
            "name": "disableAnalyticsProcessing",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The stats are added successfully"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "If the adapter kind specified is not present in the system, it will be created dynamically.\nHowever if the adapter kind specified already exists, then it must be of <i>OPENAPI</i> adapter kind type.",
        "operationId": "addStatsForResourcesUsingPushAdapterKindUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/resources-stat-contents"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/resources-stat-contents"
              }
            }
          },
          "description": "The Resources and their Stats",
          "required": true
        },
        "summary": "Adds Stats to a Collection of Resources along with associating an adapter instance of the specified adapter kind as the source of data"
      }
    },
    "/api/resources/stats/dt/query": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/stats-of-resources"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/stats-of-resources"
                }
              },
              "text/csv": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/stats-of-resources"
                }
              }
            },
            "description": "The object containing a map of list of stat objects keyed by each Resource identifier"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "The API returns 24 hours of Stats and DT data by default for the specified Resources.",
        "operationId": "getStatsAndDTForResourcesUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dt-stat-query"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/dt-stat-query"
              }
            }
          },
          "description": "The object which specifies the search criteria",
          "required": true
        },
        "summary": "Get Stats and Dynamic Threshold values for one or more StatKeys and for a Collection of Resources"
      }
    },
    "/api/resources/stats/latest": {
      "get": {
        "parameters": [
          {
            "description": "Indicates whether to report only \"current\" stat values, i.e. skip the stat-s that haven't published any value\nduring recent collection cycles.",
            "in": "query",
            "name": "currentOnly",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The maximum number of samples to return when querying latest stats.\nDefaults to 1 so that when processing the query if it is omitted\nthe response would contain a single sample",
            "in": "query",
            "name": "maxSamples",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Indicates whether specified statKey-s of query should be forcibly treated as metrics (does not include instanced stats)",
            "in": "query",
            "name": "metrics",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Array of Resource ids for which the latest stats should be fetched",
            "explode": true,
            "in": "query",
            "name": "resourceId",
            "required": false,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Array of stat keys for which the latest stats should be returned",
            "explode": true,
            "in": "query",
            "name": "statKey",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Indicates whether stat values should be wrapped for application/xml response content type.\nThis flag is false by default and not needed for application/json response.\nIf set to true \"statValues\" will be returned instead of \"values\" for all content types.",
            "in": "query",
            "name": "wrapStatValues",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"values\" : [ {\n    \"resourceId\" : \"50cd8fde-4be9-40b8-8c52-6b268be32a37\",\n    \"stat-list\" : {\n      \"stat\" : [ {\n        \"timestamps\" : [ 1689236478658, 1689236488658 ],\n        \"statKey\" : {\n          \"key\" : \"stat|key1\"\n        },\n        \"rollUpType\" : \"NONE\",\n        \"intervalUnit\" : {\n          \"quantifier\" : 5,\n          \"intervalType\" : \"MINUTES\"\n        },\n        \"data\" : [ 1.0, 2.0 ],\n        \"dtTimestamps\" : [ 1689236478658, 1689236488658, 1689236498658 ],\n        \"minThresholdData\" : [ 0.5, 1.0 ],\n        \"maxThresholdData\" : [ 1.5, 3.0 ],\n        \"smoothValues\" : [ 1.5, 1.5 ]\n      } ]\n    }\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/stats-of-resources"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:stats-of-resources xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:stats-of-resource>\n        <ops:resourceId>28ddbac2-d6e6-4f98-8692-63b4b51e8d53</ops:resourceId>\n        <ops:stat-list>\n            <ops:stat>\n                <ops:timestamps>1689236478626 1689236488626</ops:timestamps>\n                <ops:statKey>\n                    <ops:key>stat|key1</ops:key>\n                </ops:statKey>\n                <ops:rollUpType>NONE</ops:rollUpType>\n                <ops:intervalUnit>\n                    <ops:quantifier>5</ops:quantifier>\n                    <ops:intervalType>MINUTES</ops:intervalType>\n                </ops:intervalUnit>\n                <ops:data>1.0 2.0</ops:data>\n                <ops:dtTimestamps>1689236478626 1689236488626 1689236498626</ops:dtTimestamps>\n                <ops:minThresholdData>0.5 1.0</ops:minThresholdData>\n                <ops:maxThresholdData>1.5 3.0</ops:maxThresholdData>\n                <ops:smoothValues>1.5 1.5</ops:smoothValues>\n            </ops:stat>\n        </ops:stat-list>\n    </ops:stats-of-resource>\n</ops:stats-of-resources>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/stats-of-resources"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/stats-of-resources"
                }
              }
            },
            "description": "The object containing a map of list of stat objects keyed by each Resource identifier"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "<b>Takes the form:</b> \n<code>api/resources/stats/latest?resourceId=UUID1&resourceId=UUID2</code> <b>OR</b>\n<code>api/resources/stats/latest?resourceId=UUID2&statKey=cpu|usagemhz&statKey=cpu|demandmhz</code>\n",
        "operationId": "getLatestStatsOfResourcesUsingGET",
        "summary": "Get Latest stats of one or more Resources using the query spec that is specified"
      }
    },
    "/api/resources/stats/latest/query": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"values\" : [ {\n    \"resourceId\" : \"8dbc7c39-ccac-4e32-b92c-23ce5adf5c4e\",\n    \"stat-list\" : {\n      \"stat\" : [ {\n        \"timestamps\" : [ 1689236478909, 1689236488909 ],\n        \"statKey\" : {\n          \"key\" : \"stat|key1\"\n        },\n        \"rollUpType\" : \"NONE\",\n        \"intervalUnit\" : {\n          \"quantifier\" : 5,\n          \"intervalType\" : \"MINUTES\"\n        },\n        \"data\" : [ 1.0, 2.0 ],\n        \"dtTimestamps\" : [ 1689236478909, 1689236488909, 1689236498909 ],\n        \"minThresholdData\" : [ 0.5, 1.0 ],\n        \"maxThresholdData\" : [ 1.5, 3.0 ],\n        \"smoothValues\" : [ 1.5, 1.5 ]\n      } ]\n    }\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/stats-of-resources"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:stats-of-resources xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:stats-of-resource>\n        <ops:resourceId>59a0f37f-2586-4394-86a7-e9fb6e61c6a2</ops:resourceId>\n        <ops:stat-list>\n            <ops:stat>\n                <ops:timestamps>1689236478909 1689236488909</ops:timestamps>\n                <ops:statKey>\n                    <ops:key>stat|key1</ops:key>\n                </ops:statKey>\n                <ops:rollUpType>NONE</ops:rollUpType>\n                <ops:intervalUnit>\n                    <ops:quantifier>5</ops:quantifier>\n                    <ops:intervalType>MINUTES</ops:intervalType>\n                </ops:intervalUnit>\n                <ops:data>1.0 2.0</ops:data>\n                <ops:dtTimestamps>1689236478909 1689236488909 1689236498909</ops:dtTimestamps>\n                <ops:minThresholdData>0.5 1.0</ops:minThresholdData>\n                <ops:maxThresholdData>1.5 3.0</ops:maxThresholdData>\n                <ops:smoothValues>1.5 1.5</ops:smoothValues>\n            </ops:stat>\n        </ops:stat-list>\n    </ops:stats-of-resource>\n</ops:stats-of-resources>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/stats-of-resources"
                }
              }
            },
            "description": "The requested stats"
          },
          "404": {
            "description": "Non of the resources could be found"
          },
          "500": {
            "description": "Error during the query"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "Get the last \"maxSamples\" stats values for specified one or more Resources",
        "operationId": "queryLatestStatsOfResourcesUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/latest-stat-query"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/latest-stat-query"
              }
            }
          },
          "description": "The object which specifies the search criteria",
          "required": true
        },
        "summary": "Get the last \"maxSamples\" stats values for specified one or more Resources"
      }
    },
    "/api/resources/stats/query": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"values\" : [ {\n    \"resourceId\" : \"daef31a8-7c10-4327-914e-524413f203f5\",\n    \"stat-list\" : {\n      \"stat\" : [ {\n        \"timestamps\" : [ 1689236478832, 1689236488832 ],\n        \"statKey\" : {\n          \"key\" : \"stat|key1\"\n        },\n        \"rollUpType\" : \"NONE\",\n        \"intervalUnit\" : {\n          \"quantifier\" : 5,\n          \"intervalType\" : \"MINUTES\"\n        },\n        \"data\" : [ 1.0, 2.0 ],\n        \"dtTimestamps\" : [ 1689236478832, 1689236488832, 1689236498832 ],\n        \"minThresholdData\" : [ 0.5, 1.0 ],\n        \"maxThresholdData\" : [ 1.5, 3.0 ],\n        \"smoothValues\" : [ 1.5, 1.5 ]\n      } ]\n    }\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/stats-of-resources"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:stats-of-resources xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:stats-of-resource>\n        <ops:resourceId>cbdc50a0-35a3-42df-bc05-0d8e7cbc13ec</ops:resourceId>\n        <ops:stat-list>\n            <ops:stat>\n                <ops:timestamps>1689236478832 1689236488832</ops:timestamps>\n                <ops:statKey>\n                    <ops:key>stat|key1</ops:key>\n                </ops:statKey>\n                <ops:rollUpType>NONE</ops:rollUpType>\n                <ops:intervalUnit>\n                    <ops:quantifier>5</ops:quantifier>\n                    <ops:intervalType>MINUTES</ops:intervalType>\n                </ops:intervalUnit>\n                <ops:data>1.0 2.0</ops:data>\n                <ops:dtTimestamps>1689236478832 1689236488832 1689236498832</ops:dtTimestamps>\n                <ops:minThresholdData>0.5 1.0</ops:minThresholdData>\n                <ops:maxThresholdData>1.5 3.0</ops:maxThresholdData>\n                <ops:smoothValues>1.5 1.5</ops:smoothValues>\n            </ops:stat>\n        </ops:stat-list>\n    </ops:stats-of-resource>\n</ops:stats-of-resources>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/stats-of-resources"
                }
              }
            },
            "description": "The object containing a map of list of stat objects keyed by each Resource identifier"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "Get stats for one or more Resources using the specific query spec",
        "operationId": "getStatsForResourcesUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/stat-query"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/stat-query"
              }
            }
          },
          "description": "The object which specifies the search criteria",
          "required": true
        },
        "summary": "Get stats for one or more Resources using the specific query spec"
      }
    },
    "/api/resources/stats/topn": {
      "get": {
        "parameters": [
          {
            "description": "The beginning date as a long value of the range of stats to return\nValue measures the number of milliseconds since January 1, 1970 00:00:00 UTC\nNOTE: If not provided, 24 hour rearward of ending date is used",
            "in": "query",
            "name": "begin",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Indicates whether to report only \"current\" stat values, i.e. skip the stat-s that haven't published any value\nduring recent collection cycles.",
            "in": "query",
            "name": "currentOnly",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates that the requested stats are based on some dynamic threshold.\n<b>Defaults to false which indicates that stats are not based on dynamic threshold.",
            "in": "query",
            "name": "dt",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The ending date as a long value of the range of stats to return\nLong value is number of milliseconds since January 1, 1970 00:00:00 UTC\nNOTE: The ending date must not be less than the beginning date.\nIf not provided, current time as UTC milliseconds is used",
            "in": "query",
            "name": "end",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "The type of grouping, if not set defaults to ResourceStatGroupBy.RESOURCE",
            "in": "query",
            "name": "groupBy",
            "required": false,
            "schema": {
              "enum": [
                "RESOURCE",
                "STATKEY"
              ],
              "type": "string"
            }
          },
          {
            "description": "Number for the interval type",
            "in": "query",
            "name": "intervalQuantifier",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Interval type requested by the user (e.g: Days, Weeks, Months etc.)",
            "in": "query",
            "name": "intervalType",
            "required": false,
            "schema": {
              "enum": [
                "HOURS",
                "MINUTES",
                "SECONDS",
                "DAYS",
                "WEEKS",
                "MONTHS",
                "YEARS"
              ],
              "type": "string"
            }
          },
          {
            "description": "The maximum number of samples to return when querying latest.\nWhen processing the get latest stats query if it is omitted a value of 1 is assumed.\nA query for the latest samples is not compatible with specifying the RollUpType value.",
            "in": "query",
            "name": "latestMaxSamples",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Indicates whether specified statKey-s of query should be forcibly treated as metrics (does not include instanced stats)",
            "in": "query",
            "name": "metrics",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Array of Resource ids for which the stats should be fetched",
            "explode": true,
            "in": "query",
            "name": "resourceId",
            "required": false,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Rollup Type requested by the user (e.g.: AVG, MIN, MAX etc.)",
            "in": "query",
            "name": "rollUpType",
            "required": false,
            "schema": {
              "enum": [
                "SUM",
                "AVG",
                "MIN",
                "MAX",
                "NONE",
                "LATEST",
                "COUNT"
              ],
              "type": "string"
            }
          },
          {
            "description": "The type of sorting, if not set defaults to ResourceStatSort.ASCENDING",
            "in": "query",
            "name": "sortOrder",
            "required": false,
            "schema": {
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ],
              "type": "string"
            }
          },
          {
            "description": "Array of stat keys for which the stats should be returned",
            "explode": true,
            "in": "query",
            "name": "statKey",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The number of results. Keep in mind if a grouping contains multiple items (eg:\ngrouped by resource, with 4 metrics for the grouping resource) then returning the group with\n4 metrics counts as 4 topN entries. If there are not enough remaining open topN entries to\nreturn an entire group within the topN then the entire group is not returned. *",
            "in": "query",
            "name": "topN",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Indicates whether stat values should be wrapped for application/xml response content type.\nThis flag is false by default and not needed for application/json response.\nIf set to true \"statValues\" will be returned instead of \"values\" for all content types.",
            "in": "query",
            "name": "wrapStatValues",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"groupBy\" : \"RESOURCE\",\n  \"sortOrder\" : \"ASCENDING\",\n  \"resourceStatGroups\" : [ {\n    \"groupKey\" : \"085ab051-1067-41c7-94ac-d7582395b654\",\n    \"resourceStats\" : [ ]\n  }, {\n    \"groupKey\" : \"f5132ada-4b14-437c-93ea-af3e9f42a6bc\",\n    \"resourceStats\" : [ ]\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ResourceStatGroupList"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:resourceStatGroupList xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:groupBy>RESOURCE</ops:groupBy>\n    <ops:sortOrder>ASCENDING</ops:sortOrder>\n    <ops:resourceStatGroups>\n        <ops:resourceStatGroup>\n            <ops:groupKey>6138d0fe-1e68-40d0-a034-2640b8eba748</ops:groupKey>\n            <ops:resourceStats/>\n        </ops:resourceStatGroup>\n        <ops:resourceStatGroup>\n            <ops:groupKey>d52aab17-2cd2-4506-96ba-f531c90693a5</ops:groupKey>\n            <ops:resourceStats/>\n        </ops:resourceStatGroup>\n    </ops:resourceStatGroups>\n</ops:resourceStatGroupList>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ResourceStatGroupList"
                }
              }
            },
            "description": "TopN data keyed by each Resource identifier"
          }
        },

        "tags": [
          "Resources"
        ],
        "deprecated": false,
        "description": "Get the Top-N stats data for one or more Resources and a set of StatKeys",
        "operationId": "getTopNStatsOfResourcesUsingGET",
        "summary": "Get the Top-N stats data for one or more Resources and a set of StatKeys"
      }
    },
    "/api/resources/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The Resource identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource is deleted successfully"
          },
          "404": {
            "description": "The Resource being deleted is invalid/non-existent"
          }
        },

        "tags": [
          "Resource"
        ],
        "deprecated": false,
        "description": "<p><b>NOTE: </b> Deletion of a Resource is <em>not synchronous</em>. As a result, the delete operation may not happen immediately. It is recommended to query back the system with the resource identifier and ensure that the system returns a 404 error.",
        "operationId": "deleteResourceUsingDELETE",
        "summary": "Delete a Resource with the given identifier"
      },
      "get": {
        "parameters": [
          {
            "description": "The Resource identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"creationTime\" : 1689236478163,\n  \"resourceKey\" : {\n    \"name\" : \"VM1\",\n    \"adapterKindKey\" : \"VMWARE\",\n    \"resourceKindKey\" : \"VirtualMachine\",\n    \"resourceIdentifiers\" : [ {\n      \"identifierType\" : {\n        \"name\" : \"VMEntityObjectID\",\n        \"dataType\" : \"STRING\",\n        \"isPartOfUniqueness\" : true\n      },\n      \"value\" : \"vm-123\"\n    }, {\n      \"identifierType\" : {\n        \"name\" : \"VMEntityVCID\",\n        \"dataType\" : \"STRING\",\n        \"isPartOfUniqueness\" : true\n      },\n      \"value\" : \"CBAD174A-622E-4650-805A-064F824FFA76\"\n    }, {\n      \"identifierType\" : {\n        \"name\" : \"VMEntityName\",\n        \"dataType\" : \"STRING\",\n        \"isPartOfUniqueness\" : true\n      },\n      \"value\" : \"VM1\"\n    } ]\n  },\n  \"credentialInstanceId\" : \"51f8f60d-4a39-4839-9924-698d022e2e10\",\n  \"dtEnabled\" : true,\n  \"badges\" : [ ],\n  \"identifier\" : \"6dde2334-6a02-42ac-90b4-a148452b3f61\"\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resource"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:resource creationTime=\"1689236478164\" identifier=\"ee83f722-c420-47a2-bd5e-1576b17459ad\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:resourceKey>\n        <ops:name>VM1</ops:name>\n        <ops:adapterKindKey>VMWARE</ops:adapterKindKey>\n        <ops:resourceKindKey>VirtualMachine</ops:resourceKindKey>\n        <ops:resourceIdentifiers>\n            <ops:resourceIdentifier>\n                <ops:identifierType name=\"VMEntityObjectID\" dataType=\"STRING\" isPartOfUniqueness=\"true\"/>\n                <ops:value>vm-123</ops:value>\n            </ops:resourceIdentifier>\n            <ops:resourceIdentifier>\n                <ops:identifierType name=\"VMEntityVCID\" dataType=\"STRING\" isPartOfUniqueness=\"true\"/>\n                <ops:value>CBAD174A-622E-4650-805A-064F824FFA76</ops:value>\n            </ops:resourceIdentifier>\n            <ops:resourceIdentifier>\n                <ops:identifierType name=\"VMEntityName\" dataType=\"STRING\" isPartOfUniqueness=\"true\"/>\n                <ops:value>VM1</ops:value>\n            </ops:resourceIdentifier>\n        </ops:resourceIdentifiers>\n    </ops:resourceKey>\n    <ops:credentialInstanceId>51f8f60d-4a39-4839-9924-698d022e2e10</ops:credentialInstanceId>\n    <ops:resourceStatusStates/>\n    <ops:dtEnabled>true</ops:dtEnabled>\n    <ops:badges/>\n    <ops:relatedResources/>\n</ops:resource>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resource"
                }
              }
            },
            "description": "The Resource for the specified UUID"
          }
        },

        "tags": [
          "Resource"
        ],
        "deprecated": false,
        "description": "Get the Resource for the specified identifier",
        "operationId": "getResourceUsingGET",
        "summary": "Get the Resource for the specified identifier"
      }
    },
    "/api/resources/{id}/geolocation": {
      "put": {
        "parameters": [
          {
            "description": "The Resource identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "The latitude of the location",
            "in": "query",
            "name": "latitude",
            "required": true,
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "The longitude of the location",
            "in": "query",
            "name": "longitude",
            "required": true,
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The geolocation is updated successfully"
          }
        },

        "tags": [
          "Resource"
        ],
        "deprecated": false,
        "description": "Update the geographical location of the Resource",
        "operationId": "updateGeoLocationOfResourceUsingPUT",
        "summary": "Update the geographical location of the Resource"
      }
    },
    "/api/resources/{id}/maintained": {
      "delete": {
        "parameters": [
          {
            "description": "The Resource identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The resource is brought out from maintenance successfully"
          }
        },

        "tags": [
          "Resource"
        ],
        "deprecated": false,
        "description": "Bring the Resource out of Maintenance manually",
        "operationId": "unmarkResourceAsBeingMaintainedUsingDELETE",
        "summary": "Bring the Resource out of Maintenance manually"
      },
      "put": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Duration for which this resource will be in maintenance (In Minutes)",
            "in": "query",
            "name": "duration",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "End time of the maintenance window as a long value (Epoch time)",
            "in": "query",
            "name": "end",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "The Resource identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The resource is put in maintenance successfully"
          }
        },

        "tags": [
          "Resource"
        ],
        "deprecated": false,
        "description": "The Resource can end up in two maintenance states - <i>MAINTAINED</i> OR <i>MAINTAINED_MANUAL</i> -\ndepending upon the inputs specified.<br/><ul>\n<li>If duration/end time is specified, the resource will be placed in <i>MAINTAINED</i>\nstate and after the duration/end time expires, the resource state is automatically set to the state\nit was in before entering the maintenance window.\n<li>If duration/end time is not specified, the resource will be placed in <i>MAINTAINED_MANUAL</i> state.\nCallers have to execute <code>DELETE /suite-api/api/resources/{id}/maintained</code> API to set the Resource\nback to whatever state it was in.\n<li>If both duration and end time are specified, end time takes preference over duration.\n</ul>",
        "operationId": "markResourceAsBeingMaintainedUsingPUT",
        "summary": "Put the specific Resource in Maintenance"
      }
    },
    "/api/resources/{id}/monitoringstate/start": {
      "put": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Collection of adapter instance identifiers that should start monitoring this Resource",
            "explode": true,
            "in": "query",
            "name": "adapterId",
            "required": false,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The Resource identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The resource monitoring is started successfully"
          }
        },

        "tags": [
          "Resource"
        ],
        "deprecated": false,
        "description": "The optional query parameter <i>adapterId</i> determines which of the Adapters need to be informed to start monitoring the Resource. If this is not specified, then all of the Adapters will start monitoring the Resource.",
        "operationId": "startMonitoringResourceUsingPUT",
        "summary": "Inform one or more or all Adapters to start monitoring this Resource"
      }
    },
    "/api/resources/{id}/monitoringstate/stop": {
      "put": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Collection of adapter instance identifiers that should stop monitoring this Resource",
            "explode": true,
            "in": "query",
            "name": "adapterId",
            "required": false,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The Resource identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The resource monitoring is stopped successfully"
          }
        },

        "tags": [
          "Resource"
        ],
        "deprecated": false,
        "description": "The optional query parameter <i>adapterId</i> determines which of the Adapters need to be informed to stop monitoring the Resource. If this is not specified, then all of the Adapters will stop monitoring the Resource.",
        "operationId": "stopMonitoringResourceUsingPUT",
        "summary": "Inform one or more or all Adapters to stop monitoring this Resource"
      }
    },
    "/api/resources/{id}/properties": {
      "get": {
        "parameters": [
          {
            "description": "The ID of the resource",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"resourceId\" : \"5874fb50-9c3f-416a-8864-4670db80debc\",\n  \"property\" : [ {\n    \"name\" : \"Key1\",\n    \"value\" : \"Value1\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resource-property"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:resource-property resourceId=\"1fbd916e-975a-4fa6-b69c-b44f02678690\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:property name=\"Key1\">Value1</ops:property>\n</ops:resource-property>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resource-property"
                }
              }
            },
            "description": "The ResourceProperties object that has the current values of all the Properties for the Resource"
          }
        },

        "tags": [
          "Resource"
        ],
        "deprecated": false,
        "description": "Get all the properties for the specified Resource",
        "operationId": "getResourcePropertiesUsingGET",
        "summary": "Get all the properties for the specified Resource"
      },
      "post": {
        "parameters": [
          {
            "description": "The ID of the resource",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The properties are added successfully"
          }
        },

        "tags": [
          "Resource"
        ],
        "deprecated": false,
        "description": "In this case, the adapter instance used for pushing data will default to <i>SuiteAPI</i>. It is recommended (though not required) to use this API when the resource was created using the API \n<code>POST /api/resources/{id}/adapters/{adapterInstanceId}</code>. Otherwise an additional adapter instance might be created.\n<b>Note: </b> Those properties that are specified with old timestamp will be published with current time. As a result, only one of those properties will appear in vROps (e.g. the latest one will overwrite all previous ones).",
        "operationId": "addPropertiesUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/property-contents"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/property-contents"
              }
            }
          },
          "description": "The properties for the Resource",
          "required": true
        },
        "summary": "Add Properties to a Resource"
      }
    },
    "/api/resources/{id}/properties/adapterkinds/{adapterKind}": {
      "post": {
        "parameters": [
          {
            "description": "The Adapter Kind key of the adapter instance that will push the properties",
            "in": "path",
            "name": "adapterKind",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the resource",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The properties are added successfully"
          }
        },

        "tags": [
          "Resource"
        ],
        "deprecated": false,
        "description": "If the adapter kind specified is not present in the system, it will be created dynamically. However if the adapter kind specified already exists, then it must be of <i>OPENAPI</i> adapter kind type.",
        "operationId": "addPropertiesUsingPushAdapterKindUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/property-contents"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/property-contents"
              }
            }
          },
          "description": "The properties for the Resource",
          "required": true
        },
        "summary": "Add Properties to a Resource along with associating an adapter instance of the specified adapter kind as the source of data"
      }
    },
    "/api/resources/{id}/relationships": {
      "get": {
        "parameters": [
          {
            "description": "The UUID of the resource to set the relationships for",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Page number from which data needs to be displayed (0-based)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Expected number of entries per page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "The type of relationship of the objects; Uses the RelationshipType.representation value",
            "in": "query",
            "name": "relationshipType",
            "required": true,
            "schema": {
              "enum": [
                "PARENT",
                "CHILD",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"relationshipType\" : \"ALL\",\n  \"resourceList\" : [ {\n    \"description\" : \"Some Virtual Machine\",\n    \"creationTime\" : 10202319,\n    \"resourceKey\" : {\n      \"name\" : \"Cloud-VM\"\n    },\n    \"dtEnabled\" : true,\n    \"badges\" : [ ],\n    \"identifier\" : \"c15e8115-cbae-4732-bb9d-7b999fe0a095\"\n  }, {\n    \"description\" : \"Some NFS\",\n    \"creationTime\" : 10202330,\n    \"resourceKey\" : {\n      \"name\" : \"NFS-Datastore\"\n    },\n    \"dtEnabled\" : true,\n    \"badges\" : [ ],\n    \"identifier\" : \"e917bb19-58e3-4fbd-8160-606834e8ac23\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resource-relation"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:resource-relation xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:relationshipType>ALL</ops:relationshipType>\n    <ops:resource creationTime=\"10202319\" identifier=\"9a3dba1d-9a3b-4f53-8ef2-495d3eceb111\">\n        <ops:description>Some Virtual Machine</ops:description>\n        <ops:resourceKey>\n            <ops:name>Cloud-VM</ops:name>\n            <ops:resourceIdentifiers/>\n        </ops:resourceKey>\n        <ops:resourceStatusStates/>\n        <ops:dtEnabled>true</ops:dtEnabled>\n        <ops:badges/>\n        <ops:relatedResources/>\n    </ops:resource>\n    <ops:resource creationTime=\"10202330\" identifier=\"ae2e4a24-e994-44ba-846e-dffa99ee86d2\">\n        <ops:description>Some NFS</ops:description>\n        <ops:resourceKey>\n            <ops:name>NFS-Datastore</ops:name>\n            <ops:resourceIdentifiers/>\n        </ops:resourceKey>\n        <ops:resourceStatusStates/>\n        <ops:dtEnabled>true</ops:dtEnabled>\n        <ops:badges/>\n        <ops:relatedResources/>\n    </ops:resource>\n</ops:resource-relation>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resource-relation"
                }
              }
            },
            "description": "All the related resources"
          }
        },

        "tags": [
          "Resource"
        ],
        "deprecated": false,
        "description": "If the optional query parameter <i>'relationshipType'</i> is specified, relations of that particular Relationship Type are returned.\nFew sample URLs are shown below.\n<code>/api/resources/{resourceId}/relationships?relationshipType=CHILD</code>\n<code>/api/resources/{resourceId}/relationships?relationshipType=PARENT</code>",
        "operationId": "getRelationshipsUsingGET",
        "summary": "Get ALL the related resources of a particular Relationship Type for a Resource"
      }
    },
    "/api/resources/{id}/relationships/{relationshipType}": {
      "get": {
        "parameters": [
          {
            "description": "The UUID of the resource to set the relationships for",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Page number from which data needs to be displayed (0-based)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Expected number of entries per page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The type of relationship of the objects; Uses the RelationshipType.representation value",
            "in": "path",
            "name": "relationshipType",
            "required": true,
            "schema": {
              "enum": [
                "PARENT",
                "CHILD",
                "ALL"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"relationshipType\" : \"CHILD\",\n  \"resourceList\" : [ {\n    \"creationTime\" : 1689236478110,\n    \"resourceKey\" : {\n      \"name\" : \"VM1\"\n    },\n    \"credentialInstanceId\" : \"51f8f60d-4a39-4839-9924-698d022e2e10\",\n    \"dtEnabled\" : true,\n    \"badges\" : [ ],\n    \"identifier\" : \"90f63ee5-6202-4941-a941-7b196ff259eb\"\n  }, {\n    \"creationTime\" : 1689236478110,\n    \"resourceKey\" : {\n      \"name\" : \"VM2\"\n    },\n    \"credentialInstanceId\" : \"b1f8f60d-4a39-9348-9924-068d022e2b00\",\n    \"dtEnabled\" : true,\n    \"badges\" : [ ],\n    \"identifier\" : \"70d75f98-8af9-4ea7-a04a-c10e6f7bfad9\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resource-relation"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:resource-relation xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:relationshipType>CHILD</ops:relationshipType>\n    <ops:resource creationTime=\"1689236478111\" identifier=\"bb4feb92-0e5e-40c4-bed4-5ac4271e88c3\">\n        <ops:resourceKey>\n            <ops:name>VM1</ops:name>\n            <ops:resourceIdentifiers/>\n        </ops:resourceKey>\n        <ops:credentialInstanceId>51f8f60d-4a39-4839-9924-698d022e2e10</ops:credentialInstanceId>\n        <ops:resourceStatusStates/>\n        <ops:dtEnabled>true</ops:dtEnabled>\n        <ops:badges/>\n        <ops:relatedResources/>\n    </ops:resource>\n    <ops:resource creationTime=\"1689236478111\" identifier=\"fe6e36b1-184f-4ba6-ae38-0afdb15d2692\">\n        <ops:resourceKey>\n            <ops:name>VM2</ops:name>\n            <ops:resourceIdentifiers/>\n        </ops:resourceKey>\n        <ops:credentialInstanceId>b1f8f60d-4a39-9348-9924-068d022e2b00</ops:credentialInstanceId>\n        <ops:resourceStatusStates/>\n        <ops:dtEnabled>true</ops:dtEnabled>\n        <ops:badges/>\n        <ops:relatedResources/>\n    </ops:resource>\n</ops:resource-relation>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/resource-relation"
                }
              }
            },
            "description": "All the related resources"
          }
        },

        "tags": [
          "Resource"
        ],
        "deprecated": false,
        "description": "The URL path variable <i>'relationshipType'</i> uses the RelationshipType.representation value.\nFew sample URLs are shown below.\n<code>/api/resources/{resourceId}/relationships/children</code>\n<code>/api/resources/{resourceId}/relationships/parents</code>\n",
        "operationId": "getRelationshipUsingGET",
        "summary": "Get the related resources of a particular Relationship Type for a Resource"
      },
      "post": {
        "parameters": [
          {
            "description": "The UUID of the source resource",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The type of relationship of the objects; Uses the RelationshipType.representation value",
            "in": "path",
            "name": "relationshipType",
            "required": true,
            "schema": {
              "enum": [
                "parents",
                "children"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The relationship is added successfully"
          },
          "404": {
            "description": "All of the Resource that are part of the relatedIds list are invalid/non-existent"
          }
        },

        "tags": [
          "Resource"
        ],
        "deprecated": false,
        "description": "<p><ul><li>If at least a few of the Resource that are part of <i>relatedIds</i> list\nare valid resources then the operation is performed. </li>\n<li>If there are few Resource that are part of <i>relatedIds</i> list\nthat will result in a cyclical relationship, then those resources will be skipped.</li>\n</ul></p><p><b>NOTE: </b> Adding relationship is <em>not synchronous</em>. As a\nresult, the add operation may not happen immediately. It is recommended\nto query the relationships of the specific Resource back to ensure that the\noperation was indeed successful.\n</p>",
        "operationId": "addRelationshipUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/uuid-values"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/uuid-values"
              }
            }
          },
          "description": "UUID of resources to add as related to this resource",
          "required": true
        },
        "summary": "Add relationships of given type to the resource with specified resourceId"
      },
      "put": {
        "parameters": [
          {
            "description": "The UUID of the source resource",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The type of relationship of the objects; Uses the RelationshipType.representation value",
            "in": "path",
            "name": "relationshipType",
            "required": true,
            "schema": {
              "enum": [
                "parents",
                "children"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The relationship is set successfully"
          },
          "404": {
            "description": "All of the Resource that are part of the relatedIds list are invalid/non-existent"
          }
        },

        "tags": [
          "Resource"
        ],
        "deprecated": false,
        "description": "This API exposes replace semantics. Therefore, all the existing relationships of the\nspecified <i>relationshipType</i> will be removed and replaced with the resources\nspecified as part of the request body.\n<p><ul><li>If at least a few of the Resource that are part of <i>relatedIds</i> list\nare valid resources then the operation is performed. </li>\n<li>If there are few Resource that are part of <i>relatedIds</i> list\nthat will result in a cyclical relationship, then the operation is aborted.</li>\n</ul></p><p><b>NOTE: </b> Setting relationship is <em>not synchronous</em>.\nAs a result, the set operation may not happen immediately. It is recommended\nto query the relationships of the specific Resource back to ensure that the\noperation was indeed successful.",
        "operationId": "setRelationshipUsingPUT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/uuid-values"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/uuid-values"
              }
            }
          },
          "description": "UUID of resources to set as related to this resource",
          "required": true
        },
        "summary": "Set (Replace) Resource as RelationshipType of a specific Resource"
      }
    },
    "/api/resources/{id}/relationships/{relationshipType}/{relatedId}": {
      "delete": {
        "parameters": [
          {
            "description": "The UUID of the resource",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The UUID of the resource to remove from relationship",
            "in": "path",
            "name": "relatedId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Type of the Relationship that needs to be removed",
            "in": "path",
            "name": "relationshipType",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The relationship is deleted successfully"
          },
          "404": {
            "description": "Either of the Resource that are part of the path parameters are invalid/non-existent"
          }
        },

        "tags": [
          "Resource"
        ],
        "deprecated": false,
        "description": "<p><b>NOTE: </b> Removing a relationship is <em>not synchronous</em>. As a\nresult, the delete operation may not happen immediately. It is recommended\nto query the relationships of the specific Resource back to ensure that the\noperation was indeed successful.</p>",
        "operationId": "deleteRelationshipUsingDELETE",
        "summary": "Delete (remove) a Resource as RelationshipType of a specific Resource"
      }
    },
    "/api/resources/{id}/statkeys": {
      "get": {
        "parameters": [
          {
            "description": "The ID of the resource",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"stat-key\" : [ {\n    \"key\" : \"cpu|demand\"\n  }, {\n    \"key\" : \"cpu|usage\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/stat-keys"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:stat-keys xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:stat-key>\n        <ops:key>cpu|demand</ops:key>\n    </ops:stat-key>\n    <ops:stat-key>\n        <ops:key>cpu|usage</ops:key>\n    </ops:stat-key>\n</ops:stat-keys>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/stat-keys"
                }
              }
            },
            "description": "The list of Stat Keys"
          }
        },

        "tags": [
          "Resource"
        ],
        "deprecated": false,
        "description": "Get all the stat keys for the specified Resource",
        "operationId": "getStatKeysUsingGET",
        "summary": "Get all the stat keys for the specified Resource"
      }
    },
    "/api/resources/{id}/stats": {
      "get": {
        "parameters": [
          {
            "description": "The beginning date as a long value of the range of stats to return\nValue measures the number of milliseconds since January 1, 1970 00:00:00 UTC\nNOTE: If not provided, 24 hour rearward of ending date is used",
            "in": "query",
            "name": "begin",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Indicates whether to report only \"current\" stat values, i.e. skip the stat-s that haven't published any value\nduring recent collection cycles.",
            "in": "query",
            "name": "currentOnly",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates that the requested stats are based on some dynamic threshold.\n<b>Defaults to false which indicates that stats are not based on dynamic threshold.",
            "in": "query",
            "name": "dt",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The ending date as a long value of the range of stats to return\nLong value is number of milliseconds since January 1, 1970 00:00:00 UTC\nNOTE: The ending date must not be less than the beginning date.\nIf not provided, current time as UTC milliseconds is used",
            "in": "query",
            "name": "end",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "The Identifier of the resource object",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Number for the interval type",
            "in": "query",
            "name": "intervalQuantifier",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Interval type requested by the user (e.g: Days, Weeks, Months etc.)",
            "in": "query",
            "name": "intervalType",
            "required": false,
            "schema": {
              "enum": [
                "HOURS",
                "MINUTES",
                "SECONDS",
                "DAYS",
                "WEEKS",
                "MONTHS",
                "YEARS"
              ],
              "type": "string"
            }
          },
          {
            "description": "The maximum number of samples to return when querying latest.\nWhen processing the get latest stats query if it is omitted a value of 1 is assumed.\nA query for the latest samples is not compatible with specifying the RollUpType value.",
            "in": "query",
            "name": "latestMaxSamples",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Indicates whether specified statKey-s of query should be forcibly treated as metrics (does not include instanced stats)",
            "in": "query",
            "name": "metrics",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Array of Resource ids for which the stats should be fetched",
            "explode": true,
            "in": "query",
            "name": "resourceId",
            "required": false,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Rollup Type requested by the user (e.g.: AVG, MIN, MAX etc.)",
            "in": "query",
            "name": "rollUpType",
            "required": false,
            "schema": {
              "enum": [
                "SUM",
                "AVG",
                "MIN",
                "MAX",
                "NONE",
                "LATEST",
                "COUNT"
              ],
              "type": "string"
            }
          },
          {
            "description": "Array of stat keys for which the stats should be returned",
            "explode": true,
            "in": "query",
            "name": "statKey",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Indicates whether stat values should be wrapped for application/xml response content type.\nThis flag is false by default and not needed for application/json response.\nIf set to true \"statValues\" will be returned instead of \"values\" for all content types.",
            "in": "query",
            "name": "wrapStatValues",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"values\" : [ {\n    \"resourceId\" : \"64224653-c751-4383-908b-0c5f6bd109c3\",\n    \"stat-list\" : {\n      \"stat\" : [ {\n        \"timestamps\" : [ 1689236478342, 1689236488342 ],\n        \"statKey\" : {\n          \"key\" : \"stat|key1\"\n        },\n        \"rollUpType\" : \"NONE\",\n        \"intervalUnit\" : {\n          \"quantifier\" : 5,\n          \"intervalType\" : \"MINUTES\"\n        },\n        \"data\" : [ 1.0, 2.0 ],\n        \"dtTimestamps\" : [ 1689236478342, 1689236488342, 1689236498342 ],\n        \"minThresholdData\" : [ 0.5, 1.0 ],\n        \"maxThresholdData\" : [ 1.5, 3.0 ],\n        \"smoothValues\" : [ 1.5, 1.5 ]\n      } ]\n    }\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/stats-of-resources"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:stats-of-resources xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:stats-of-resource>\n        <ops:resourceId>a710c783-cdb7-4d39-bac9-11670fd2a460</ops:resourceId>\n        <ops:stat-list>\n            <ops:stat>\n                <ops:timestamps>1689236478343 1689236488343</ops:timestamps>\n                <ops:statKey>\n                    <ops:key>stat|key1</ops:key>\n                </ops:statKey>\n                <ops:rollUpType>NONE</ops:rollUpType>\n                <ops:intervalUnit>\n                    <ops:quantifier>5</ops:quantifier>\n                    <ops:intervalType>MINUTES</ops:intervalType>\n                </ops:intervalUnit>\n                <ops:data>1.0 2.0</ops:data>\n                <ops:dtTimestamps>1689236478343 1689236488343 1689236498343</ops:dtTimestamps>\n                <ops:minThresholdData>0.5 1.0</ops:minThresholdData>\n                <ops:maxThresholdData>1.5 3.0</ops:maxThresholdData>\n                <ops:smoothValues>1.5 1.5</ops:smoothValues>\n            </ops:stat>\n        </ops:stat-list>\n    </ops:stats-of-resource>\n</ops:stats-of-resources>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/stats-of-resources"
                }
              }
            },
            "description": "Object, containing a map of List of Stat objects keyed by each resource UUID"
          }
        },

        "tags": [
          "Resource"
        ],
        "deprecated": false,
        "description": "NOTE: Unless a time range is explicitly set, the method returns statKeys which have received data in the last 24 hours.",
        "operationId": "getStatsOfResourceUsingGET",
        "summary": "Look up stats of a group of objects with the resource ids"
      },
      "post": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Whether the current data set goes through Analytics processing (Threshold checking, Alert generation) or not. Defaults to false. But when set to true will result in no evaluation of Alerts but the data gets stored.",
            "example": false,
            "in": "query",
            "name": "disableAnalyticsProcessing",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "The Identifier of the resource object",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The stats are added successfully"
          }
        },

        "tags": [
          "Resource"
        ],
        "deprecated": false,
        "description": "In this case, the adapter instance used for pushing data will default to <i>vRealizeOpsMgrAPI</i>. It is recommended (though not required) to use this API when the resource was created using the API <code>POST /api/resources/{id}/adapters/{adapterInstanceId}</code>. Otherwise an additional adapter instance might be created.",
        "operationId": "addStatsUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/stat-contents"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/stat-contents"
              }
            }
          },
          "description": "The stats for the Resource",
          "required": true
        },
        "summary": "Add Stats to a Resource"
      }
    },
    "/api/resources/{id}/stats/adapterkinds/{adapterKind}": {
      "post": {
        "parameters": [
          {
            "description": "The ID of the adapter kind that will push the stats",
            "in": "path",
            "name": "adapterKind",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "Whether the current data set goes through Analytics processing (Threshold checking, Alert generation) or not. Defaults to false. But when set to true will result in no evaluation of Alerts but the data gets stored.",
            "example": false,
            "in": "query",
            "name": "disableAnalyticsProcessing",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "The Identifier of the resource object",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The stats are added successfully"
          }
        },

        "tags": [
          "Resource"
        ],
        "deprecated": false,
        "description": "If the adapter kind specified is not present in the system, it will be created dynamically. However if the adapter kind specified already exists, then it must be of <i>OPENAPI</i> adapter kind type.",
        "operationId": "addStatsUsingPushAdapterKindUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/stat-contents"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/stat-contents"
              }
            }
          },
          "description": "The stats for the Resource",
          "required": true
        },
        "summary": "Add Stats to a Resource along with associating an adapter instance of the specified adapter kind as the source of data"
      }
    },
    "/api/resources/{id}/stats/dt": {
      "get": {
        "parameters": [
          {
            "description": "The beginning date as a long value of the range of stats to return\nValue measures the number of milliseconds since January 1, 1970 00:00:00 UTC",
            "in": "query",
            "name": "begin",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "The ending date as a long value of the range of stats to return\nlong value is number of milliseconds since January 1, 1970 00:00:00 UTC",
            "in": "query",
            "name": "end",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "The Identifier of the resource object",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Collection of Resource identifiers for which Stats and DT values need to be retrieved",
            "explode": true,
            "in": "query",
            "name": "resourceIds",
            "required": true,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Flag that indicates whether stats should be smoothened or not. Default value is true",
            "in": "query",
            "name": "showSmooth",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The smooth precision, default value is 2.0",
            "in": "query",
            "name": "smoothFactor",
            "required": false,
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "Collection of StatKeys for which Stats and DT values need to be retrieved",
            "explode": true,
            "in": "query",
            "name": "statKeys",
            "required": true,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/stats-of-resources"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "No Custom Example is Available"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/stats-of-resources"
                }
              }
            },
            "description": "Object, containing a map of List of Stat objects keyed by each resource UUID"
          }
        },

        "tags": [
          "Resource"
        ],
        "deprecated": false,
        "description": "The API returns 24 hours of Stats and DT data by default for the specified Resource.",
        "operationId": "getDTStatsOfResourceUsingGET",
        "summary": "Get Stats and Dynamic Threshold values for one or more StatKeys and for a Collection of Resources"
      }
    },
    "/api/resources/{id}/stats/latest": {
      "get": {
        "parameters": [
          {
            "description": "Indicates whether to report only \"current\" stat values, i.e. skip the stat-s that haven't published any value\nduring recent collection cycles.",
            "in": "query",
            "name": "currentOnly",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The StatsQuery object which can be used to refine the query",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The maximum number of samples to return when querying latest stats.\nDefaults to 1 so that when processing the query if it is omitted\nthe response would contain a single sample",
            "in": "query",
            "name": "maxSamples",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Indicates whether specified statKey-s of query should be forcibly treated as metrics (does not include instanced stats)",
            "in": "query",
            "name": "metrics",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Array of Resource ids for which the latest stats should be fetched",
            "explode": true,
            "in": "query",
            "name": "resourceId",
            "required": false,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Array of stat keys for which the latest stats should be returned",
            "explode": true,
            "in": "query",
            "name": "statKey",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Indicates whether stat values should be wrapped for application/xml response content type.\nThis flag is false by default and not needed for application/json response.\nIf set to true \"statValues\" will be returned instead of \"values\" for all content types.",
            "in": "query",
            "name": "wrapStatValues",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"values\" : [ {\n    \"resourceId\" : \"1a44ce75-792e-4719-9ce0-6753f77238a7\",\n    \"stat-list\" : {\n      \"stat\" : [ {\n        \"timestamps\" : [ 1689236478089, 1689236488089 ],\n        \"statKey\" : {\n          \"key\" : \"stat|key1\"\n        },\n        \"rollUpType\" : \"NONE\",\n        \"intervalUnit\" : {\n          \"quantifier\" : 5,\n          \"intervalType\" : \"MINUTES\"\n        },\n        \"data\" : [ 1.0, 2.0 ],\n        \"dtTimestamps\" : [ 1689236478089, 1689236488089, 1689236498089 ],\n        \"minThresholdData\" : [ 0.5, 1.0 ],\n        \"maxThresholdData\" : [ 1.5, 3.0 ],\n        \"smoothValues\" : [ 1.5, 1.5 ]\n      } ]\n    }\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/stats-of-resources"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:stats-of-resources xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:stats-of-resource>\n        <ops:resourceId>7c88f898-6361-4612-a54f-2be13a7b0ff6</ops:resourceId>\n        <ops:stat-list>\n            <ops:stat>\n                <ops:timestamps>1689236478091 1689236488091</ops:timestamps>\n                <ops:statKey>\n                    <ops:key>stat|key1</ops:key>\n                </ops:statKey>\n                <ops:rollUpType>NONE</ops:rollUpType>\n                <ops:intervalUnit>\n                    <ops:quantifier>5</ops:quantifier>\n                    <ops:intervalType>MINUTES</ops:intervalType>\n                </ops:intervalUnit>\n                <ops:data>1.0 2.0</ops:data>\n                <ops:dtTimestamps>1689236478091 1689236488091 1689236498091</ops:dtTimestamps>\n                <ops:minThresholdData>0.5 1.0</ops:minThresholdData>\n                <ops:maxThresholdData>1.5 3.0</ops:maxThresholdData>\n                <ops:smoothValues>1.5 1.5</ops:smoothValues>\n            </ops:stat>\n        </ops:stat-list>\n    </ops:stats-of-resource>\n</ops:stats-of-resources>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/stats-of-resources"
                }
              }
            },
            "description": "Object, containing a map of List of Stat objects keyed by each resource UUID"
          }
        },

        "tags": [
          "Resource"
        ],
        "deprecated": false,
        "description": "Get the latest stat for a given Resource and given a set of attributes",
        "operationId": "getLatestStatsUsingGET",
        "summary": "Get the latest stat for a given Resource and given a set of attributes"
      }
    },
    "/api/resources/{id}/stats/query": {
      "post": {
        "parameters": [
          {
            "description": "The Identifier of the resource object",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"values\" : [ {\n    \"resourceId\" : \"672135d0-0690-4dda-a068-8d638c05a96f\",\n    \"stat-list\" : {\n      \"stat\" : [ {\n        \"timestamps\" : [ 1689236478286, 1689236488286 ],\n        \"statKey\" : {\n          \"key\" : \"stat|key1\"\n        },\n        \"rollUpType\" : \"NONE\",\n        \"intervalUnit\" : {\n          \"quantifier\" : 5,\n          \"intervalType\" : \"MINUTES\"\n        },\n        \"data\" : [ 1.0, 2.0 ],\n        \"dtTimestamps\" : [ 1689236478286, 1689236488286, 1689236498286 ],\n        \"minThresholdData\" : [ 0.5, 1.0 ],\n        \"maxThresholdData\" : [ 1.5, 3.0 ],\n        \"smoothValues\" : [ 1.5, 1.5 ]\n      } ]\n    }\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/stats-of-resources"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:stats-of-resources xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:stats-of-resource>\n        <ops:resourceId>3acfb195-b351-4e3c-acee-8c1b098c7935</ops:resourceId>\n        <ops:stat-list>\n            <ops:stat>\n                <ops:timestamps>1689236478286 1689236488286</ops:timestamps>\n                <ops:statKey>\n                    <ops:key>stat|key1</ops:key>\n                </ops:statKey>\n                <ops:rollUpType>NONE</ops:rollUpType>\n                <ops:intervalUnit>\n                    <ops:quantifier>5</ops:quantifier>\n                    <ops:intervalType>MINUTES</ops:intervalType>\n                </ops:intervalUnit>\n                <ops:data>1.0 2.0</ops:data>\n                <ops:dtTimestamps>1689236478286 1689236488286 1689236498286</ops:dtTimestamps>\n                <ops:minThresholdData>0.5 1.0</ops:minThresholdData>\n                <ops:maxThresholdData>1.5 3.0</ops:maxThresholdData>\n                <ops:smoothValues>1.5 1.5</ops:smoothValues>\n            </ops:stat>\n        </ops:stat-list>\n    </ops:stats-of-resource>\n</ops:stats-of-resources>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/stats-of-resources"
                }
              }
            },
            "description": "Object, containing a map of List of Stat objects keyed by each resource UUID"
          }
        },

        "tags": [
          "Resource"
        ],
        "deprecated": false,
        "description": "<i><b>NOTE:</b></i> When making an XML request, make sure the <i>statKey</i> field does not contain any key name with spaces.",
        "operationId": "getStatsForResourceUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/stat-query"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/stat-query"
              }
            }
          },
          "description": "The StatsQuery object which can be used to refine the query"
        },
        "summary": "Look up stats of a group of objects with the resource ids"
      }
    },
    "/api/resources/{id}/stats/topn": {
      "get": {
        "parameters": [
          {
            "description": "The beginning date as a long value of the range of stats to return\nValue measures the number of milliseconds since January 1, 1970 00:00:00 UTC\nNOTE: If not provided, 24 hour rearward of ending date is used",
            "in": "query",
            "name": "begin",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Indicates whether to report only \"current\" stat values, i.e. skip the stat-s that haven't published any value\nduring recent collection cycles.",
            "in": "query",
            "name": "currentOnly",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates that the requested stats are based on some dynamic threshold.\n<b>Defaults to false which indicates that stats are not based on dynamic threshold.",
            "in": "query",
            "name": "dt",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The ending date as a long value of the range of stats to return\nLong value is number of milliseconds since January 1, 1970 00:00:00 UTC\nNOTE: The ending date must not be less than the beginning date.\nIf not provided, current time as UTC milliseconds is used",
            "in": "query",
            "name": "end",
            "required": false,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "The type of grouping, if not set defaults to ResourceStatGroupBy.RESOURCE",
            "in": "query",
            "name": "groupBy",
            "required": false,
            "schema": {
              "enum": [
                "RESOURCE",
                "STATKEY"
              ],
              "type": "string"
            }
          },
          {
            "description": "The ID of the resource",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Number for the interval type",
            "in": "query",
            "name": "intervalQuantifier",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Interval type requested by the user (e.g: Days, Weeks, Months etc.)",
            "in": "query",
            "name": "intervalType",
            "required": false,
            "schema": {
              "enum": [
                "HOURS",
                "MINUTES",
                "SECONDS",
                "DAYS",
                "WEEKS",
                "MONTHS",
                "YEARS"
              ],
              "type": "string"
            }
          },
          {
            "description": "The maximum number of samples to return when querying latest.\nWhen processing the get latest stats query if it is omitted a value of 1 is assumed.\nA query for the latest samples is not compatible with specifying the RollUpType value.",
            "in": "query",
            "name": "latestMaxSamples",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Indicates whether specified statKey-s of query should be forcibly treated as metrics (does not include instanced stats)",
            "in": "query",
            "name": "metrics",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Array of Resource ids for which the stats should be fetched",
            "explode": true,
            "in": "query",
            "name": "resourceId",
            "required": false,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Rollup Type requested by the user (e.g.: AVG, MIN, MAX etc.)",
            "in": "query",
            "name": "rollUpType",
            "required": false,
            "schema": {
              "enum": [
                "SUM",
                "AVG",
                "MIN",
                "MAX",
                "NONE",
                "LATEST",
                "COUNT"
              ],
              "type": "string"
            }
          },
          {
            "description": "The type of sorting, if not set defaults to ResourceStatSort.ASCENDING",
            "in": "query",
            "name": "sortOrder",
            "required": false,
            "schema": {
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ],
              "type": "string"
            }
          },
          {
            "description": "Array of stat keys for which the stats should be returned",
            "explode": true,
            "in": "query",
            "name": "statKey",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The number of results. Keep in mind if a grouping contains multiple items (eg:\ngrouped by resource, with 4 metrics for the grouping resource) then returning the group with\n4 metrics counts as 4 topN entries. If there are not enough remaining open topN entries to\nreturn an entire group within the topN then the entire group is not returned. *",
            "in": "query",
            "name": "topN",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Indicates whether stat values should be wrapped for application/xml response content type.\nThis flag is false by default and not needed for application/json response.\nIf set to true \"statValues\" will be returned instead of \"values\" for all content types.",
            "in": "query",
            "name": "wrapStatValues",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"groupBy\" : \"RESOURCE\",\n  \"sortOrder\" : \"ASCENDING\",\n  \"resourceStatGroups\" : [ {\n    \"groupKey\" : \"0bc1d5e5-7442-4faf-b3b2-59b6bbbcd9ba\",\n    \"resourceStats\" : [ ]\n  }, {\n    \"groupKey\" : \"fcc88fd3-f798-4f2f-9e0a-51fc2235df6b\",\n    \"resourceStats\" : [ ]\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ResourceStatGroupList"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:resourceStatGroupList xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:groupBy>RESOURCE</ops:groupBy>\n    <ops:sortOrder>ASCENDING</ops:sortOrder>\n    <ops:resourceStatGroups>\n        <ops:resourceStatGroup>\n            <ops:groupKey>62906d4b-3f44-487b-89ff-704bbc3c9ccc</ops:groupKey>\n            <ops:resourceStats/>\n        </ops:resourceStatGroup>\n        <ops:resourceStatGroup>\n            <ops:groupKey>e7d543b1-59db-4eb9-b6f0-fab7e1436f45</ops:groupKey>\n            <ops:resourceStats/>\n        </ops:resourceStatGroup>\n    </ops:resourceStatGroups>\n</ops:resourceStatGroupList>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ResourceStatGroupList"
                }
              }
            },
            "description": "The TopN stats"
          }
        },

        "tags": [
          "Resource"
        ],
        "deprecated": false,
        "description": "Get the TopN stats for a given Resource and given a set of attributes",
        "operationId": "getTopNStatsOfResourceUsingGET",
        "summary": "Get the TopN stats for a given Resource and given a set of attributes"
      }
    },
    "/api/supermetrics": {
      "get": {
        "parameters": [
          {
            "description": "SuperMetrics based on identifiers",
            "explode": true,
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "SuperMetrics based on names",
            "explode": true,
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Page number from which data needs to be displayed (0-based)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Expected number of entries per page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"superMetrics\" : [ {\n    \"id\" : \"97c6f3b9-56aa-4d71-b47f-c00668e740dc\",\n    \"name\" : \"Example SuperMetric for DataCenter\",\n    \"formula\" : \"sumN(\\\\$This:cpu|demandmhz,2)\",\n    \"description\" : \"Sum the CPU usage in MHZ on the assigned resource and its children\"\n  }, {\n    \"id\" : \"f587bf3d-4e6f-497c-ac4f-0fa851d95751\",\n    \"name\" : \"Example SuperMetric for DataCenter\",\n    \"formula\" : \"sumN(\\\\$This:cpu|demandmhz,2)\",\n    \"description\" : \"Sum the CPU usage in MHZ on the assigned resource and its children\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/supermetrics"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:supermetrics xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:supermetric>\n        <ops:id>c0cc2bae-d018-449c-94cb-b14c649552e9</ops:id>\n        <ops:name>Example SuperMetric for DataCenter</ops:name>\n        <ops:formula>sumN(\\$This:cpu|demandmhz,2)</ops:formula>\n        <ops:description>Sum the CPU usage in MHZ on the assigned resource and its children</ops:description>\n    </ops:supermetric>\n    <ops:supermetric>\n        <ops:id>609edce9-22d0-4ca3-bb36-f926dc60e175</ops:id>\n        <ops:name>Example SuperMetric for DataCenter</ops:name>\n        <ops:formula>sumN(\\$This:cpu|demandmhz,2)</ops:formula>\n        <ops:description>Sum the CPU usage in MHZ on the assigned resource and its children</ops:description>\n    </ops:supermetric>\n</ops:supermetrics>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/supermetrics"
                }
              }
            },
            "description": "The SuperMetrics for the given query"
          }
        },

        "tags": [
          "Super Metrics"
        ],
        "deprecated": false,
        "description": "Get a collection of SuperMetrics based on search parameters",
        "operationId": "getSuperMetricsUsingGET",
        "summary": "Get a collection of SuperMetrics based on search parameters"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"2b4f32f0-dede-45be-bd6d-609166a4ee96\",\n  \"name\" : \"Example SuperMetric for DataCenter\",\n  \"formula\" : \"sumN(\\\\$This:cpu|demandmhz,2)\",\n  \"description\" : \"Sum the CPU usage in MHZ on the assigned resource and its children\"\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/supermetric"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:supermetric xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:id>f85dad54-2402-41b3-a06b-e60d88640e82</ops:id>\n    <ops:name>Example SuperMetric for DataCenter</ops:name>\n    <ops:formula>sumN(\\$This:cpu|demandmhz,2)</ops:formula>\n    <ops:description>Sum the CPU usage in MHZ on the assigned resource and its children</ops:description>\n</ops:supermetric>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/supermetric"
                }
              }
            },
            "description": "The created SuperMetric from the server"
          }
        },

        "tags": [
          "Super Metrics"
        ],
        "deprecated": false,
        "description": "Create a SuperMetric with the given name, formula and description",
        "operationId": "createSuperMetricUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supermetric"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/supermetric"
              }
            }
          },
          "description": "The SuperMetric to create",
          "required": true
        },
        "summary": "Create a SuperMetric with the given name, formula and description"
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"15f1742b-ca88-46b6-b689-77a20d7cfb64\",\n  \"name\" : \"Example SuperMetric for DataCenter\",\n  \"formula\" : \"sumN(\\\\$This:cpu|demandmhz,2)\",\n  \"description\" : \"Sum the CPU usage in MHZ on the assigned resource and its children\"\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/supermetric"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:supermetric xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:id>f23d3ebb-9071-410c-a24f-b245ebf683c9</ops:id>\n    <ops:name>Example SuperMetric for DataCenter</ops:name>\n    <ops:formula>sumN(\\$This:cpu|demandmhz,2)</ops:formula>\n    <ops:description>Sum the CPU usage in MHZ on the assigned resource and its children</ops:description>\n</ops:supermetric>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/supermetric"
                }
              }
            },
            "description": "The updated SuperMetric object"
          }
        },

        "tags": [
          "Super Metrics"
        ],
        "deprecated": false,
        "description": "Update a SuperMetric with the given name, formula and description",
        "operationId": "updateSuperMetricUsingPUT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supermetric"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/supermetric"
              }
            }
          },
          "description": "The updated SuperMetric",
          "required": true
        },
        "summary": "Update a SuperMetric with the given name, formula and description"
      }
    },
    "/api/supermetrics/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The Identifier of the SuperMetric to delete",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The super metric is deleted successfully"
          }
        },

        "tags": [
          "Super Metrics"
        ],
        "deprecated": false,
        "description": "Delete a SuperMetric",
        "operationId": "deleteSuperMetricUsingDELETE",
        "summary": "Delete a SuperMetric"
      },
      "get": {
        "parameters": [
          {
            "description": "The Identifier of the SuperMetric",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"8ac27854-6ca1-4a83-8228-25d81eb4b90e\",\n  \"name\" : \"Example SuperMetric for DataCenter\",\n  \"formula\" : \"sumN(\\\\$This:cpu|demandmhz,2)\",\n  \"description\" : \"Sum the CPU usage in MHZ on the assigned resource and its children\"\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/supermetric"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:supermetric xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:id>4754f8a4-3e30-419f-ac3c-1b80b672c48b</ops:id>\n    <ops:name>Example SuperMetric for DataCenter</ops:name>\n    <ops:formula>sumN(\\$This:cpu|demandmhz,2)</ops:formula>\n    <ops:description>Sum the CPU usage in MHZ on the assigned resource and its children</ops:description>\n</ops:supermetric>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/supermetric"
                }
              }
            },
            "description": "The Super Metric with the given identifier"
          }
        },

        "tags": [
          "Super Metrics"
        ],
        "deprecated": false,
        "description": "Get a SuperMetric with the given ID",
        "operationId": "getSuperMetricUsingGET",
        "summary": "Get a SuperMetric with the given id"
      }
    },
    "/api/symptomdefinitions": {
      "get": {
        "parameters": [
          {
            "description": "The adapter kind identifier of the symptom definitions to search for",
            "in": "query",
            "name": "adapterKind",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier(s) of the symptom definitions to search for.  Exact match.",
            "explode": true,
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The substring of the symptom definition's name to search for.  Case-insensitive.",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number from which data needs to be displayed (0-based)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Expected number of entries per page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The resource kind identifier of the symptom definitions to search for",
            "in": "query",
            "name": "resourceKind",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"symptomDefinitions\" : [ {\n    \"id\" : \"SymptomDefinition-1\",\n    \"name\" : \"CPU Too High - only one state now allowed per symptom publicinition\",\n    \"adapterKindKey\" : \"VMWARE\",\n    \"resourceKindKey\" : \"VirtualMachine\",\n    \"waitCycles\" : 0,\n    \"cancelCycles\" : 0,\n    \"state\" : {\n      \"severity\" : \"CRITICAL\",\n      \"condition\" : {\n        \"type\" : \"CONDITION_HT\",\n        \"key\" : \"cpu|demandmhz\",\n        \"operator\" : \"GT_EQ\",\n        \"value\" : \"95\",\n        \"valueType\" : \"NUMERIC\",\n        \"instanced\" : false,\n        \"thresholdType\" : \"STATIC\"\n      }\n    }\n  }, {\n    \"id\" : \"SymptomDefinition-1\",\n    \"name\" : \"CPU Too High - only one state now allowed per symptom publicinition\",\n    \"adapterKindKey\" : \"VMWARE\",\n    \"resourceKindKey\" : \"VirtualMachine\",\n    \"waitCycles\" : 0,\n    \"cancelCycles\" : 0,\n    \"state\" : {\n      \"severity\" : \"CRITICAL\",\n      \"condition\" : {\n        \"type\" : \"CONDITION_HT\",\n        \"key\" : \"cpu|demandmhz\",\n        \"operator\" : \"GT_EQ\",\n        \"value\" : \"70\",\n        \"valueType\" : \"NUMERIC\",\n        \"instanced\" : false,\n        \"thresholdType\" : \"STATIC\"\n      }\n    }\n  }, {\n    \"id\" : \"SymptomDefinition-1\",\n    \"name\" : \"CPU Too High - only one state now allowed per symptom publicinition\",\n    \"adapterKindKey\" : \"VMWARE\",\n    \"resourceKindKey\" : \"VirtualMachine\",\n    \"waitCycles\" : 0,\n    \"cancelCycles\" : 0,\n    \"state\" : {\n      \"severity\" : \"WARNING\",\n      \"condition\" : {\n        \"type\" : \"CONDITION_HT\",\n        \"key\" : \"cpu|demandmhz\",\n        \"operator\" : \"GT_EQ\",\n        \"value\" : \"50\",\n        \"valueType\" : \"NUMERIC\",\n        \"instanced\" : false,\n        \"thresholdType\" : \"STATIC\"\n      }\n    }\n  }, {\n    \"id\" : \"SymptomDefinition-1\",\n    \"name\" : \"CPU Too High - only one state now allowed per symptom publicinition\",\n    \"adapterKindKey\" : \"VMWARE\",\n    \"resourceKindKey\" : \"VirtualMachine\",\n    \"waitCycles\" : 0,\n    \"cancelCycles\" : 0,\n    \"state\" : {\n      \"severity\" : \"INFORMATION\",\n      \"condition\" : {\n        \"type\" : \"CONDITION_PROPERTY_NUMERIC\",\n        \"value\" : 8.0,\n        \"operator\" : \"LT_EQ\",\n        \"key\" : \"system|installed_memGB\",\n        \"instanced\" : false,\n        \"thresholdType\" : \"STATIC\"\n      }\n    }\n  }, {\n    \"id\" : \"SymptomDefinition-1\",\n    \"name\" : \"CPU Too High - only one state now allowed per symptom publicinition\",\n    \"adapterKindKey\" : \"VMWARE\",\n    \"resourceKindKey\" : \"VirtualMachine\",\n    \"waitCycles\" : 0,\n    \"cancelCycles\" : 0,\n    \"state\" : {\n      \"severity\" : \"NONE\",\n      \"condition\" : {\n        \"type\" : \"CONDITION_MESSAGE_EVENT\",\n        \"eventType\" : \"RESOURCE_DOWN\",\n        \"message\" : \"message event conditions are of eventType NOTIFICATION, RESOURCE_DOWN, SYSTEM_DEGRADATION, and compare message to event message via EQ or CONTAINS operator\",\n        \"operator\" : \"CONTAINS\"\n      }\n    }\n  }, {\n    \"id\" : \"SymptomDefinition-1\",\n    \"name\" : \"CPU Too High - only one state now allowed per symptom publicinition\",\n    \"adapterKindKey\" : \"VMWARE\",\n    \"resourceKindKey\" : \"VirtualMachine\",\n    \"waitCycles\" : 0,\n    \"cancelCycles\" : 0,\n    \"state\" : {\n      \"severity\" : \"UNKNOWN\",\n      \"condition\" : {\n        \"type\" : \"CONDITION_METRIC_EVENT\",\n        \"hardThresholdEventType\" : \"ABOVE\",\n        \"statKey\" : \"cpu|demandmhz\"\n      }\n    }\n  }, {\n    \"id\" : \"SymptomDefinition-1\",\n    \"name\" : \"CPU Too High - only one state now allowed per symptom publicinition\",\n    \"adapterKindKey\" : \"VMWARE\",\n    \"resourceKindKey\" : \"VirtualMachine\",\n    \"waitCycles\" : 0,\n    \"cancelCycles\" : 0,\n    \"state\" : {\n      \"severity\" : \"INFORMATION\",\n      \"condition\" : {\n        \"type\" : \"CONDITION_FAULT\",\n        \"faultKey\" : \"FaultKey - FaultKey matches to a FaultEvent's FaultState\",\n        \"faultEvents\" : [ \"FaultEvent1\", \"FaultEvent2\" ]\n      }\n    }\n  }, {\n    \"id\" : \"SymptomDefinition-2\",\n    \"name\" : \"Memory High Usage Percentage - only one state now allowed per symptom publicinition\",\n    \"adapterKindKey\" : \"VMWARE\",\n    \"resourceKindKey\" : \"HostSystem\",\n    \"waitCycles\" : 0,\n    \"cancelCycles\" : 0,\n    \"state\" : {\n      \"severity\" : \"CRITICAL\",\n      \"condition\" : {\n        \"type\" : \"CONDITION_HT\",\n        \"key\" : \"mem|host_usagePct\",\n        \"operator\" : \"GT_EQ\",\n        \"value\" : \"95\",\n        \"valueType\" : \"NUMERIC\",\n        \"instanced\" : false,\n        \"thresholdType\" : \"STATIC\"\n      }\n    }\n  }, {\n    \"id\" : \"SymptomDefinition-2\",\n    \"name\" : \"Memory High Usage Percentage - only one state now allowed per symptom publicinition\",\n    \"adapterKindKey\" : \"VMWARE\",\n    \"resourceKindKey\" : \"HostSystem\",\n    \"waitCycles\" : 0,\n    \"cancelCycles\" : 0,\n    \"state\" : {\n      \"severity\" : \"IMMEDIATE\",\n      \"condition\" : {\n        \"type\" : \"CONDITION_HT\",\n        \"key\" : \"mem|host_usagePct\",\n        \"operator\" : \"GT_EQ\",\n        \"value\" : \"70\",\n        \"valueType\" : \"NUMERIC\",\n        \"instanced\" : false,\n        \"thresholdType\" : \"STATIC\"\n      }\n    }\n  }, {\n    \"id\" : \"SymptomDefinition-2\",\n    \"name\" : \"Memory High Usage Percentage - only one state now allowed per symptom publicinition\",\n    \"adapterKindKey\" : \"VMWARE\",\n    \"resourceKindKey\" : \"HostSystem\",\n    \"waitCycles\" : 0,\n    \"cancelCycles\" : 0,\n    \"state\" : {\n      \"severity\" : \"WARNING\",\n      \"condition\" : {\n        \"type\" : \"CONDITION_HT\",\n        \"key\" : \"mem|host_usagePct\",\n        \"operator\" : \"GT_EQ\",\n        \"value\" : \"50\",\n        \"valueType\" : \"NUMERIC\",\n        \"instanced\" : false,\n        \"thresholdType\" : \"STATIC\"\n      }\n    }\n  }, {\n    \"id\" : \"SymptomDefinition-2\",\n    \"name\" : \"Memory High Usage Percentage - only one state now allowed per symptom publicinition\",\n    \"adapterKindKey\" : \"VMWARE\",\n    \"resourceKindKey\" : \"HostSystem\",\n    \"waitCycles\" : 0,\n    \"cancelCycles\" : 0,\n    \"state\" : {\n      \"severity\" : \"INFORMATION\",\n      \"condition\" : {\n        \"type\" : \"stringPropertySymptomCondition\",\n        \"stringValue\" : \"PoweredOff\",\n        \"operator\" : \"EQ\",\n        \"key\" : \"system|power_state\",\n        \"instanced\" : false,\n        \"thresholdType\" : \"STATIC\"\n      }\n    }\n  }, {\n    \"id\" : \"SymptomDefinition-2\",\n    \"name\" : \"Memory High Usage Percentage - only one state now allowed per symptom publicinition\",\n    \"adapterKindKey\" : \"VMWARE\",\n    \"resourceKindKey\" : \"HostSystem\",\n    \"waitCycles\" : 0,\n    \"cancelCycles\" : 0,\n    \"state\" : {\n      \"severity\" : \"WARNING\",\n      \"condition\" : {\n        \"type\" : \"CONDITION_MESSAGE_EVENT\",\n        \"eventType\" : \"RESOURCE_DOWN\",\n        \"message\" : \"message event conditions are of eventType NOTIFICATION, RESOURCE_DOWN, SYSTEM_DEGRADATION, and compare message to event message via EQ or CONTAINS operator\",\n        \"operator\" : \"CONTAINS\"\n      }\n    }\n  }, {\n    \"id\" : \"SymptomDefinition-2\",\n    \"name\" : \"Memory High Usage Percentage - only one state now allowed per symptom publicinition\",\n    \"adapterKindKey\" : \"VMWARE\",\n    \"resourceKindKey\" : \"HostSystem\",\n    \"waitCycles\" : 0,\n    \"cancelCycles\" : 0,\n    \"state\" : {\n      \"severity\" : \"WARNING\",\n      \"condition\" : {\n        \"type\" : \"CONDITION_METRIC_EVENT\",\n        \"hardThresholdEventType\" : \"ABOVE\",\n        \"statKey\" : \"cpu|demandmhz\"\n      }\n    }\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/symptom-definitions"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:symptom-definitions xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:symptom-definition id=\"SymptomDefinition-1\" adapterKindKey=\"VMWARE\" resourceKindKey=\"VirtualMachine\" waitCycles=\"0\" cancelCycles=\"0\">\n        <ops:name>CPU Too High - only one state now allowed per symptom publicinition</ops:name>\n        <ops:state severity=\"CRITICAL\">\n            <ops:condition xsi:type=\"ops:htCondition\">\n                <ops:key>cpu|demandmhz</ops:key>\n                <ops:operator>GT_EQ</ops:operator>\n                <ops:value>95</ops:value>\n                <ops:valueType>NUMERIC</ops:valueType>\n                <ops:instanced>false</ops:instanced>\n                <ops:thresholdType>STATIC</ops:thresholdType>\n            </ops:condition>\n        </ops:state>\n    </ops:symptom-definition>\n    <ops:symptom-definition id=\"SymptomDefinition-1\" adapterKindKey=\"VMWARE\" resourceKindKey=\"VirtualMachine\" waitCycles=\"0\" cancelCycles=\"0\">\n        <ops:name>CPU Too High - only one state now allowed per symptom publicinition</ops:name>\n        <ops:state severity=\"CRITICAL\">\n            <ops:condition xsi:type=\"ops:htCondition\">\n                <ops:key>cpu|demandmhz</ops:key>\n                <ops:operator>GT_EQ</ops:operator>\n                <ops:value>70</ops:value>\n                <ops:valueType>NUMERIC</ops:valueType>\n                <ops:instanced>false</ops:instanced>\n                <ops:thresholdType>STATIC</ops:thresholdType>\n            </ops:condition>\n        </ops:state>\n    </ops:symptom-definition>\n    <ops:symptom-definition id=\"SymptomDefinition-1\" adapterKindKey=\"VMWARE\" resourceKindKey=\"VirtualMachine\" waitCycles=\"0\" cancelCycles=\"0\">\n        <ops:name>CPU Too High - only one state now allowed per symptom publicinition</ops:name>\n        <ops:state severity=\"WARNING\">\n            <ops:condition xsi:type=\"ops:htCondition\">\n                <ops:key>cpu|demandmhz</ops:key>\n                <ops:operator>GT_EQ</ops:operator>\n                <ops:value>50</ops:value>\n                <ops:valueType>NUMERIC</ops:valueType>\n                <ops:instanced>false</ops:instanced>\n                <ops:thresholdType>STATIC</ops:thresholdType>\n            </ops:condition>\n        </ops:state>\n    </ops:symptom-definition>\n    <ops:symptom-definition id=\"SymptomDefinition-1\" adapterKindKey=\"VMWARE\" resourceKindKey=\"VirtualMachine\" waitCycles=\"0\" cancelCycles=\"0\">\n        <ops:name>CPU Too High - only one state now allowed per symptom publicinition</ops:name>\n        <ops:state severity=\"INFORMATION\">\n            <ops:condition xsi:type=\"ops:numericPropertyCondition\">\n                <ops:operator>LT_EQ</ops:operator>\n                <ops:key>system|installed_memGB</ops:key>\n                <ops:instanced>false</ops:instanced>\n                <ops:thresholdType>STATIC</ops:thresholdType>\n                <ops:value>8.0</ops:value>\n            </ops:condition>\n        </ops:state>\n    </ops:symptom-definition>\n    <ops:symptom-definition id=\"SymptomDefinition-1\" adapterKindKey=\"VMWARE\" resourceKindKey=\"VirtualMachine\" waitCycles=\"0\" cancelCycles=\"0\">\n        <ops:name>CPU Too High - only one state now allowed per symptom publicinition</ops:name>\n        <ops:state severity=\"NONE\">\n            <ops:condition xsi:type=\"ops:messageEventCondition\" eventType=\"RESOURCE_DOWN\" operator=\"CONTAINS\">\n                <ops:message>message event conditions are of eventType NOTIFICATION, RESOURCE_DOWN, SYSTEM_DEGRADATION, and compare message to event message via EQ or CONTAINS operator</ops:message>\n            </ops:condition>\n        </ops:state>\n    </ops:symptom-definition>\n    <ops:symptom-definition id=\"SymptomDefinition-1\" adapterKindKey=\"VMWARE\" resourceKindKey=\"VirtualMachine\" waitCycles=\"0\" cancelCycles=\"0\">\n        <ops:name>CPU Too High - only one state now allowed per symptom publicinition</ops:name>\n        <ops:state severity=\"UNKNOWN\">\n            <ops:condition xsi:type=\"ops:metricEventCondition\">\n                <ops:hardThresholdEventType>ABOVE</ops:hardThresholdEventType>\n                <ops:statKey>cpu|demandmhz</ops:statKey>\n            </ops:condition>\n        </ops:state>\n    </ops:symptom-definition>\n    <ops:symptom-definition id=\"SymptomDefinition-1\" adapterKindKey=\"VMWARE\" resourceKindKey=\"VirtualMachine\" waitCycles=\"0\" cancelCycles=\"0\">\n        <ops:name>CPU Too High - only one state now allowed per symptom publicinition</ops:name>\n        <ops:state severity=\"INFORMATION\">\n            <ops:condition xsi:type=\"ops:faultCondition\">\n                <ops:faultKey>FaultKey - FaultKey matches to a FaultEvent's FaultState</ops:faultKey>\n                <ops:faultEvents>FaultEvent1 FaultEvent2</ops:faultEvents>\n            </ops:condition>\n        </ops:state>\n    </ops:symptom-definition>\n    <ops:symptom-definition id=\"SymptomDefinition-2\" adapterKindKey=\"VMWARE\" resourceKindKey=\"HostSystem\" waitCycles=\"0\" cancelCycles=\"0\">\n        <ops:name>Memory High Usage Percentage - only one state now allowed per symptom publicinition</ops:name>\n        <ops:state severity=\"CRITICAL\">\n            <ops:condition xsi:type=\"ops:htCondition\">\n                <ops:key>mem|host_usagePct</ops:key>\n                <ops:operator>GT_EQ</ops:operator>\n                <ops:value>95</ops:value>\n                <ops:valueType>NUMERIC</ops:valueType>\n                <ops:instanced>false</ops:instanced>\n                <ops:thresholdType>STATIC</ops:thresholdType>\n            </ops:condition>\n        </ops:state>\n    </ops:symptom-definition>\n    <ops:symptom-definition id=\"SymptomDefinition-2\" adapterKindKey=\"VMWARE\" resourceKindKey=\"HostSystem\" waitCycles=\"0\" cancelCycles=\"0\">\n        <ops:name>Memory High Usage Percentage - only one state now allowed per symptom publicinition</ops:name>\n        <ops:state severity=\"IMMEDIATE\">\n            <ops:condition xsi:type=\"ops:htCondition\">\n                <ops:key>mem|host_usagePct</ops:key>\n                <ops:operator>GT_EQ</ops:operator>\n                <ops:value>70</ops:value>\n                <ops:valueType>NUMERIC</ops:valueType>\n                <ops:instanced>false</ops:instanced>\n                <ops:thresholdType>STATIC</ops:thresholdType>\n            </ops:condition>\n        </ops:state>\n    </ops:symptom-definition>\n    <ops:symptom-definition id=\"SymptomDefinition-2\" adapterKindKey=\"VMWARE\" resourceKindKey=\"HostSystem\" waitCycles=\"0\" cancelCycles=\"0\">\n        <ops:name>Memory High Usage Percentage - only one state now allowed per symptom publicinition</ops:name>\n        <ops:state severity=\"WARNING\">\n            <ops:condition xsi:type=\"ops:htCondition\">\n                <ops:key>mem|host_usagePct</ops:key>\n                <ops:operator>GT_EQ</ops:operator>\n                <ops:value>50</ops:value>\n                <ops:valueType>NUMERIC</ops:valueType>\n                <ops:instanced>false</ops:instanced>\n                <ops:thresholdType>STATIC</ops:thresholdType>\n            </ops:condition>\n        </ops:state>\n    </ops:symptom-definition>\n    <ops:symptom-definition id=\"SymptomDefinition-2\" adapterKindKey=\"VMWARE\" resourceKindKey=\"HostSystem\" waitCycles=\"0\" cancelCycles=\"0\">\n        <ops:name>Memory High Usage Percentage - only one state now allowed per symptom publicinition</ops:name>\n        <ops:state severity=\"INFORMATION\">\n            <ops:condition xsi:type=\"ops:stringPropertySymptomCondition\">\n                <ops:operator>EQ</ops:operator>\n                <ops:key>system|power_state</ops:key>\n                <ops:instanced>false</ops:instanced>\n                <ops:thresholdType>STATIC</ops:thresholdType>\n                <ops:stringValue>PoweredOff</ops:stringValue>\n            </ops:condition>\n        </ops:state>\n    </ops:symptom-definition>\n    <ops:symptom-definition id=\"SymptomDefinition-2\" adapterKindKey=\"VMWARE\" resourceKindKey=\"HostSystem\" waitCycles=\"0\" cancelCycles=\"0\">\n        <ops:name>Memory High Usage Percentage - only one state now allowed per symptom publicinition</ops:name>\n        <ops:state severity=\"WARNING\">\n            <ops:condition xsi:type=\"ops:messageEventCondition\" eventType=\"RESOURCE_DOWN\" operator=\"CONTAINS\">\n                <ops:message>message event conditions are of eventType NOTIFICATION, RESOURCE_DOWN, SYSTEM_DEGRADATION, and compare message to event message via EQ or CONTAINS operator</ops:message>\n            </ops:condition>\n        </ops:state>\n    </ops:symptom-definition>\n    <ops:symptom-definition id=\"SymptomDefinition-2\" adapterKindKey=\"VMWARE\" resourceKindKey=\"HostSystem\" waitCycles=\"0\" cancelCycles=\"0\">\n        <ops:name>Memory High Usage Percentage - only one state now allowed per symptom publicinition</ops:name>\n        <ops:state severity=\"WARNING\">\n            <ops:condition xsi:type=\"ops:metricEventCondition\">\n                <ops:hardThresholdEventType>ABOVE</ops:hardThresholdEventType>\n                <ops:statKey>cpu|demandmhz</ops:statKey>\n            </ops:condition>\n        </ops:state>\n    </ops:symptom-definition>\n</ops:symptom-definitions>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/symptom-definitions"
                }
              }
            },
            "description": "The list of Symptom Definitions"
          }
        },

        "tags": [
          "Symptoms"
        ],
        "deprecated": false,
        "description": "<i><b>NOTE:</b></i> When making an XML request, make sure the <i>statKey</i> field does not contain any key name with spaces.",
        "operationId": "getSymptomDefinitionsUsingGET",
        "summary": "Get Symptom Definitions"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"name\" : \"CPU Too High - only one state now allowed per symptom publicinition\",\n  \"adapterKindKey\" : \"VMWARE\",\n  \"resourceKindKey\" : \"VirtualMachine\",\n  \"waitCycles\" : 0,\n  \"cancelCycles\" : 0,\n  \"state\" : {\n    \"severity\" : \"CRITICAL\",\n    \"condition\" : {\n      \"type\" : \"CONDITION_HT\",\n      \"key\" : \"cpu|demandmhz\",\n      \"operator\" : \"GT_EQ\",\n      \"value\" : \"95\",\n      \"valueType\" : \"NUMERIC\",\n      \"instanced\" : false,\n      \"thresholdType\" : \"STATIC\"\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/symptom-definition"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:symptom-definition adapterKindKey=\"VMWARE\" resourceKindKey=\"VirtualMachine\" waitCycles=\"0\" cancelCycles=\"0\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:name>CPU Too High - only one state now allowed per symptom publicinition</ops:name>\n    <ops:state severity=\"CRITICAL\">\n        <ops:condition xsi:type=\"ops:htCondition\">\n            <ops:key>cpu|demandmhz</ops:key>\n            <ops:operator>GT_EQ</ops:operator>\n            <ops:value>95</ops:value>\n            <ops:valueType>NUMERIC</ops:valueType>\n            <ops:instanced>false</ops:instanced>\n            <ops:thresholdType>STATIC</ops:thresholdType>\n        </ops:condition>\n    </ops:state>\n</ops:symptom-definition>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/symptom-definition"
                }
              }
            },
            "description": "The created Symptom Definition"
          }
        },

        "tags": [
          "Symptoms"
        ],
        "deprecated": false,
        "description": "The symptom definition identifier must be null and will be generated by the system.\nA symptom definition contains a symptom state, there may only be one symptom state per symptom definition.",
        "operationId": "createSymptomDefinitionUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/symptom-definition"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/symptom-definition"
              }
            }
          },
          "description": "The Symptom Definition to create",
          "required": true
        },
        "summary": "Create the Symptom Definition"
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"SymptomDefinition-1\",\n  \"name\" : \"CPU Too High - only one state now allowed per symptom publicinition\",\n  \"adapterKindKey\" : \"VMWARE\",\n  \"resourceKindKey\" : \"VirtualMachine\",\n  \"waitCycles\" : 0,\n  \"cancelCycles\" : 0,\n  \"state\" : {\n    \"severity\" : \"CRITICAL\",\n    \"condition\" : {\n      \"type\" : \"CONDITION_HT\",\n      \"key\" : \"cpu|demandmhz\",\n      \"operator\" : \"GT_EQ\",\n      \"value\" : \"95\",\n      \"valueType\" : \"NUMERIC\",\n      \"instanced\" : false,\n      \"thresholdType\" : \"STATIC\"\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/symptom-definition"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:symptom-definition id=\"SymptomDefinition-1\" adapterKindKey=\"VMWARE\" resourceKindKey=\"VirtualMachine\" waitCycles=\"0\" cancelCycles=\"0\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:name>CPU Too High - only one state now allowed per symptom publicinition</ops:name>\n    <ops:state severity=\"CRITICAL\">\n        <ops:condition xsi:type=\"ops:htCondition\">\n            <ops:key>cpu|demandmhz</ops:key>\n            <ops:operator>GT_EQ</ops:operator>\n            <ops:value>95</ops:value>\n            <ops:valueType>NUMERIC</ops:valueType>\n            <ops:instanced>false</ops:instanced>\n            <ops:thresholdType>STATIC</ops:thresholdType>\n        </ops:condition>\n    </ops:state>\n</ops:symptom-definition>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/symptom-definition"
                }
              }
            },
            "description": "The updated Symptom Definition"
          }
        },

        "tags": [
          "Symptoms"
        ],
        "deprecated": false,
        "description": "Update an existing Symptom Definition",
        "operationId": "updateSymptomDefinitionUsingPUT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/symptom-definition"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/symptom-definition"
              }
            }
          },
          "description": "The Symptom Definition to update",
          "required": true
        },
        "summary": "Update an existing Symptom Definition"
      }
    },
    "/api/symptomdefinitions/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The identifier of the Symptom Definition to delete",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The symptom definition is deleted successfully"
          }
        },

        "tags": [
          "Symptoms"
        ],
        "deprecated": false,
        "description": "Delete a Symptom Definition",
        "operationId": "deleteSymptomDefinitionUsingDELETE",
        "summary": "Delete a Symptom Definition"
      },
      "get": {
        "parameters": [
          {
            "description": "The id of the Symptom Definition",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"id\" : \"SymptomDefinition-2\",\n  \"name\" : \"Memory High Usage Percentage - only one state now allowed per symptom publicinition\",\n  \"adapterKindKey\" : \"VMWARE\",\n  \"resourceKindKey\" : \"HostSystem\",\n  \"waitCycles\" : 0,\n  \"cancelCycles\" : 0,\n  \"state\" : {\n    \"severity\" : \"CRITICAL\",\n    \"condition\" : {\n      \"type\" : \"CONDITION_HT\",\n      \"key\" : \"mem|host_usagePct\",\n      \"operator\" : \"GT_EQ\",\n      \"value\" : \"95\",\n      \"valueType\" : \"NUMERIC\",\n      \"instanced\" : false,\n      \"thresholdType\" : \"STATIC\"\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/symptom-definition"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:symptom-definition id=\"SymptomDefinition-2\" adapterKindKey=\"VMWARE\" resourceKindKey=\"HostSystem\" waitCycles=\"0\" cancelCycles=\"0\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:name>Memory High Usage Percentage - only one state now allowed per symptom publicinition</ops:name>\n    <ops:state severity=\"CRITICAL\">\n        <ops:condition xsi:type=\"ops:htCondition\">\n            <ops:key>mem|host_usagePct</ops:key>\n            <ops:operator>GT_EQ</ops:operator>\n            <ops:value>95</ops:value>\n            <ops:valueType>NUMERIC</ops:valueType>\n            <ops:instanced>false</ops:instanced>\n            <ops:thresholdType>STATIC</ops:thresholdType>\n        </ops:condition>\n    </ops:state>\n</ops:symptom-definition>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/symptom-definition"
                }
              }
            },
            "description": "The Symptom Definition"
          }
        },

        "tags": [
          "Symptoms"
        ],
        "deprecated": false,
        "description": "Get Symptom Definition specified by id",
        "operationId": "getSymptomDefinitionByKeyUsingGET",
        "summary": "Get Symptom Definition specified by id"
      }
    },
    "/api/symptoms": {
      "get": {
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Boolean that determines whether the results should include inactive Symptoms",
            "in": "query",
            "name": "activeOnly",
            "required": false,
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "Boolean that controls the retrieval of alarm information of the symptom",
            "example": false,
            "in": "query",
            "name": "includeAlarmInfo",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Page number from which data needs to be displayed (0-based)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Expected number of entries per page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "Array of resource identifiers for which Symptoms need to be looked up",
            "explode": true,
            "in": "query",
            "name": "resourceId",
            "required": false,
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"symptom\" : [ {\n    \"id\" : \"31eeaeec-82d5-4037-a59b-efed2e7c8e3a\",\n    \"resourceId\" : \"50000000-0000-0000-0000-000000000005\",\n    \"startTimeUTC\" : 1689232870284,\n    \"updateTimeUTC\" : 1689232870284,\n    \"cancelTimeUTC\" : 0,\n    \"kpi\" : false,\n    \"symptomCriticality\" : \"INFORMATION\",\n    \"symptomDefinitionId\" : \"SymptomDefinition-1\",\n    \"message\" : \"symptom message\"\n  }, {\n    \"id\" : \"18589dea-9999-1234-abba-f1ee73004dac\",\n    \"resourceId\" : \"50000000-0000-0000-0000-000000000005\",\n    \"startTimeUTC\" : 1689232870284,\n    \"updateTimeUTC\" : 1689232870284,\n    \"cancelTimeUTC\" : 0,\n    \"kpi\" : false,\n    \"symptomCriticality\" : \"INFORMATION\",\n    \"symptomDefinitionId\" : \"SymptomDefinition-1\",\n    \"message\" : \"symptom message\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/symptoms"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:symptoms xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:symptom id=\"31eeaeec-82d5-4037-a59b-efed2e7c8e3a\" kpi=\"false\">\n        <ops:resourceId>50000000-0000-0000-0000-000000000005</ops:resourceId>\n        <ops:startTimeUTC>1689232870317</ops:startTimeUTC>\n        <ops:updateTimeUTC>1689232870317</ops:updateTimeUTC>\n        <ops:cancelTimeUTC>0</ops:cancelTimeUTC>\n        <ops:symptomCriticality>INFORMATION</ops:symptomCriticality>\n        <ops:symptomDefinitionId>SymptomDefinition-1</ops:symptomDefinitionId>\n        <ops:message>symptom message</ops:message>\n        <ops:faultDevices/>\n    </ops:symptom>\n    <ops:symptom id=\"18589dea-9999-1234-abba-f1ee73004dac\" kpi=\"false\">\n        <ops:resourceId>50000000-0000-0000-0000-000000000005</ops:resourceId>\n        <ops:startTimeUTC>1689232870317</ops:startTimeUTC>\n        <ops:updateTimeUTC>1689232870317</ops:updateTimeUTC>\n        <ops:cancelTimeUTC>0</ops:cancelTimeUTC>\n        <ops:symptomCriticality>INFORMATION</ops:symptomCriticality>\n        <ops:symptomDefinitionId>SymptomDefinition-1</ops:symptomDefinitionId>\n        <ops:message>symptom message</ops:message>\n        <ops:faultDevices/>\n    </ops:symptom>\n</ops:symptoms>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/symptoms"
                }
              }
            },
            "description": "List of Symptoms in the system"
          }
        },

        "tags": [
          "Symptoms"
        ],
        "deprecated": false,
        "description": "Optionally these Symptoms can be looked up for a specific set of Resources and/or \ncan include Symptoms that are no longer active.\nThe list of Symptoms returned is a collection that supports pagination.",
        "operationId": "getSymptomsUsingGET",
        "summary": "Look up all Symptoms in the system"
      }
    },
    "/api/symptoms/query": {
      "post": {
        "parameters": [
          {
            "description": "Page number from which data needs to be displayed (0-based)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Expected number of entries per page",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\n  \"symptom\" : [ {\n    \"id\" : \"31eeaeec-82d5-4037-a59b-efed2e7c8e3a\",\n    \"resourceId\" : \"50000000-0000-0000-0000-000000000005\",\n    \"startTimeUTC\" : 1689232870472,\n    \"updateTimeUTC\" : 1689232870472,\n    \"cancelTimeUTC\" : 0,\n    \"kpi\" : false,\n    \"symptomCriticality\" : \"INFORMATION\",\n    \"symptomDefinitionId\" : \"SymptomDefinition-1\",\n    \"message\" : \"symptom message\"\n  }, {\n    \"id\" : \"18589dea-9999-1234-abba-f1ee73004dac\",\n    \"resourceId\" : \"50000000-0000-0000-0000-000000000005\",\n    \"startTimeUTC\" : 1689232870472,\n    \"updateTimeUTC\" : 1689232870472,\n    \"cancelTimeUTC\" : 0,\n    \"kpi\" : false,\n    \"symptomCriticality\" : \"INFORMATION\",\n    \"symptomDefinitionId\" : \"SymptomDefinition-1\",\n    \"message\" : \"symptom message\"\n  } ]\n}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/symptoms"
                }
              },
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ops:symptoms xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <ops:symptom id=\"31eeaeec-82d5-4037-a59b-efed2e7c8e3a\" kpi=\"false\">\n        <ops:resourceId>50000000-0000-0000-0000-000000000005</ops:resourceId>\n        <ops:startTimeUTC>1689232870472</ops:startTimeUTC>\n        <ops:updateTimeUTC>1689232870472</ops:updateTimeUTC>\n        <ops:cancelTimeUTC>0</ops:cancelTimeUTC>\n        <ops:symptomCriticality>INFORMATION</ops:symptomCriticality>\n        <ops:symptomDefinitionId>SymptomDefinition-1</ops:symptomDefinitionId>\n        <ops:message>symptom message</ops:message>\n        <ops:faultDevices/>\n    </ops:symptom>\n    <ops:symptom id=\"18589dea-9999-1234-abba-f1ee73004dac\" kpi=\"false\">\n        <ops:resourceId>50000000-0000-0000-0000-000000000005</ops:resourceId>\n        <ops:startTimeUTC>1689232870472</ops:startTimeUTC>\n        <ops:updateTimeUTC>1689232870472</ops:updateTimeUTC>\n        <ops:cancelTimeUTC>0</ops:cancelTimeUTC>\n        <ops:symptomCriticality>INFORMATION</ops:symptomCriticality>\n        <ops:symptomDefinitionId>SymptomDefinition-1</ops:symptomDefinitionId>\n        <ops:message>symptom message</ops:message>\n        <ops:faultDevices/>\n    </ops:symptom>\n</ops:symptoms>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/symptoms"
                }
              }
            },
            "description": "List of all Symptoms that match the given query"
          }
        },

        "tags": [
          "Symptoms"
        ],
        "deprecated": false,
        "description": "The list of Symptoms returned is a collection that supports pagination.",
        "operationId": "querySymptomsUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/symptom-query"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/symptom-query"
              }
            }
          },
          "description": "Query object of the symptom",
          "required": true
        },
        "summary": "Look up a set of Symptoms using a query object"
      }
    }
  },
  "components": {
    "requestBodies": {
      "alert-query": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/alert-query"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/alert-query"
            }
          }
        },
        "description": "The alertQuery criteria",
        "required": true
      },
      "credential": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/credential"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/credential"
            }
          }
        },
        "description": "The Credential Instance information to update",
        "required": true
      },
      "custom-group": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/custom-group"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/custom-group"
            }
          }
        },
        "description": "The custom group definition",
        "required": true
      },
      "custom-profile": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/custom-profile"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/custom-profile"
            }
          }
        },
        "description": "The custom profile definition",
        "required": true
      },
      "event": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/event"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/event"
            }
          }
        },
        "description": "The event object",
        "required": true
      },
      "events": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/events"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/events"
            }
          }
        },
        "description": "The list of events",
        "required": true
      },
      "importCertificateUsingPOST": {
        "content": {
          "application/octet-stream": {
            "schema": {
              "format": "binary",
              "type": "string"
            }
          }
        },
        "required": true
      },
      "notification-plugin": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/notification-plugin"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/notification-plugin"
            }
          }
        },
        "description": "The NotificationPlugin to create, including plugin type and configuration details",
        "required": true
      },
      "property-contents": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/property-contents"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/property-contents"
            }
          }
        },
        "description": "The properties for the Resource",
        "required": true
      },
      "resource": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/resource"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/resource"
            }
          }
        },
        "description": "The request object that contains info necessary to create a new resource",
        "required": true
      },
      "resource-parameters": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/resource-parameters"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/resource-parameters"
            }
          }
        },
        "description": "IDs of resources",
        "required": true
      },
      "resources-property-contents": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/resources-property-contents"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/resources-property-contents"
            }
          }
        },
        "description": "The properties for the Resources",
        "required": true
      },
      "resources-stat-contents": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/resources-stat-contents"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/resources-stat-contents"
            }
          }
        },
        "description": "The Resources and their Stats",
        "required": true
      },
      "scope": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/scope"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/scope"
            }
          }
        },
        "description": "Scope Details to create",
        "required": true
      },
      "stat-contents": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/stat-contents"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/stat-contents"
            }
          }
        },
        "description": "The stats for the Resource",
        "required": true
      },
      "user-role": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/user-role"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/user-role"
            }
          }
        },
        "description": "The UserRole object",
        "required": true
      }
    },
    "schemas": {
      "AlertTypeFilter": {
        "description": "Represents an alert type filter",
        "properties": {
          "alertSubTypes": {
            "description": "Sub Types of the alert",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "alertType": {
            "description": "Type of the alert",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "AlertTypeFilter",
        "type": "object"
      },
      "AlertTypeMapping": {
        "properties": {
          "subtypeIds": {
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "subtype",
              "wrapped": false
            }
          },
          "typeId": {
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "type",
              "wrapped": false
            }
          }
        },
        "title": "AlertTypeMapping",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "AlertTypeMapping",
          "wrapped": false
        }
      },
      "ConditionalBaseRate": {
        "properties": {
          "baseRate": {
            "format": "double",
            "type": "number",
            "xml": {
              "attribute": true,
              "name": "baseRate",
              "wrapped": false
            }
          },
          "usageLowerBound": {
            "format": "double",
            "type": "number",
            "xml": {
              "attribute": true,
              "name": "usageLowerBound",
              "wrapped": false
            }
          }
        },
        "title": "ConditionalBaseRate",
        "type": "object"
      },
      "DT-condition": {
        "description": "The Dynamic Threshold Condition",
        "properties": {
          "instanced": {
            "description": "The instance group",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "instanced",
              "wrapped": false
            }
          },
          "key": {
            "description": "The StatKey for the dynamic threshold",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "key",
              "wrapped": false
            }
          },
          "operator": {
            "description": "The dynamic operator",
            "enum": [
              "DT_ABOVE",
              "DT_BELOW",
              "DT_ABNORMAL"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "operator",
              "wrapped": false
            }
          }
        },
        "required": [
          "key",
          "operator"
        ],
        "title": "DT-condition",
        "type": "object"
      },
      "DTSM-condition": {
        "description": "Dynamic Threshold on Super Metrics Condition",
        "properties": {
          "instanced": {
            "description": "The instance group",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "instanced",
              "wrapped": false
            }
          },
          "key": {
            "description": "The SuperMetric Id for the dynamic threshold",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "key",
              "wrapped": false
            }
          },
          "operator": {
            "description": "The dynamic operator",
            "enum": [
              "DT_ABOVE",
              "DT_BELOW",
              "DT_ABNORMAL"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "operator",
              "wrapped": false
            }
          }
        },
        "required": [
          "key"
        ],
        "title": "DTSM-condition",
        "type": "object"
      },
      "HT-condition": {
        "description": "Hard Threshold condition",
        "properties": {
          "instanced": {
            "description": "The instance group",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "instanced",
              "wrapped": false
            }
          },
          "key": {
            "description": "The StatKey for the condition",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "key",
              "wrapped": false
            }
          },
          "operator": {
            "description": "The operator for the condition",
            "enum": [
              "EQ",
              "NOT_EQ",
              "LIKE",
              "LT",
              "GT",
              "LT_EQ",
              "GT_EQ",
              "IN",
              "NOT_IN",
              "EXISTS",
              "CONTAINS",
              "STARTS_WITH",
              "ENDS_WITH",
              "NOT_STARTS_WITH",
              "NOT_ENDS_WITH",
              "NOT_CONTAINS",
              "REGEX",
              "NOT_REGEX",
              "NOT_EXISTS",
              "EMPTY",
              "NOT_EMPTY"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "operator",
              "wrapped": false
            }
          },
          "settingValue": {
            "description": "The setting value",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "settingValue",
              "wrapped": false
            }
          },
          "targetKey": {
            "description": "A target StatKey to compare the values between two metrics.  Required for metric or property threshold type conditions",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "targetKey",
              "wrapped": false
            }
          },
          "thresholdType": {
            "description": "The type of threshold comparison for the right-hand side of the condition: static, metric or property.",
            "enum": [
              "UNKNOWN",
              "STATIC",
              "STATKEY",
              "PROPERTY"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "thresholdType",
              "wrapped": false
            }
          },
          "value": {
            "description": "The static value of the condition",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "value",
              "wrapped": false
            }
          },
          "valueType": {
            "description": "Type of condition value: numeric or string. Type value also controls the type of comparison operators that are applicable",
            "enum": [
              "NUMERIC",
              "STRING"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "valueType",
              "wrapped": false
            }
          }
        },
        "required": [
          "instanced",
          "key",
          "operator",
          "thresholdType",
          "valueType"
        ],
        "title": "HT-condition",
        "type": "object"
      },
      "HTSM-condition": {
        "description": "Hard Threshold numeric Condition on a super metric",
        "properties": {
          "instanced": {
            "description": "The instance group",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "instanced",
              "wrapped": false
            }
          },
          "key": {
            "description": "The super metric key",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "key",
              "wrapped": false
            }
          },
          "operator": {
            "description": "The operator for the condition",
            "enum": [
              "EQ",
              "NOT_EQ",
              "LIKE",
              "LT",
              "GT",
              "LT_EQ",
              "GT_EQ",
              "IN",
              "NOT_IN",
              "EXISTS",
              "CONTAINS",
              "STARTS_WITH",
              "ENDS_WITH",
              "NOT_STARTS_WITH",
              "NOT_ENDS_WITH",
              "NOT_CONTAINS",
              "REGEX",
              "NOT_REGEX",
              "NOT_EXISTS",
              "EMPTY",
              "NOT_EMPTY"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "operator",
              "wrapped": false
            }
          },
          "settingValue": {
            "description": "The setting value",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "settingValue",
              "wrapped": false
            }
          },
          "value": {
            "description": "The value of the condition",
            "format": "double",
            "type": "number",
            "xml": {
              "attribute": false,
              "name": "value",
              "wrapped": false
            }
          }
        },
        "required": [
          "key",
          "operator",
          "value"
        ],
        "title": "HTSM-condition",
        "type": "object"
      },
      "MeteringItem": {
        "description": "The metering item description",
        "properties": {
          "itemName": {
            "description": "The metering item name",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "itemName",
              "wrapped": false
            }
          },
          "metering": {
            "$ref": "#/components/schemas/metering",
            "description": "The metering item details",
            "xml": {
              "attribute": false,
              "name": "metering",
              "wrapped": false
            }
          }
        },
        "required": [
          "itemName",
          "metering"
        ],
        "title": "MeteringItem",
        "type": "object"
      },
      "NamedMetering": {
        "description": "The named metering object",
        "properties": {
          "metering": {
            "$ref": "#/components/schemas/metering",
            "description": "The metering object",
            "xml": {
              "attribute": false,
              "name": "metering",
              "wrapped": false
            }
          },
          "name": {
            "description": "The name of the metering object",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "name",
              "wrapped": false
            }
          }
        },
        "required": [
          "metering",
          "name"
        ],
        "title": "NamedMetering",
        "type": "object"
      },
      "NamedMeteringItem": {
        "description": "The named metering item description",
        "properties": {
          "itemName": {
            "description": "The named metering item name",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "itemName",
              "wrapped": false
            }
          },
          "meterings": {
            "description": "The named metering item details",
            "items": {
              "$ref": "#/components/schemas/NamedMetering"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "meterings",
              "wrapped": false
            }
          }
        },
        "required": [
          "itemName",
          "meterings"
        ],
        "title": "NamedMeteringItem",
        "type": "object"
      },
      "OneTimeMeteringItem": {
        "properties": {
          "itemName": {
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "itemName",
              "wrapped": false
            }
          },
          "oneTimeMetering": {
            "$ref": "#/components/schemas/one-time-metering",
            "xml": {
              "attribute": false,
              "name": "oneTimeMetering",
              "wrapped": false
            }
          }
        },
        "required": [
          "itemName",
          "oneTimeMetering"
        ],
        "title": "OneTimeMeteringItem",
        "type": "object"
      },
      "RateFactor": {
        "properties": {
          "contextMeteringItem": {
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "contextMeteringItem",
              "wrapped": false
            }
          },
          "rateFactor": {
            "format": "double",
            "type": "number",
            "xml": {
              "attribute": true,
              "name": "rateFactor",
              "wrapped": false
            }
          }
        },
        "required": [
          "contextMeteringItem",
          "rateFactor"
        ],
        "title": "RateFactor",
        "type": "object"
      },
      "ResourceFilter": {
        "description": "Filter for resources. If matchResourceIdOnly is specified, alerts are selected if their resource ids\nmatch with the 'resourceId' specified in the filter. Otherwise, the system looks at all the resource's children.\nThe possible set of children can be further filtered based on the <code>childrenResourceKindKeyFilters</code>.",
        "properties": {
          "childrenResourceKindFilters": {
            "description": "If matchResourceIdOnly is set to false, this set allows the system to further filter children\nbased on their Resource Kind keys. This filter is deprecated. Please use childrenResourceKindKeyFilters instead.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "childrenResourceKindKeyFilters": {
            "description": "Filter based on children resource kind keys.",
            "items": {
              "$ref": "#/components/schemas/resource-kind-key"
            },
            "type": "array"
          },
          "matchResourceIdOnly": {
            "description": "<b>Deprecated, will be removed after couple of releases. Please use relationship instead.</b>\nIf set to true, the rule engine does not evaluate the resource's children. Default value is: false.\n<b>NOTE:</b> If set to true, <code>childrenResourceKindKeyFilters</code> has to be empty.",
            "type": "boolean"
          },
          "relationship": {
            "description": "Specifies whether the rule engine needs to evaluate only the resource itself, its direct children or all descendants.\nAcceptable values are: SELF, CHILD, DESCENDANT. Default value is: DESCENDANT.<br/>\n<b>NOTE:</b> If set to SELF, <code>childrenResourceKindKeyFilters</code> has to be empty.",
            "enum": [
              "PARENT",
              "CHILD",
              "CONTAINS",
              "CONTAINED_BY",
              "REFERENCES",
              "REFERENCED_BY",
              "USES",
              "USED_BY",
              "SELF",
              "DESCENDANT",
              "ANCESTOR",
              "TST",
              "ALL"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "relationship",
              "wrapped": false
            }
          },
          "resourceId": {
            "description": "Id of the resource that should be matched against the generated alert",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "resourceId",
              "wrapped": false
            }
          }
        },
        "required": [
          "resourceId"
        ],
        "title": "ResourceFilter",
        "type": "object"
      },
      "ResourceKindFilter": {
        "description": "Filter based on the resource kind",
        "properties": {
          "adapterKind": {
            "description": "Adapter kind of a resource",
            "type": "string"
          },
          "resourceKind": {
            "description": "Resource kind of a resource",
            "type": "string"
          }
        },
        "title": "ResourceKindFilter",
        "type": "object"
      },
      "ResourceSelection": {
        "description": "A selection type and set of resource ids.",
        "properties": {
          "resourceId": {
            "description": "Set of resource uuids",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "resourceId",
              "wrapped": false
            }
          },
          "type": {
            "description": "The resource selection type: propagate, unpropagate, or specific",
            "enum": [
              "PROPAGATE",
              "UNPROPAGATE",
              "SPECIFIC"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "type",
              "wrapped": false
            }
          }
        },
        "required": [
          "resourceId",
          "type"
        ],
        "title": "ResourceSelection",
        "type": "object"
      },
      "ResourceStatGroupList": {
        "properties": {
          "groupBy": {
            "enum": [
              "RESOURCE",
              "STATKEY"
            ],
            "type": "string"
          },
          "resourceStatGroups": {
            "items": {
              "$ref": "#/components/schemas/resource-stat-group"
            },
            "type": "array"
          },
          "sortOrder": {
            "enum": [
              "ASCENDING",
              "DESCENDING"
            ],
            "type": "string"
          }
        },
        "title": "ResourceStatGroupList",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "ResourceStatGroupList",
          "wrapped": false
        }
      },
      "TagBasedMetering": {
        "description": "Tag based metering object description",
        "properties": {
          "key": {
            "description": "The key of tag based metering object",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "key",
              "wrapped": false
            }
          },
          "metering": {
            "$ref": "#/components/schemas/metering",
            "description": "The tag based metering object",
            "xml": {
              "attribute": false,
              "name": "metering",
              "wrapped": false
            }
          },
          "value": {
            "description": "The value of tag based metering object",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "value",
              "wrapped": false
            }
          }
        },
        "required": [
          "key",
          "metering",
          "value"
        ],
        "title": "TagBasedMetering",
        "type": "object"
      },
      "TagBasedMeteringItem": {
        "description": "Tag based metering object's item",
        "properties": {
          "itemName": {
            "description": "Tag based metering item's name",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "itemName",
              "wrapped": false
            }
          },
          "meterings": {
            "description": "Tag based metering item details",
            "items": {
              "$ref": "#/components/schemas/TagBasedMetering"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "meterings",
              "wrapped": false
            }
          }
        },
        "required": [
          "itemName",
          "meterings"
        ],
        "title": "TagBasedMeteringItem",
        "type": "object"
      },
      "TagBasedOneTimeMetering": {
        "properties": {
          "key": {
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "key",
              "wrapped": false
            }
          },
          "oneTimeMetering": {
            "$ref": "#/components/schemas/one-time-metering",
            "xml": {
              "attribute": false,
              "name": "oneTimeMetering",
              "wrapped": false
            }
          },
          "value": {
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "value",
              "wrapped": false
            }
          }
        },
        "required": [
          "key",
          "oneTimeMetering",
          "value"
        ],
        "title": "TagBasedOneTimeMetering",
        "type": "object"
      },
      "TagBasedOneTimeMeteringItem": {
        "properties": {
          "itemName": {
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "itemName",
              "wrapped": false
            }
          },
          "oneTimeMeterings": {
            "items": {
              "$ref": "#/components/schemas/TagBasedOneTimeMetering"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "oneTimeMeterings",
              "wrapped": false
            }
          }
        },
        "required": [
          "itemName",
          "oneTimeMeterings"
        ],
        "title": "TagBasedOneTimeMeteringItem",
        "type": "object"
      },
      "TagBasedPolicyRef": {
        "properties": {
          "key": {
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "key",
              "wrapped": false
            }
          },
          "policyRef": {
            "$ref": "#/components/schemas/policy-ref",
            "xml": {
              "attribute": false,
              "name": "policyRef",
              "wrapped": false
            }
          },
          "value": {
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "value",
              "wrapped": false
            }
          }
        },
        "required": [
          "key",
          "policyRef",
          "value"
        ],
        "title": "TagBasedPolicyRef",
        "type": "object"
      },
      "TagBasedPolicyRefItem": {
        "properties": {
          "itemName": {
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "itemName",
              "wrapped": false
            }
          },
          "policyRefs": {
            "items": {
              "$ref": "#/components/schemas/TagBasedPolicyRef"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "policyRefs",
              "wrapped": false
            }
          }
        },
        "required": [
          "itemName",
          "policyRefs"
        ],
        "title": "TagBasedPolicyRefItem",
        "type": "object"
      },
      "TagBasedRateFactor": {
        "properties": {
          "key": {
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "key",
              "wrapped": false
            }
          },
          "rateFactor": {
            "$ref": "#/components/schemas/RateFactor",
            "xml": {
              "attribute": false,
              "name": "rateFactor",
              "wrapped": false
            }
          },
          "value": {
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "value",
              "wrapped": false
            }
          }
        },
        "required": [
          "key",
          "rateFactor",
          "value"
        ],
        "title": "TagBasedRateFactor",
        "type": "object"
      },
      "TagBasedRateFactorItem": {
        "properties": {
          "itemName": {
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "itemName",
              "wrapped": false
            }
          },
          "rateFactors": {
            "items": {
              "$ref": "#/components/schemas/TagBasedRateFactor"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "rateFactors",
              "wrapped": false
            }
          }
        },
        "required": [
          "itemName",
          "rateFactors"
        ],
        "title": "TagBasedRateFactorItem",
        "type": "object"
      },
      "UnconditionalMeteringItem": {
        "description": "The unconditional metering item description",
        "properties": {
          "itemName": {
            "description": "The unconditional metering item name",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "itemName",
              "wrapped": false
            }
          },
          "unconditionalMetering": {
            "$ref": "#/components/schemas/fixed-price",
            "description": "The unconditional metering item details",
            "xml": {
              "attribute": false,
              "name": "unconditionalMetering",
              "wrapped": false
            }
          }
        },
        "required": [
          "itemName",
          "unconditionalMetering"
        ],
        "title": "UnconditionalMeteringItem",
        "type": "object"
      },
      "action-context": {
        "description": "Represents an executable step within an action. It defines which method the step calls and what fields related to this step.",
        "properties": {
          "fields": {
            "description": "The action context fields defined for the action with data populated using the expression where defined",
            "items": {
              "$ref": "#/components/schemas/action-context-field"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "fields",
              "wrapped": true
            }
          },
          "id": {
            "description": "The ID of the action context",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          }
        },
        "title": "action-context",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "action-context",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "action-context-field": {
        "description": "Defines a field within the action context of an action. This field may be a display only parameter, and may have an expression that determines its value or the default one.",
        "properties": {
          "component": {
            "description": "The display component appropriate for action context field",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "component",
              "wrapped": false
            }
          },
          "displayOrder": {
            "description": "The order of this field within the list of all action context fields",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true,
              "name": "displayOrder",
              "wrapped": false
            }
          },
          "expressionResults": {
            "description": "The result of running the expression on each resource, this first resource will be the first value in the list and the second will be the second value, etc.",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "expressionResults",
              "wrapped": true
            }
          },
          "hidden": {
            "description": "True if this action context field may be hidden from display",
            "type": "boolean",
            "xml": {
              "attribute": true,
              "name": "hidden",
              "wrapped": false
            }
          },
          "id": {
            "description": "The ID of the action context field",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "input": {
            "description": "True if user can change the populated value of this field, false otherwise",
            "type": "boolean",
            "xml": {
              "attribute": true,
              "name": "input",
              "wrapped": false
            }
          },
          "name": {
            "description": "The name of the action context field",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "name",
              "wrapped": false
            }
          },
          "parameterKey": {
            "description": "The parameter key on the method to which this action context field corresponds",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "parameterKey",
              "wrapped": false
            }
          }
        },
        "title": "action-context-field",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "action-context-field",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "action-definition": {
        "properties": {
          "actionAdapterKindKey": {
            "description": "The kind of the adapter that will execute the action",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "actionAdapterKindKey",
              "wrapped": false
            }
          },
          "canRecommend": {
            "description": "This field specifies whether the action can be used in recommendations. This is validated when an action is associated to a recommendation.",
            "type": "boolean",
            "xml": {
              "attribute": true,
              "name": "canRecommend",
              "wrapped": false
            }
          },
          "contextAdapterKindKey": {
            "description": "The adapter kind of the context object that the action will be populated with. In other words, the kind of adapter that will be used when populating an action prior to execution. This may be different from the target resource, or the kind of the adapter that the action is executed against",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "contextAdapterKindKey",
              "wrapped": false
            }
          },
          "contextIds": {
            "description": "The ids for the available Action Contexts for this action. Action Contexts are used in multi-step actions, with each id denoting a step in the overall action. Most actions will only have a single step, and this field may be ignored for those.",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "contextIds",
              "wrapped": false
            }
          },
          "contextResourceKindKey": {
            "description": "The resource kind of the context object that the action will be populated with. In other words, the kind of resource that will be used when populating an action prior to execution. This may be different than the kind of resource that the action is executed against, or the target resource.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "contextResourceKindKey",
              "wrapped": false
            }
          },
          "displayName": {
            "description": "The localized name of the action",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "displayName",
              "wrapped": false
            }
          },
          "extension": {
            "$ref": "#/components/schemas/extension",
            "xml": {
              "attribute": false,
              "name": "extension",
              "wrapped": false
            }
          },
          "id": {
            "description": "The id of the action",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "scheduleEnabled": {
            "description": "This field specifies whether the action can be scheduled",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "scheduleEnabled",
              "wrapped": false
            }
          },
          "type": {
            "description": "The type of the action",
            "enum": [
              "READ",
              "UPDATE",
              "UNKNOWN"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "type",
              "wrapped": false
            }
          }
        },
        "required": [
          "contextAdapterKindKey",
          "contextResourceKindKey",
          "id"
        ],
        "title": "action-definition",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "action-definition",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "action-definitions": {
        "properties": {
          "actionDefinitions": {
            "description": "The paginated list of actions.",
            "items": {
              "$ref": "#/components/schemas/action-definition"
            },
            "type": "array"
          },
          "links": {
            "description": "Collection of links",
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "pageInfo": {
            "$ref": "#/components/schemas/page-info",
            "description": "Page information for result list",
            "xml": {
              "attribute": false,
              "name": "pageInfo",
              "wrapped": false
            }
          }
        },
        "title": "action-definitions",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "action-definitions",
          "wrapped": false
        }
      },
      "action-execution": {
        "description": "Contains describe instance data about performing an action.",
        "properties": {
          "contextId": {
            "description": "An optional value naming the action step that will be executed",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "contextId",
              "wrapped": false
            }
          },
          "contextResourceId": {
            "description": "The UUID list of resources that the action will be performed against",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "contextResourceId",
              "wrapped": false
            }
          },
          "parameterGroups": {
            "description": "The parameters that are used as inputs for the action being performed",
            "items": {
              "$ref": "#/components/schemas/action-parameter-group"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "parameterGroup",
              "wrapped": false
            }
          }
        },
        "required": [
          "parameterGroups"
        ],
        "title": "action-execution",
        "type": "object"
      },
      "action-object-status": {
        "description": "Represents the task status and properties of an executed action",
        "properties": {
          "creationDate": {
            "description": "The action object status creationDate",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "creationDate",
              "wrapped": false
            }
          },
          "id": {
            "description": "The id of the action object",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "messages": {
            "description": "The messages for the action result",
            "items": {
              "$ref": "#/components/schemas/action-status-message"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "messages",
              "wrapped": true
            }
          },
          "state": {
            "description": "The action object status state",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "state",
              "wrapped": false
            }
          }
        },
        "required": [
          "id"
        ],
        "title": "action-object-status",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "action-object-status",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "action-parameter": {
        "description": "Represents the parameters that are needed when calling a method.",
        "properties": {
          "dataType": {
            "description": "The data type of the method parameter",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "dataType",
              "wrapped": false
            }
          },
          "id": {
            "description": "The id of the method parameter",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "isList": {
            "description": "True if the parameter is a list of values, false if not",
            "type": "boolean",
            "xml": {
              "attribute": true,
              "name": "isList",
              "wrapped": false
            }
          },
          "isRequired": {
            "description": "True if the parameter is required, false otherwise",
            "type": "boolean",
            "xml": {
              "attribute": true,
              "name": "isRequired",
              "wrapped": false
            }
          }
        },
        "title": "action-parameter",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "action-parameter",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "action-parameter-group": {
        "description": "Contains the resource uuid and parameter values for a method.",
        "properties": {
          "parameterValue": {
            "description": "Contains the parameter values associated with this resource.",
            "items": {
              "$ref": "#/components/schemas/name-value"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "parameterValue",
              "wrapped": false
            }
          },
          "resourceId": {
            "description": "The resourceId field contains the Resource Id of the object which the action is run against.",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "resourceId",
              "wrapped": false
            }
          }
        },
        "required": [
          "resourceId"
        ],
        "title": "action-parameter-group",
        "type": "object"
      },
      "action-population": {
        "description": "Contains the additional information about an action needed to populate it. The context resource ids are needed to run the population expression and get default values where defined.",
        "properties": {
          "contextResourceId": {
            "description": "The UUID list of the resources that the population will be run against",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "contextResourceId",
              "wrapped": false
            }
          }
        },
        "required": [
          "contextResourceId"
        ],
        "title": "action-population",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "action-population",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "action-status-info": {
        "description": "Represents the task status and properties of an action",
        "properties": {
          "actionObjectStatuses": {
            "description": "Collection of statuses of tasks",
            "items": {
              "$ref": "#/components/schemas/action-object-status"
            },
            "type": "array"
          },
          "actionResult": {
            "description": "The result of the action",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "actionResult",
              "wrapped": false
            }
          },
          "authSource": {
            "description": "The authSource of the action",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "authSource",
              "wrapped": false
            }
          },
          "completeDate": {
            "description": "The complete date of the action",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "completeDate",
              "wrapped": false
            }
          },
          "messages": {
            "description": "The messages of the action result",
            "items": {
              "$ref": "#/components/schemas/action-status-message"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "messages",
              "wrapped": true
            }
          },
          "name": {
            "description": "The action name",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          },
          "resourceKind": {
            "description": "The resourceKind on which the action has been performed",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "resourceKind",
              "wrapped": false
            }
          },
          "startDate": {
            "description": "The start date of the action",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "startDate",
              "wrapped": false
            }
          },
          "state": {
            "description": "The state of the action",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "state",
              "wrapped": false
            }
          },
          "submittedBy": {
            "description": "The user who submitted the action",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "submittedBy",
              "wrapped": false
            }
          },
          "taskId": {
            "description": "The id of the action",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "taskId",
              "wrapped": false
            }
          },
          "triggeredAutomatically": {
            "description": "Flag that identifies whether action is triggered automatically or not",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "triggeredAutomatically",
              "wrapped": false
            }
          },
          "triggeringEventId": {
            "description": "The id of the event that triggered the action",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "triggeringEventId",
              "wrapped": false
            }
          },
          "triggeringEventName": {
            "description": "The name of the event that triggered the action",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "triggeringEventName",
              "wrapped": false
            }
          },
          "triggeringSource": {
            "description": "The source that triggered the action",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "triggeringSource",
              "wrapped": false
            }
          },
          "triggeringSourceEvent": {
            "description": "The triggering source event of the action",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "triggeringSourceEvent",
              "wrapped": false
            }
          }
        },
        "required": [
          "taskId"
        ],
        "title": "action-status-info",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "action-status-info",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "action-status-message": {
        "description": "Represents a task status message of an executed action",
        "properties": {
          "level": {
            "description": "The level of the message",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "level",
              "wrapped": false
            }
          },
          "message": {
            "description": "The message of the action status",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "message",
              "wrapped": false
            }
          },
          "timestamp": {
            "description": "The timestamp of the message",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "timestamp",
              "wrapped": false
            }
          }
        },
        "title": "action-status-message",
        "type": "object"
      },
      "adapter-instance": {
        "description": "Model object containing information about the adapter instance",
        "properties": {
          "adapter-certificates": {
            "description": "The set of untrusted certificates returned by the adapter source",
            "items": {
              "$ref": "#/components/schemas/certificate"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "adapter-certificates",
              "wrapped": true
            }
          },
          "collectorGroupId": {
            "description": "The ID of the collector group. If not specified, the system will choose an appropriate Collector group for you",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "collectorGroupId",
              "wrapped": false
            }
          },
          "collectorId": {
            "description": "The ID of the Collector that manages this adapter instance. This is optional and if not specified, system will choose an appropriate collector.",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "collectorId",
              "wrapped": false
            }
          },
          "credentialInstanceId": {
            "description": "The Credential Instance identifier used by this adapter instance",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "credentialInstanceId",
              "wrapped": false
            }
          },
          "description": {
            "description": "Optional description of the Adapter instance",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "description",
              "wrapped": false
            }
          },
          "id": {
            "description": "The UUID of the adapter instance",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "lastCollected": {
            "description": "Last time adapter instance reported collection of resources/stats.",
            "format": "date-time",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "lastCollected",
              "wrapped": false
            }
          },
          "lastHeartbeat": {
            "description": "Last time when this adapter instance communicated with VMware Aria Operations Server.",
            "format": "date-time",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "lastHeartbeat",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "messageFromAdapterInstance": {
            "description": "Any message from the adapter instance.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "messageFromAdapterInstance",
              "wrapped": false
            }
          },
          "monitoringInterval": {
            "description": "Minutes part of the monitoring Interval of the Adapter Instance.",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "monitoringInterval",
              "wrapped": false
            }
          },
          "monitoringIntervalMinutes": {
            "format": "int32",
            "type": "integer"
          },
          "monitoringIntervalSeconds": {
            "description": "Seconds part of the monitoring Interval of the Adapter Instance",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "monitoringIntervalSeconds",
              "wrapped": false
            }
          },
          "numberOfMetricsCollected": {
            "description": "The number of metrics reported by this adapter instance.",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "numberOfMetricsCollected",
              "wrapped": false
            }
          },
          "numberOfResourcesCollected": {
            "description": "The number of resources being monitored by this resource.",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "numberOfResourcesCollected",
              "wrapped": false
            }
          },
          "physicalDatacenterId": {
            "description": "The Physical Datacenter ID to be used for this Adapter Instance.It is Optional",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "physicalDatacenterId",
              "wrapped": false
            }
          },
          "resourceKey": {
            "$ref": "#/components/schemas/resource-key",
            "description": "The resource key of the adapter instance.",
            "xml": {
              "attribute": false,
              "name": "resourceKey",
              "wrapped": false
            }
          }
        },
        "title": "adapter-instance",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "adapter-instance",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "adapter-instances": {
        "description": "Model object representing a Collection of Adapter Instances",
        "properties": {
          "adapterInstancesInfoDto": {
            "description": "The collection of adapter instances",
            "items": {
              "$ref": "#/components/schemas/adapter-instance"
            },
            "type": "array"
          }
        },
        "title": "adapter-instances",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "adapter-instances",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "adapter-kind": {
        "description": "Represents the Adapter Kind model",
        "properties": {
          "adapterKindType": {
            "description": "The Adapter Kind Type",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "adapterKindType",
              "wrapped": false
            }
          },
          "describeVersion": {
            "description": "Adapter's Describe version\nThis is not the version of the Adapter but the version number\nin the describe.xml file. For Adapter Kinds that are dynamically\ncreated and not based on a describe.xml file, the value will be null",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "describeVersion",
              "wrapped": false
            }
          },
          "description": {
            "description": "The Description of the Adapter Kind",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "description",
              "wrapped": false
            }
          },
          "identifiers": {
            "description": "The Adapter Kind identifiers",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "identifiers",
              "wrapped": false
            }
          },
          "key": {
            "description": "The key which identifies an adapter kind uniquely in the system",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "key",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "name": {
            "description": "The Localized name of the Adapter Kind",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          },
          "resourceKinds": {
            "description": "Resource Kinds (keys) defined within this Adapter Kind",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "resourceKinds",
              "wrapped": false
            }
          }
        },
        "required": [
          "adapterKindType",
          "key"
        ],
        "title": "adapter-kind",
        "type": "object"
      },
      "adapter-kinds": {
        "properties": {
          "adapter-kind": {
            "description": "Collection of Adapter kinds",
            "items": {
              "$ref": "#/components/schemas/adapter-kind"
            },
            "type": "array"
          }
        },
        "title": "adapter-kinds",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "adapter-kinds",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "agent-task-status": {
        "description": "Agent task status",
        "properties": {
          "errorMessage": {
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "errorMessage",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "resources": {
            "description": "Information about the task",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "resources",
              "wrapped": true
            }
          },
          "taskID": {
            "description": "The task ID",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "taskID",
              "wrapped": false
            }
          }
        },
        "required": [
          "resources",
          "taskID"
        ],
        "title": "agent-task-status",
        "type": "object"
      },
      "agent-task-statuses": {
        "properties": {
          "taskStatuses": {
            "items": {
              "$ref": "#/components/schemas/agent-task-status"
            },
            "type": "array"
          }
        },
        "title": "agent-task-statuses",
        "type": "object"
      },
      "alert": {
        "properties": {
          "alertDefinitionId": {
            "description": "The identifier of the Alert Definition that defined this Alert",
            "type": "string"
          },
          "alertDefinitionName": {
            "description": "Localized name of the associated Alert Definition",
            "type": "string"
          },
          "alertId": {
            "description": "The UUID of the Alert",
            "format": "uuid",
            "type": "string"
          },
          "alertImpact": {
            "description": "The impact of the Alert",
            "type": "string"
          },
          "alertLevel": {
            "description": "The criticality of the alert",
            "enum": [
              "UNKNOWN",
              "NONE",
              "INFORMATION",
              "WARNING",
              "IMMEDIATE",
              "CRITICAL",
              "AUTO"
            ],
            "type": "string"
          },
          "cancelTimeUTC": {
            "description": "The UTC time when the Alert was cancelled",
            "format": "int64",
            "type": "integer"
          },
          "controlState": {
            "description": "The state of the Alert",
            "enum": [
              "OPEN",
              "ASSIGNED",
              "SUSPENDED",
              "SUPPRESSED"
            ],
            "type": "string"
          },
          "extension": {
            "$ref": "#/components/schemas/extension",
            "xml": {
              "attribute": false,
              "name": "extension",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "ownerId": {
            "description": "The unique ID for the user account that owns this Alert",
            "type": "string"
          },
          "ownerName": {
            "description": "The user-name of the user account that owns this Alert",
            "type": "string"
          },
          "resourceId": {
            "description": "The UUID of the Resource causing the Alert",
            "format": "uuid",
            "type": "string"
          },
          "startTimeUTC": {
            "description": "The UTC time when the Alert started",
            "format": "int64",
            "type": "integer"
          },
          "statKey": {
            "description": "The stat-key related to the violating alert. The alert may be associated with a stat-key and not have\nan associated alertDefinitionId if the alert was generated through an external event.",
            "type": "string"
          },
          "status": {
            "description": "The status of the Alert",
            "enum": [
              "NEW",
              "ACTIVE",
              "UPDATED",
              "CANCELED"
            ],
            "type": "string"
          },
          "subType": {
            "description": "The Sub-type of the Alert",
            "type": "string"
          },
          "suspendUntilTimeUTC": {
            "description": "The UTC time when the suspended Alert will resume",
            "format": "int64",
            "type": "integer"
          },
          "type": {
            "description": "The Alert Type describing the Alert",
            "type": "string"
          },
          "updateTimeUTC": {
            "description": "The UTC time when the Alert was updated",
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "alert",
        "type": "object"
      },
      "alert-condition": {
        "description": "The alert's condition is a product of the severity and a condition.",
        "properties": {
          "cancelCycles": {
            "description": "The number of consecutive cycles to wait when a symptom state is false before a symptom is cancelled",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "cancelCycles",
              "wrapped": false
            }
          },
          "condition": {
            "$ref": "#/components/schemas/condition",
            "description": "The condition that triggers this symptom state",
            "xml": {
              "attribute": false,
              "name": "condition",
              "wrapped": false
            }
          },
          "id": {
            "description": "The id of the condition",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "severity": {
            "description": "The severity of the condition.  Automatic is allowed only if the associated condition is a message event condition.",
            "enum": [
              "UNKNOWN",
              "NONE",
              "INFORMATION",
              "WARNING",
              "IMMEDIATE",
              "CRITICAL",
              "AUTO"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "severity",
              "wrapped": false
            }
          },
          "waitCycles": {
            "description": "The number of consecutive cycles to wait when a symptom state is true before a symptom is triggered",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "waitCycles",
              "wrapped": false
            }
          }
        },
        "required": [
          "condition",
          "severity"
        ],
        "title": "alert-condition",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "alert-condition",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "alert-contributing-symptom": {
        "properties": {
          "alertId": {
            "description": "The UUID of the Alert",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "alertId",
              "wrapped": false
            }
          },
          "contributingSymptoms": {
            "$ref": "#/components/schemas/contributing-symptoms",
            "description": "List of symptoms contributing to the alert",
            "xml": {
              "attribute": false,
              "name": "contributingSymptoms",
              "wrapped": false
            }
          }
        },
        "required": [
          "alertId",
          "contributingSymptoms"
        ],
        "title": "alert-contributing-symptom",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "alert-contributing-symptom",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "alert-contributing-symptoms": {
        "properties": {
          "contributingSymptoms": {
            "description": "List of alert contributing symptoms",
            "items": {
              "$ref": "#/components/schemas/alert-contributing-symptom"
            },
            "type": "array"
          }
        },
        "title": "alert-contributing-symptoms",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "alert-contributing-symptoms",
          "wrapped": false
        }
      },
      "alert-definition": {
        "description": "Defines a Problem by associating the Criticality level (<b><i>Criticality</i></b>)\nof Symptom Definitions on related objects in the <b><i>AlertDefinitionState</i></b>\nand also associates to a particular impact (<b><i>AlertDefinitionImpact</i></b>)",
        "properties": {
          "adapterKindKey": {
            "description": "The adapter kind key of the Adapter Kind that the Alert Definition applies to",
            "type": "string"
          },
          "cancelCycles": {
            "description": "The Number of cycles the symptom conditions are false before ending the problem alert",
            "format": "int32",
            "type": "integer"
          },
          "description": {
            "description": "The description of the problem definition",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "description",
              "wrapped": false
            }
          },
          "id": {
            "description": "The unique identifier across the system. Must be null during create",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "id",
              "wrapped": false
            }
          },
          "name": {
            "description": "The Name of the Problem Definition",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          },
          "resourceKindKey": {
            "description": "The resource kind key for the Resource Kind that the Alert Definition applies to",
            "type": "string"
          },
          "states": {
            "description": "An Alert Definition state identifies the severity and impact a problem has when the\nset of Symptom Definition conditions are true. One Alert Definition state per severity.",
            "items": {
              "$ref": "#/components/schemas/alert-definition-state"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "states",
              "wrapped": true
            }
          },
          "subType": {
            "description": "The sub type of the problem, for the purposes of routing an alert\ngenerated by this problem.",
            "format": "int32",
            "type": "integer"
          },
          "type": {
            "description": "The type of the problem, for the purposes of routing an alert generated\nby this problem.",
            "format": "int32",
            "type": "integer"
          },
          "waitCycles": {
            "description": "The Number of cycles the symptom conditions are true before triggering the problem alert",
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "adapterKindKey",
          "name",
          "resourceKindKey",
          "states"
        ],
        "title": "alert-definition",
        "type": "object"
      },
      "alert-definition-impact": {
        "description": "The alert's impact on the system",
        "properties": {
          "detail": {
            "description": "Details for the type of impact",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "detail",
              "wrapped": false
            }
          },
          "impactType": {
            "description": "The type of the impact",
            "enum": [
              "BADGE"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "impactType",
              "wrapped": false
            }
          }
        },
        "required": [
          "detail",
          "impactType"
        ],
        "title": "alert-definition-impact",
        "type": "object"
      },
      "alert-definition-query": {
        "description": "Parameters used to search for Alert Definitions.\nSearch for system defined Alert Definitions via <i>adapterKinds</i> and <i>resourceKinds</i> or search for user-defined Alert Definitions via their identifiers",
        "properties": {
          "adapterKinds": {
            "description": "List of adapter kind keys. Can only be used when adapterKind is empty",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "adapterKinds",
              "wrapped": true
            }
          },
          "ids": {
            "description": "The identifier(s) of the Alert Definitions to search for.\nDo not specify <i>adapterKind</i> or <i>resourceKind</i> if searching by ids",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "ids",
              "wrapped": true
            }
          },
          "resourceKinds": {
            "description": "List of resource kind keys. Can only be used when resourceKind is empty",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "resourceKinds",
              "wrapped": true
            }
          }
        },
        "title": "alert-definition-query",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "alert-definition-query",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "alert-definition-state": {
        "description": "The problem state describes the severity of a problem when specific symptoms exist on related resources.  It optionally may include a prioritized recommendation list.\nThe Symptom Set can be either a {@link SymptomSet} or {@link CompositeSymptomSet}.",
        "properties": {
          "impact": {
            "$ref": "#/components/schemas/alert-definition-impact",
            "description": "The impact of this problem state",
            "xml": {
              "attribute": false,
              "name": "impact",
              "wrapped": false
            }
          },
          "recommendationPriorityMap": {
            "additionalProperties": {
              "format": "int32",
              "type": "integer"
            },
            "description": "A map of recommendation identifiers keyed by recommendation id. A lower\npriority value indicates higher priority. The priorities are required to\nstart from 1.",
            "type": "object"
          },
          "severity": {
            "description": "The severity of the Problem State. Select AUTO to pick the worst severity of all the active symptoms.",
            "enum": [
              "UNKNOWN",
              "NONE",
              "INFORMATION",
              "WARNING",
              "IMMEDIATE",
              "CRITICAL",
              "AUTO"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "severity",
              "wrapped": false
            }
          },
          "symptoms": {
            "$ref": "#/components/schemas/base-symptom-set",
            "description": "The set of symptoms which triggers this problem state"
          }
        },
        "required": [
          "impact",
          "symptoms"
        ],
        "title": "alert-definition-state",
        "type": "object"
      },
      "alert-definitions": {
        "properties": {
          "alertDefinitions": {
            "description": "Collection of Problem Definitions",
            "items": {
              "$ref": "#/components/schemas/alert-definition"
            },
            "type": "array"
          },
          "links": {
            "description": "Collection of links",
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "pageInfo": {
            "$ref": "#/components/schemas/page-info",
            "description": "Page information for result list",
            "xml": {
              "attribute": false,
              "name": "pageInfo",
              "wrapped": false
            }
          }
        },
        "title": "alert-definitions",
        "type": "object"
      },
      "alert-group": {
        "properties": {
          "alertCount": {
            "description": "The number of alerts in the group",
            "format": "int32",
            "type": "integer"
          },
          "extension": {
            "$ref": "#/components/schemas/extension",
            "xml": {
              "attribute": false,
              "name": "extension",
              "wrapped": false
            }
          },
          "groupId": {
            "description": "The Alert group ID",
            "type": "string"
          },
          "groupName": {
            "description": "The alert group name",
            "type": "string"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "maxCriticalityLevel": {
            "description": "The criticality level of the worst",
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "alert-group",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "alert-group",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "alert-groups": {
        "properties": {
          "alertGroups": {
            "description": "List of alert groups",
            "items": {
              "$ref": "#/components/schemas/alert-group"
            },
            "type": "array"
          },
          "links": {
            "description": "Collection of links",
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "pageInfo": {
            "$ref": "#/components/schemas/page-info",
            "description": "Page information for result list",
            "xml": {
              "attribute": false,
              "name": "pageInfo",
              "wrapped": false
            }
          }
        },
        "title": "alert-groups",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "alert-groups",
          "wrapped": false
        }
      },
      "alert-note": {
        "description": "Model to represent a Alert Note",
        "properties": {
          "alertId": {
            "description": "Identifier of the associated alert",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "alertId",
              "wrapped": false
            }
          },
          "creationTimeUTC": {
            "description": "UTC time when the alert note created",
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "creationTimeUTC",
              "wrapped": false
            }
          },
          "extension": {
            "$ref": "#/components/schemas/extension",
            "xml": {
              "attribute": false,
              "name": "extension",
              "wrapped": false
            }
          },
          "id": {
            "description": "Identifier of the alert note",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "note": {
            "description": "Content of alert note",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "note",
              "wrapped": false
            }
          },
          "type": {
            "description": "Type of the alert note",
            "enum": [
              "SYSTEM",
              "USER",
              "UNKNOWN"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "type",
              "wrapped": false
            }
          },
          "userId": {
            "description": "Identifier of the user who created the alert note",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "userId",
              "wrapped": false
            }
          },
          "userName": {
            "description": "Name of the user who created the alert note",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "userName",
              "wrapped": false
            }
          }
        },
        "required": [
          "alertId",
          "creationTimeUTC",
          "id",
          "note",
          "type"
        ],
        "title": "alert-note",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "alert-note",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "alert-note-content": {
        "description": "The note content for creating an alert note",
        "properties": {
          "content": {
            "description": "The alert note content",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "content",
              "wrapped": false
            }
          }
        },
        "required": [
          "content"
        ],
        "title": "alert-note-content",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "alert-note-content",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "alert-notes": {
        "description": "Model to represent a collection of alert notes",
        "properties": {
          "alertNotes": {
            "description": "List of alert notes",
            "items": {
              "$ref": "#/components/schemas/alert-note"
            },
            "type": "array"
          },
          "links": {
            "description": "Collection of links",
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "pageInfo": {
            "$ref": "#/components/schemas/page-info",
            "description": "Page information for result list",
            "xml": {
              "attribute": false,
              "name": "pageInfo",
              "wrapped": false
            }
          }
        },
        "title": "alert-notes",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "alert-notes",
          "wrapped": false
        }
      },
      "alert-notes-query": {
        "description": "Query for alert notes by various criteria.\nComposition of filtering criteria controlled via the <i>compositeOperator</i> property.\nFor Pagination see <i>PageInfo</i> \nFor sorting see <i>AlertNoteField</i> and <i>SortOrder</i> enumerations. \nIf a sort field is not specified but pagination is requested the Alert notes will be\nsorted by the <b><i>alertNoteId</i></b> field.",
        "properties": {
          "alert-query": {
            "$ref": "#/components/schemas/alert-query",
            "description": "Return alert notes associated with alerts matching query criteria",
            "xml": {
              "attribute": false,
              "name": "alert-query",
              "wrapped": false
            }
          },
          "alertNoteId": {
            "description": "Filter based on Alert Note identifiers",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "alertNoteId",
              "wrapped": false
            }
          },
          "alertNoteType": {
            "description": "Filter based on alert note types",
            "items": {
              "enum": [
                "SYSTEM",
                "USER",
                "UNKNOWN"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "compositeOperator": {
            "description": "Indicates the composition of the filtering criteria.\nEither all of the filtering criteria apply together (AND operation)\nor any of the filtering criteria could be applied (OR operation)\nDefaults to AND.\n<i>Note:</i> backend only supports AND currently",
            "enum": [
              "AND",
              "OR"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "compositeOperator",
              "wrapped": false
            }
          },
          "content": {
            "description": "Filter based on note contents",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "content",
              "wrapped": false
            }
          },
          "creationTimeRange": {
            "$ref": "#/components/schemas/time-range",
            "description": "Filter based on matching UTC creation time",
            "xml": {
              "attribute": false,
              "name": "creationTimeRange",
              "wrapped": false
            }
          },
          "userName": {
            "description": "Filter based on user names",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "userName",
              "wrapped": false
            }
          }
        },
        "required": [
          "alert-query"
        ],
        "title": "alert-notes-query",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "alert-notes-query",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "alert-plugin-type": {
        "properties": {
          "description": {
            "description": "Description for the Alert Plugin Type",
            "type": "string"
          },
          "id": {
            "description": "Identifier for the Alert Plugin Type",
            "type": "string"
          },
          "properties": {
            "description": "List of Alert Plugin Type Properties",
            "items": {
              "$ref": "#/components/schemas/alert-plugin-type-property"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "properties",
              "wrapped": true
            }
          },
          "rule-properties": {
            "description": "List of Notification Rule Properties",
            "items": {
              "$ref": "#/components/schemas/alert-plugin-type-property"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "rule-properties",
              "wrapped": true
            }
          }
        },
        "title": "alert-plugin-type",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "alert-plugin-type",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "alert-plugin-type-property": {
        "description": "Describes Notification Plugin field metadata",
        "properties": {
          "acceptableServiceCredentialTypes": {
            "description": "Acceptable service credential types for plugin type",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "acceptableServiceCredentialTypes",
              "wrapped": true
            }
          },
          "dataType": {
            "description": "Datatype for the property value",
            "enum": [
              "UNSPECIFIED",
              "STRING",
              "BOOLEAN",
              "PASSWORD",
              "INTEGER",
              "ENUM"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "dataType",
              "wrapped": false
            }
          },
          "defaultValue": {
            "description": "Optional default value for the property",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "defaultValue",
              "wrapped": false
            }
          },
          "description": {
            "description": "A description of the property",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "description",
              "wrapped": false
            }
          },
          "displayOrder": {
            "description": "Display order in the UI",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "displayOrder",
              "wrapped": false
            }
          },
          "enum-values": {
            "description": "Possible values if the data type is an enum",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "enum-values",
              "wrapped": true
            }
          },
          "isDeprecated": {
            "description": "Is Property deprecated",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "isDeprecated",
              "wrapped": false
            }
          },
          "key": {
            "description": "Unique identifier or name for the Plugin Property",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "key",
              "wrapped": false
            }
          },
          "length": {
            "description": "Optional, the supported length for the property value",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "length",
              "wrapped": false
            }
          },
          "required": {
            "description": "True if this field is required for the configuration",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "required",
              "wrapped": false
            }
          }
        },
        "required": [
          "key",
          "required"
        ],
        "title": "alert-plugin-type-property",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "alert-plugin-type-property",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "alert-plugin-types": {
        "description": "Alert Plugin Types (aka) Notification Plugin Types",
        "properties": {
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "notificationPluginType": {
            "description": "List of supported Notification Plugin Types",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "notificationPluginType",
              "wrapped": false
            }
          }
        },
        "title": "alert-plugin-types",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "alert-plugin-types",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "alert-query": {
        "description": "Query for alerts by various criteria.\nComposition of filtering criteria controlled via the <i>compositeOperator</i> property.\nFor Pagination see <i>PageInfo</i> \nFor sorting see <i>AlertField</i> and <i>SortOrder</i> enumerations. \nIf a sort field is not specified but pagination is requested the Alerts will be\nsorted by the <b><i>alertId</i></b> field.",
        "properties": {
          "activeOnly": {
            "description": "Filter to return only Active alerts, if true, the query will exclude Suspended and Cancelled Alerts",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "activeOnly",
              "wrapped": false
            }
          },
          "alertControlState": {
            "description": "Filter based on the Alert Control State",
            "items": {
              "enum": [
                "OPEN",
                "ASSIGNED",
                "SUSPENDED",
                "SUPPRESSED"
              ],
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "alertControlState",
              "wrapped": false
            }
          },
          "alertCriticality": {
            "description": "Filter based on Alert Criticality",
            "items": {
              "enum": [
                "UNKNOWN",
                "NONE",
                "INFORMATION",
                "WARNING",
                "IMMEDIATE",
                "CRITICAL",
                "AUTO"
              ],
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "alertCriticality",
              "wrapped": false
            }
          },
          "alertDefinitionId": {
            "description": "Filter based on the Alert definition id",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "alertDefinitionId",
              "wrapped": false
            }
          },
          "alertId": {
            "description": "Filter based on Alert identifiers",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "alertId",
              "wrapped": false
            }
          },
          "alertImpact": {
            "description": "Filter based on the Alert Impact",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "alertImpact",
              "wrapped": false
            }
          },
          "alertName": {
            "description": "Filter based on Alert name using 'contains' logic",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "alertName",
              "wrapped": false
            }
          },
          "alertStatus": {
            "description": "Filter based on the Alert Status. If looking for only active alerts combined\nwith other filter criteria then use the <b><i>activeOnly</i></b> property instead.",
            "items": {
              "enum": [
                "NEW",
                "ACTIVE",
                "UPDATED",
                "CANCELED"
              ],
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "alertStatus",
              "wrapped": false
            }
          },
          "alertTypeSubtype": {
            "description": "Filter based on Alert Type",
            "items": {
              "$ref": "#/components/schemas/AlertTypeMapping"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "alertTypeSubtype",
              "wrapped": false
            }
          },
          "cancelTimeRange": {
            "$ref": "#/components/schemas/time-range",
            "description": "Filter based on matching UTC cancel time",
            "xml": {
              "attribute": false,
              "name": "cancelTimeRange",
              "wrapped": false
            }
          },
          "compositeOperator": {
            "description": "Indicates the composition of the filtering criteria.\nEither all of the filtering criteria apply together (AND operation)\nor any of the filtering criteria could be applied (OR operation)\nDefaults to AND.\nNote: backend only supports AND currently",
            "enum": [
              "AND",
              "OR"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "compositeOperator",
              "wrapped": false
            }
          },
          "extractOwnerName": {
            "description": "Indicates whether need to report alert owner's name in addition to owner's id",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "extractOwnerName",
              "wrapped": false
            }
          },
          "groupId": {
            "description": "Filter based on alert group id",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "groupId",
              "wrapped": false
            }
          },
          "groupingCondition": {
            "description": "Condition that should be used for grouping",
            "enum": [
              "GROUP_BY_ALERT_DEFINITION",
              "GROUP_BY_RESOURCE_KIND",
              "GROUP_BY_CRITICALITY",
              "GROUP_BY_TIME",
              "GROUP_BY_SCOPE"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "groupingCondition",
              "wrapped": false
            }
          },
          "includeChildrenResources": {
            "description": "True to include alerts generated by child resources",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "includeChildrenResources",
              "wrapped": false
            }
          },
          "resource-query": {
            "$ref": "#/components/schemas/resource-query",
            "description": "Return alarms associated with resources matching query criteria",
            "xml": {
              "attribute": false,
              "name": "resource-query",
              "wrapped": false
            }
          },
          "resourceKind": {
            "description": "Filter based on resource kind using 'contains' logic",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "resourceKind",
              "wrapped": false
            }
          },
          "startTimeRange": {
            "$ref": "#/components/schemas/time-range",
            "description": "Filter based on matching UTC start time",
            "xml": {
              "attribute": false,
              "name": "startTimeRange",
              "wrapped": false
            }
          },
          "updateTimeRange": {
            "$ref": "#/components/schemas/time-range",
            "description": "Filter based on matching UTC update time",
            "xml": {
              "attribute": false,
              "name": "updateTimeRange",
              "wrapped": false
            }
          },
          "userId": {
            "description": "Filter based on user id",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "userId",
              "wrapped": false
            }
          },
          "userName": {
            "description": "Filter based on user name using 'contains' logic",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "userName",
              "wrapped": false
            }
          }
        },
        "title": "alert-query",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "alert-query",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "alert-subtype": {
        "properties": {
          "description": {
            "description": "The Description of the alert sub type",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "description",
              "wrapped": false
            }
          },
          "extension": {
            "$ref": "#/components/schemas/extension",
            "xml": {
              "attribute": false,
              "name": "extension",
              "wrapped": false
            }
          },
          "id": {
            "description": "System generated alert sub type ID",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "name": {
            "description": "The Name of the alert sub type",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          }
        },
        "required": [
          "id"
        ],
        "title": "alert-subtype",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "alert-subtype",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "alert-type": {
        "properties": {
          "description": {
            "description": "Description of the alert type",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "description",
              "wrapped": false
            }
          },
          "extension": {
            "$ref": "#/components/schemas/extension",
            "xml": {
              "attribute": false,
              "name": "extension",
              "wrapped": false
            }
          },
          "id": {
            "description": "System generated alert ID",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "name": {
            "description": "Name of the alert type",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          },
          "subTypes": {
            "description": "List of sub types for this alert type",
            "items": {
              "$ref": "#/components/schemas/alert-subtype"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "subTypes",
              "wrapped": false
            }
          }
        },
        "required": [
          "id"
        ],
        "title": "alert-type",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "alert-type",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "alert-types": {
        "properties": {
          "alertTypes": {
            "description": "List of alert types",
            "items": {
              "$ref": "#/components/schemas/alert-type"
            },
            "type": "array"
          }
        },
        "title": "alert-types",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "alert-types",
          "wrapped": false
        }
      },
      "alerts": {
        "properties": {
          "alerts": {
            "description": "List of alerts",
            "items": {
              "$ref": "#/components/schemas/alert"
            },
            "type": "array"
          },
          "links": {
            "description": "Collection of links",
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "pageInfo": {
            "$ref": "#/components/schemas/page-info",
            "description": "Page information for result list",
            "xml": {
              "attribute": false,
              "name": "pageInfo",
              "wrapped": false
            }
          }
        },
        "title": "alerts",
        "type": "object"
      },
      "app-monitoring-configuration": {
        "description": "Represents the application monitoring configuration",
        "properties": {
          "certificate": {
            "$ref": "#/components/schemas/certificate",
            "description": "Certificates of the application monitoring",
            "xml": {
              "attribute": false,
              "name": "certificate",
              "wrapped": false
            }
          },
          "credentialInstanceId": {
            "description": "Credential Instance Identifier",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "credentialInstanceId",
              "wrapped": false
            }
          },
          "password": {
            "description": "Password of the application monitoring\nPassword and Credential instance id are mutually exclusive",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "password",
              "wrapped": false
            }
          },
          "url": {
            "description": "The Url of the application monitoring",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "url",
              "wrapped": false
            }
          },
          "vCenterUrls": {
            "description": "The vCenter urls",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "vCenterUrls",
              "wrapped": true
            }
          }
        },
        "required": [
          "url",
          "vCenterUrls"
        ],
        "title": "app-monitoring-configuration",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "app-monitoring-configuration",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "app-monitoring-configurations": {
        "properties": {
          "appMonitoringConfigurations": {
            "description": "Collection of application monitoring configurations",
            "items": {
              "$ref": "#/components/schemas/app-monitoring-configuration"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "appMonitoringConfigurations",
              "wrapped": true
            }
          },
          "links": {
            "description": "Collection of links",
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "pageInfo": {
            "$ref": "#/components/schemas/page-info",
            "description": "Page information for result list",
            "xml": {
              "attribute": false,
              "name": "pageInfo",
              "wrapped": false
            }
          }
        },
        "title": "app-monitoring-configurations",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "app-monitoring-configurations",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "application-configuration-status": {
        "description": "Represents the task status and properties of an action",
        "properties": {
          "bootstrapObjectStatuses": {
            "description": "Collection of bootstrap statuses",
            "items": {
              "$ref": "#/components/schemas/bootstrap-object-status"
            },
            "type": "array"
          },
          "name": {
            "description": "The action name",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          },
          "taskId": {
            "description": "The task ID",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "taskId",
              "wrapped": false
            }
          }
        },
        "required": [
          "name",
          "taskId"
        ],
        "title": "application-configuration-status",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "application-configuration-status",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "application-resource": {
        "description": "Represents the resources available for application monitoring",
        "properties": {
          "agentStatus": {
            "description": "The status of the agent of the resource",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "agentStatus",
              "wrapped": false
            }
          },
          "agentVersion": {
            "description": "The version of the agent",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "agentVersion",
              "wrapped": false
            }
          },
          "appMonitoringAdapterInstanceId": {
            "description": "The id of the application monitoring adapter instance",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "appMonitoringAdapterInstanceId",
              "wrapped": false
            }
          },
          "isUpdateRequired": {
            "description": "Flag that indicates whether the agent needs to be updated",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "isUpdateRequired",
              "wrapped": false
            }
          },
          "lastOperationStatus": {
            "description": "The last operation's status, if no operation then null",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "lastOperationStatus",
              "wrapped": false
            }
          },
          "powerState": {
            "description": "Flag that indicates whether the resource is powered on or off",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "powerState",
              "wrapped": false
            }
          },
          "resourceId": {
            "description": "The id of the resource",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "resourceId",
              "wrapped": false
            }
          }
        },
        "title": "application-resource",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "application-resource",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "application-resources": {
        "properties": {
          "applicationResources": {
            "description": "Collection of application monitoring available resource",
            "items": {
              "$ref": "#/components/schemas/application-resource"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "applicationResources",
              "wrapped": true
            }
          },
          "links": {
            "description": "Collection of links",
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "pageInfo": {
            "$ref": "#/components/schemas/page-info",
            "description": "Page information for result list",
            "xml": {
              "attribute": false,
              "name": "pageInfo",
              "wrapped": false
            }
          }
        },
        "title": "application-resources",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "application-resources",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "application-services": {
        "properties": {
          "services": {
            "description": "Collection of applications service configurations",
            "items": {
              "$ref": "#/components/schemas/service-configurations-parameters"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "services",
              "wrapped": true
            }
          }
        },
        "required": [
          "services"
        ],
        "title": "application-services",
        "type": "object"
      },
      "application-task-status": {
        "description": "The status of the application task",
        "properties": {
          "errorMessage": {
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "errorMessage",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "resources": {
            "description": "The service resource name",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "resources",
              "wrapped": true
            }
          },
          "taskID": {
            "description": "The task ID",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "taskID",
              "wrapped": false
            }
          }
        },
        "required": [
          "resources",
          "taskID"
        ],
        "title": "application-task-status",
        "type": "object"
      },
      "application-task-statuses": {
        "properties": {
          "taskStatuses": {
            "description": "List of application task status",
            "items": {
              "$ref": "#/components/schemas/application-task-status"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "taskStatuses",
              "wrapped": true
            }
          }
        },
        "required": [
          "taskStatuses"
        ],
        "title": "application-task-statuses",
        "type": "object"
      },
      "auth-source": {
        "description": "Besides local users, VMware Aria Operations also allows users from external systems such as <b>LDAP, Active Directory, VC, SSO</b> to\nlogin using their original credentials. Authentication of all such users are delegated to external systems. This\nmodel represents a single auth source managed by VMware Aria Operations.",
        "properties": {
          "certificates": {
            "description": "Certificate details of the Authentication Source.\nTypically this will be present if and only if the Authentication Source enforces SSL",
            "items": {
              "$ref": "#/components/schemas/certificate"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "certificates",
              "wrapped": false
            }
          },
          "created": {
            "description": "The Auth Source creation/import time in milliseconds",
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": true,
              "name": "created",
              "wrapped": false
            }
          },
          "id": {
            "description": "Immutable Identifier of the Auth Source",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "id",
              "wrapped": false
            }
          },
          "lastModified": {
            "description": "The Auth Source last modification time in millisecond",
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": true,
              "name": "lastModified",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "name": {
            "description": "Name of the External System. Set by admin when the source is added or imported  into vROps. \n<i>name and id</i> of a source is unique with the exception that <b>name</b> can be modified by a system admin.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          },
          "property": {
            "description": "Properties of the Authentication Source.\nThe actual values of the metadata elements relevant for the specific Authentication Source",
            "items": {
              "$ref": "#/components/schemas/name-value"
            },
            "type": "array"
          },
          "sourceType": {
            "$ref": "#/components/schemas/auth-sourcetype",
            "description": "Type of the Auth source.\n<ul>\n    <li>LDAP</li>\n    <li>ACTIVE_DIRECTORY</li>\n    <li>LOCAL_USER</li>\n    <li>VC</li>\n    <li>VIDM</li>\n</ul>",
            "xml": {
              "attribute": false,
              "name": "sourceType",
              "wrapped": false
            }
          }
        },
        "required": [
          "id",
          "name",
          "sourceType"
        ],
        "title": "auth-source",
        "type": "object"
      },
      "auth-source-property": {
        "description": "Meta data about auth source property",
        "properties": {
          "dataType": {
            "description": "The data type of the property",
            "enum": [
              "STRING",
              "INTEGER",
              "HOST",
              "IP",
              "ENUM",
              "PASSWORD",
              "BOOLEAN",
              "UNKNOWN"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "dataType",
              "wrapped": false
            }
          },
          "description": {
            "description": "The description of the property",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "description",
              "wrapped": false
            }
          },
          "modifiable": {
            "description": "Flag that indicates whether the property can be modified during an update operation or not",
            "type": "boolean",
            "xml": {
              "attribute": true,
              "name": "modifiable",
              "wrapped": false
            }
          },
          "name": {
            "description": "The name of the property",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "name",
              "wrapped": false
            }
          },
          "required": {
            "description": "Flag that indicates whether property is required or not for creating/updating an auth source",
            "type": "boolean",
            "xml": {
              "attribute": true,
              "name": "required",
              "wrapped": false
            }
          }
        },
        "required": [
          "dataType",
          "modifiable",
          "name",
          "required"
        ],
        "title": "auth-source-property",
        "type": "object"
      },
      "auth-sources": {
        "description": "Represents the collection of Authentication Sources\ncurrently configured in VMware Aria Operations.",
        "properties": {
          "sources": {
            "description": "Collection of Authentication Sources configured in VMware Aria Operations",
            "items": {
              "$ref": "#/components/schemas/auth-source"
            },
            "type": "array"
          }
        },
        "title": "auth-sources",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "auth-sources",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "auth-sourcetype": {
        "description": "This object represents the type of external authentication source supported by VMware Aria Operations.",
        "properties": {
          "description": {
            "description": "Description about the authentication source type.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "description",
              "wrapped": false
            }
          },
          "id": {
            "description": "The identifier of the source type.",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "name": {
            "description": "The name of the source type.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          },
          "properties": {
            "$ref": "#/components/schemas/properties",
            "description": "Meta data about properties of the authentication source type.",
            "xml": {
              "attribute": false,
              "name": "properties",
              "wrapped": false
            }
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "auth-sourcetype",
        "type": "object"
      },
      "auth-sourcetypes": {
        "description": "Represents the collection of authentication source types currently supported by VCOps.",
        "properties": {
          "sourceTypes": {
            "description": "Sequence of authentication source types supported by vROps",
            "items": {
              "$ref": "#/components/schemas/auth-sourcetype"
            },
            "type": "array"
          }
        },
        "title": "auth-sourcetypes",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "auth-sourcetypes",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "badge": {
        "description": "Badge in the System",
        "properties": {
          "color": {
            "description": "Color of the Badge as determined by the system",
            "enum": [
              "GREEN",
              "YELLOW",
              "ORANGE",
              "RED",
              "GREY"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "color",
              "wrapped": false
            }
          },
          "score": {
            "description": "Score (value) associated with the Badge.\nThis number represents the absolute value of the Badge.\nTypically the value is between 0-100 but this is not the\ncase all the time.",
            "format": "double",
            "type": "number",
            "xml": {
              "attribute": true,
              "name": "score",
              "wrapped": false
            }
          },
          "type": {
            "description": "The type of the Badge",
            "enum": [
              "ANOMALY",
              "CAPACITY_REMAINING",
              "COMPLIANCE",
              "DENSITY",
              "EFFICIENCY",
              "FAULT",
              "HEALTH",
              "RISK",
              "STRESS",
              "TIME_REMAINING",
              "TIME_REMAINING_WHATIF",
              "RECLAIMABLE_CAPACITY",
              "WORKLOAD"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "type",
              "wrapped": false
            }
          }
        },
        "required": [
          "color",
          "score",
          "type"
        ],
        "title": "badge",
        "type": "object"
      },
      "base-symptom-set": {
        "title": "base-symptom-set",
        "type": "object"
      },
      "bootstrap-object-status": {
        "description": "Represents the task status and properties of an executed bootstrap action",
        "properties": {
          "creationDate": {
            "description": "The bootstrap action object status creation date",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "creationDate",
              "wrapped": false
            }
          },
          "id": {
            "description": "The bootstrap action object id",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "messages": {
            "description": "The messages for the bootstrap action result",
            "items": {
              "$ref": "#/components/schemas/action-status-message"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "messages",
              "wrapped": true
            }
          },
          "stage": {
            "description": "The bootstrap action object status stage",
            "enum": [
              "SUBMITTING",
              "INSTALLING",
              "FINALIZING",
              "FAILED",
              "FINISHED",
              "UNKNOWN"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "stage",
              "wrapped": false
            }
          },
          "state": {
            "description": "The bootstrap action object status state",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "state",
              "wrapped": false
            }
          }
        },
        "required": [
          "id"
        ],
        "title": "bootstrap-object-status",
        "type": "object"
      },
      "bootstrap-status": {
        "description": "Represents the task status and properties of an action",
        "properties": {
          "bootstrapObjectStatuses": {
            "description": "Collection of bootstrap object statuses",
            "items": {
              "$ref": "#/components/schemas/bootstrap-object-status"
            },
            "type": "array"
          },
          "name": {
            "description": "The name of the action",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          },
          "startDate": {
            "description": "The start date of the action",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "startDate",
              "wrapped": false
            }
          },
          "taskId": {
            "description": "The id of the action result",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "taskId",
              "wrapped": false
            }
          }
        },
        "required": [
          "taskId"
        ],
        "title": "bootstrap-status",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "bootstrap-status",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "capacity-consumer": {
        "description": "Consumer of custom profile",
        "properties": {
          "adapterKind": {
            "description": "Adapter kind of the consumer",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "adapterKind",
              "wrapped": false
            }
          },
          "resourceKind": {
            "description": "Resource kind of the consumer",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "resourceKind",
              "wrapped": false
            }
          }
        },
        "required": [
          "adapterKind",
          "resourceKind"
        ],
        "title": "capacity-consumer",
        "type": "object"
      },
      "certificate": {
        "description": "Untrusted certificate representation",
        "properties": {
          "certificateDetails": {
            "description": "If the source returns an untrusted certificate, this field is used to represent certificate details. It also contains <i>Algorithm</i>, <i>Signature (base64-encoded)</i> and <i>SignedCertificate (base64-encoded)</i> values.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "certificateDetails",
              "wrapped": false
            }
          },
          "expires": {
            "description": "Expiration date of the certificate",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "expires",
              "wrapped": false
            }
          },
          "issuedBy": {
            "description": "The issuedBy parameter of the certificate",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "issuedBy",
              "wrapped": false
            }
          },
          "issuedTo": {
            "description": "The issuedTo date of the certificate",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "issuedTo",
              "wrapped": false
            }
          },
          "thumbprint": {
            "description": "If the source returns an untrusted certificate,this field is used to represent the certificate guid",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "thumbprint",
              "wrapped": false
            }
          }
        },
        "title": "certificate",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "certificate",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "certificates": {
        "properties": {
          "certificates": {
            "description": "Collection of certificates",
            "items": {
              "$ref": "#/components/schemas/certificate"
            },
            "type": "array"
          }
        },
        "title": "certificates",
        "type": "object"
      },
      "cgroups": {
        "description": "Represents a collection of custom groups",
        "properties": {
          "groups": {
            "description": "A collection of custom groups",
            "items": {
              "$ref": "#/components/schemas/custom-group"
            },
            "type": "array"
          }
        },
        "title": "cgroups",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "cgroups",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "collector": {
        "description": "Model for representing a Collector",
        "properties": {
          "adapterInstanceIds": {
            "description": "List of Adapter Instances managed by this Collector",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "hostName": {
            "description": "Host name or IP address of the machine on which this Collector is Running",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "hostName",
              "wrapped": false
            }
          },
          "id": {
            "description": "Unique identifier of the Collector \nThis uniquely identifies a Collector in the system.",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "lastHeartbeat": {
            "description": "Last time when this Collector communicated with VMware Aria Operations Server",
            "format": "date-time",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "lastHeartbeat",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "local": {
            "description": "Flag that indicates whether this Collector is a Local Collector or a Remote one",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "local",
              "wrapped": false
            }
          },
          "name": {
            "description": "Name of the Collector",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          },
          "nodeIdentifier": {
            "description": "Identifier of the Node on which the Collector is running",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "nodeIdentifier",
              "wrapped": false
            }
          },
          "state": {
            "description": "State of the Collector\nWhether it is running properly or lost communication with the Controller.",
            "enum": [
              "DOWN",
              "UP"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "state",
              "wrapped": false
            }
          },
          "type": {
            "description": "Type of the Collector",
            "enum": [
              "INTERNAL",
              "REMOTE",
              "CLOUD_PROXY",
              "AAP",
              "OTHER"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "type",
              "wrapped": false
            }
          },
          "uuId": {
            "description": "UUID of the Collector",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "uuId",
              "wrapped": false
            }
          }
        },
        "required": [
          "id",
          "local",
          "nodeIdentifier",
          "uuId"
        ],
        "title": "collector",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "collector",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "collector-group": {
        "description": "Represents a Collector group",
        "properties": {
          "collectorIds": {
            "description": "Set of Collector IDs that belong to a Collector Group",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "collectorId",
              "wrapped": false
            }
          },
          "description": {
            "description": "Description of the Collector Group",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "description",
              "wrapped": false
            }
          },
          "haEnabled": {
            "description": "is the collector group ha enabled or not",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "haEnabled",
              "wrapped": false
            }
          },
          "id": {
            "description": "Identifier of the Collector Group. \nThis is system generated during the creation time.",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "name": {
            "description": "Name of the Collector Group. This uniquely identifier a  Collector Group in the system but is user specified and mutable.",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "name",
              "wrapped": false
            }
          },
          "systemDefined": {
            "description": "Is the Collector group system defined? This is a Read Only  attribute and is set by the system.",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "systemDefined",
              "wrapped": false
            }
          },
          "virtualIP": {
            "description": "virtual IP value of collector group",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "virtualIP",
              "wrapped": false
            }
          }
        },
        "required": [
          "name"
        ],
        "title": "collector-group",
        "type": "object"
      },
      "collector-groups": {
        "properties": {
          "collectorGroups": {
            "description": "Collection of Collector Groups",
            "items": {
              "$ref": "#/components/schemas/collector-group"
            },
            "type": "array"
          }
        },
        "title": "collector-groups",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "collector-groups",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "collectors": {
        "properties": {
          "collector": {
            "description": "Collection of collector infos",
            "items": {
              "$ref": "#/components/schemas/collector"
            },
            "type": "array"
          }
        },
        "title": "collectors",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "collectors",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "composite-symptom-set": {
        "allOf": [
          {
            "$ref": "#/components/schemas/base-symptom-set"
          },
          {
            "description": "An AND/OR composition of BaseSymptomSet objects",
            "properties": {
              "operator": {
                "enum": [
                  "AND",
                  "OR"
                ],
                "type": "string",
                "xml": {
                  "attribute": false,
                  "name": "operator",
                  "wrapped": false
                }
              },
              "symptomSets": {
                "items": {
                  "$ref": "#/components/schemas/base-symptom-set"
                },
                "type": "array"
              }
            },
            "title": "composite-symptom-set",
            "type": "object"
          }
        ],
        "description": "An AND/OR composition of BaseSymptomSet objects",
        "title": "composite-symptom-set"
      },
      "condition": {
        "description": "Base class for Property Conditions. For JSON the class descendants will generate with a field named 'type' with one of the following values: CONDITION_PROPERTY_STRING, CONDITION_PROPERTY_NUMERIC",
        "properties": {
          "instanced": {
            "description": "The instance group",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "instanced",
              "wrapped": false
            }
          },
          "key": {
            "description": "The StatKey for the condition",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "key",
              "wrapped": false
            }
          },
          "operator": {
            "description": "The operator for the condition",
            "enum": [
              "EQ",
              "NOT_EQ",
              "LIKE",
              "LT",
              "GT",
              "LT_EQ",
              "GT_EQ",
              "IN",
              "NOT_IN",
              "EXISTS",
              "CONTAINS",
              "STARTS_WITH",
              "ENDS_WITH",
              "NOT_STARTS_WITH",
              "NOT_ENDS_WITH",
              "NOT_CONTAINS",
              "REGEX",
              "NOT_REGEX",
              "NOT_EXISTS",
              "EMPTY",
              "NOT_EMPTY"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "operator",
              "wrapped": false
            }
          },
          "settingValue": {
            "description": "The setting value",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "settingValue",
              "wrapped": false
            }
          },
          "targetKey": {
            "description": "A target StatKey to compare the values between two metrics.  Required for metric or property threshold type conditions.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "targetKey",
              "wrapped": false
            }
          },
          "thresholdType": {
            "description": "The type of threshold comparison for right-hand side of the condition: static, metric or property.",
            "enum": [
              "UNKNOWN",
              "STATIC",
              "STATKEY",
              "PROPERTY"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "thresholdType",
              "wrapped": false
            }
          }
        },
        "required": [
          "instanced",
          "key",
          "operator",
          "thresholdType"
        ],
        "title": "condition",
        "type": "object"
      },
      "content": {
        "description": "Represents the restore object",
        "properties": {
          "contents": {
            "description": "Collection of content objects",
            "items": {
              "$ref": "#/components/schemas/content"
            },
            "type": "array"
          },
          "importedCount": {
            "description": "The number of objects in content",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true,
              "name": "Imported count",
              "wrapped": false
            }
          },
          "name": {
            "description": "The name of the content type",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "name",
              "wrapped": false
            }
          },
          "skippedCount": {
            "description": "The number of skipped objects in content",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true,
              "name": "Ignored count",
              "wrapped": false
            }
          }
        },
        "required": [
          "name"
        ],
        "title": "content",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "content",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "content-export": {
        "description": "Export Operation Details",
        "properties": {
          "contentTypes": {
            "description": "The content type to be exported",
            "items": {
              "enum": [
                "VIEW_DEFINITIONS",
                "REPORT_DEFINITIONS",
                "DASHBOARDS",
                "REPORT_SCHEDULES",
                "POLICIES",
                "ALERT_DEFINITIONS",
                "SYMPTOM_DEFINITIONS",
                "RECOMMENDATION_DEFINITIONS",
                "CUSTOM_GROUPS",
                "SUPER_METRICS",
                "CONFIG_FILES",
                "COMPLIANCE_SCORECARDS",
                "NOTIFICATION_RULES",
                "OUTBOUND_SETTINGS",
                "PAYLOAD_TEMPLATES",
                "INTEGRATIONS",
                "USERS",
                "USER_GROUPS",
                "ROLES",
                "AUTH_SOURCES",
                "HTTP_PROXIES",
                "COST_DRIVERS",
                "SDMP_CUSTOM_SERVICES",
                "SDMP_CUSTOM_APPLICATIONS",
                "CUSTOM_PROFILES",
                "DISCOVERY_RULES",
                "APP_DEF_ASSIGNMENTS",
                "GLOBAL_SETTINGS"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "scope": {
            "description": "The segregation of content",
            "enum": [
              "ALL",
              "CUSTOM"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "scope",
              "wrapped": false
            }
          }
        },
        "required": [
          "contentTypes",
          "scope"
        ],
        "title": "content-export",
        "type": "object"
      },
      "content-import": {
        "description": "Operation details for the content to be imported",
        "properties": {
          "fileName": {
            "description": "The file containing details of content to be imported",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "fileName",
              "wrapped": false
            }
          },
          "forceContentUpdate": {
            "type": "boolean"
          },
          "id": {
            "description": "The generated id of operation",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          }
        },
        "required": [
          "fileName"
        ],
        "title": "content-import",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "content-import",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "contentProgress": {
        "description": "Content object details",
        "properties": {
          "createdTime": {
            "description": "Task status creation time in milliseconds, since midnight January 1, 1970",
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "createdTime",
              "wrapped": false
            }
          },
          "errorMessages": {
            "description": "List of error messages that occurred",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "errorMessages",
              "wrapped": true
            }
          },
          "lastUpdateTime": {
            "description": "Task status last update time in milliseconds, since midnight January 1, 1970",
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "lastUpdateTime",
              "wrapped": false
            }
          },
          "state": {
            "description": "The state of the task",
            "enum": [
              "INITIATED",
              "STOPPED",
              "RUNNING",
              "FINISHED",
              "ERROR",
              "ABORTED",
              "UNKNOWN"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "state",
              "wrapped": false
            }
          }
        },
        "title": "contentProgress",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "contentProgress",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "contributing-symptom": {
        "properties": {
          "alertConditions": {
            "description": "Set of conditions",
            "items": {
              "$ref": "#/components/schemas/alert-condition"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "alertConditions",
              "wrapped": true
            }
          },
          "symptomDefinitionsIds": {
            "description": "The Symptom Definitions describing the violated rule for this Symptom",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "symptomDefinitionsIds",
              "wrapped": true
            }
          },
          "symptomId": {
            "description": "The UUID that identifies the Symptom",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "symptomId",
              "wrapped": false
            }
          },
          "symptomSetId": {
            "description": "The id of symptom set to which symptom belongs",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "symptomSetId",
              "wrapped": false
            }
          }
        },
        "required": [
          "symptomId"
        ],
        "title": "contributing-symptom",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "contributing-symptom",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "contributing-symptoms": {
        "properties": {
          "contributingSymptoms": {
            "description": "List of symptoms",
            "items": {
              "$ref": "#/components/schemas/contributing-symptom"
            },
            "type": "array"
          }
        },
        "title": "contributing-symptoms",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "contributing-symptoms",
          "wrapped": false
        }
      },
      "create-adapter-instance": {
        "description": "A DTO that serves as the structure of the payload data for creating a new adapter instance",
        "properties": {
          "adapterKindKey": {
            "description": "The Adapter Kind key",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "adapterKindKey",
              "wrapped": false
            }
          },
          "collectorGroupId": {
            "description": "The Collector Group ID to be used for this Adapter Instance. If not specified, the system will choose an appropriate Collector group for you",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "collectorGroupId",
              "wrapped": false
            }
          },
          "collectorId": {
            "description": "The Collector instance used by this adapter instance. If not specified, the system will choose an appropriate Collector for you",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "collectorId",
              "wrapped": false
            }
          },
          "credential": {
            "$ref": "#/components/schemas/credential",
            "description": "Adapter instance specific Credential information. To use an existing Credential instance specify only the 'id' field in the CredentialInstance object,Otherwise specify all the fields except the 'id' field to create a new Credential instance.",
            "xml": {
              "attribute": false,
              "name": "credential",
              "wrapped": false
            }
          },
          "description": {
            "description": "Optional description of the Adapter instance",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "description",
              "wrapped": false
            }
          },
          "monitoringInterval": {
            "description": "Minutes part of the monitoring Interval of the Adapter Instance, where the monitoring Interval is the frequency of data source query for stats and properties.",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "monitoringInterval",
              "wrapped": false
            }
          },
          "monitoringIntervalSeconds": {
            "description": "Seconds part of the monitoring Interval of the Adapter Instance, where the monitoring Interval is the frequency of data source query for stats and properties.",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "monitoringIntervalSeconds",
              "wrapped": false
            }
          },
          "name": {
            "description": "The name of the Adapter instance",
            "type": "string"
          },
          "physicalDatacenterId": {
            "description": "The Physical Datacenter ID to be used for this Adapter Instance. It is Optional",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "physicalDatacenterId",
              "wrapped": false
            }
          },
          "resourceIdentifiers": {
            "description": "Adapter instance specific resource identifiers",
            "items": {
              "$ref": "#/components/schemas/name-value"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "resourceIdentifiers",
              "wrapped": true
            }
          }
        },
        "required": [
          "adapterKindKey",
          "name"
        ],
        "title": "create-adapter-instance",
        "type": "object"
      },
      "credential": {
        "description": "The Credential Instance information",
        "properties": {
          "adapterKindKey": {
            "description": "The Adapter Kind key of the Credential",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "adapterKindKey",
              "wrapped": false
            }
          },
          "credentialKindKey": {
            "description": "The credential kind of the credential",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "credentialKindKey",
              "wrapped": false
            }
          },
          "fields": {
            "description": "Collection of name,value pairs that capture the credential specific data",
            "items": {
              "$ref": "#/components/schemas/name-value"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "fields",
              "wrapped": true
            }
          },
          "id": {
            "description": "Credential Instance identifier.\nThis should be null for credential instance creation requests and must have a value for all other requests.",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "name": {
            "description": "The name of the Credential",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          }
        },
        "required": [
          "adapterKindKey",
          "credentialKindKey",
          "name"
        ],
        "title": "credential",
        "type": "object"
      },
      "credential-instances": {
        "properties": {
          "credentialInstances": {
            "description": "Collection of credentials",
            "items": {
              "$ref": "#/components/schemas/credential"
            },
            "type": "array"
          }
        },
        "title": "credential-instances",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "credential-instances",
          "wrapped": false
        }
      },
      "credential-kind": {
        "description": "Credential kind details",
        "properties": {
          "adapterKindKey": {
            "description": "The adapter kind key for the credential type",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "adapterKindKey",
              "wrapped": false
            }
          },
          "fields": {
            "description": "The credential type fields",
            "items": {
              "$ref": "#/components/schemas/credential-kind-type"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "fields",
              "wrapped": true
            }
          },
          "id": {
            "description": "The credential type identifier",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "name": {
            "description": "The name of the credential type",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          }
        },
        "required": [
          "adapterKindKey",
          "name"
        ],
        "title": "credential-kind",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "credential-kind",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "credential-kind-type": {
        "description": "Credential Kind field information",
        "properties": {
          "defaultValue": {
            "description": "The default value",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "defaultValue",
              "wrapped": false
            }
          },
          "enumerated": {
            "description": "Flag if the field is enumerated",
            "type": "boolean",
            "xml": {
              "attribute": true,
              "name": "enumerated",
              "wrapped": false
            }
          },
          "enumeratedValues": {
            "description": "List of possible enumerated values",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "enumeratedValues",
              "wrapped": true
            }
          },
          "key": {
            "description": "The key",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "key",
              "wrapped": false
            }
          },
          "required": {
            "description": "Flag if the field is required",
            "type": "boolean",
            "xml": {
              "attribute": true,
              "name": "required",
              "wrapped": false
            }
          },
          "valueType": {
            "description": "The value type for the field",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "valueType",
              "wrapped": false
            }
          }
        },
        "required": [
          "key"
        ],
        "title": "credential-kind-type",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "credential-kind-type",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "credential-kinds": {
        "properties": {
          "credentialTypes": {
            "description": "Collection of credential types",
            "items": {
              "$ref": "#/components/schemas/credential-kind"
            },
            "type": "array"
          }
        },
        "title": "credential-kinds",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "credential-kinds",
          "wrapped": false
        }
      },
      "currency": {
        "description": "Represents a currency. Currencies are identified by their ISO 4217 currency codes.\nVisit the <a href=\"http://www.iso.org/iso/home/standards/currency_codes.htm\"> ISO web site</a> for more information.",
        "properties": {
          "code": {
            "description": "ISO 4217 currency code for this currency",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "code",
              "wrapped": false
            }
          },
          "name": {
            "description": "The name of this currency in a current locale",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "name",
              "wrapped": false
            }
          },
          "numericCode": {
            "description": "ISO 4217 numeric code for this currency",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "numericCode",
              "wrapped": false
            }
          },
          "symbol": {
            "description": "Symbol corresponding to this currency",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "symbol",
              "wrapped": false
            }
          }
        },
        "required": [
          "code",
          "name",
          "numericCode"
        ],
        "title": "currency",
        "type": "object"
      },
      "currency-config": {
        "description": "Currency configuration details",
        "properties": {
          "code": {
            "description": "ISO 4217 currency code for this currency",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "code",
              "wrapped": false
            }
          }
        },
        "required": [
          "code"
        ],
        "title": "currency-config",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "currency-config",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "custom-group": {
        "description": "Custom Group description",
        "properties": {
          "autoResolveMembership": {
            "description": "Automatically update membership",
            "type": "boolean",
            "xml": {
              "attribute": true,
              "name": "autoResolveMembership",
              "wrapped": false
            }
          },
          "id": {
            "description": "Identifier of custom group",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "membershipDefinition": {
            "$ref": "#/components/schemas/custom-group-membership",
            "description": "Membership definition of custom group",
            "xml": {
              "attribute": false,
              "name": "membershipDefinition",
              "wrapped": false
            }
          },
          "policy": {
            "description": "Policy identifier",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "policy",
              "wrapped": false
            }
          },
          "resourceKey": {
            "$ref": "#/components/schemas/resource-key",
            "description": "Resource key of custom group",
            "xml": {
              "attribute": false,
              "name": "resourceKey",
              "wrapped": false
            }
          }
        },
        "required": [
          "id",
          "membershipDefinition",
          "resourceKey"
        ],
        "title": "custom-group",
        "type": "object"
      },
      "custom-group-membership": {
        "description": "Custom group membership definition",
        "properties": {
          "custom-group-properties": {
            "description": "Collection of custom group properties",
            "items": {
              "$ref": "#/components/schemas/custom-group-property"
            },
            "type": "array"
          },
          "excludedResources": {
            "description": "Collection of resources to exclude from the given group. This property is useful when the group\nmembership is dynamic and you want to explicitly exclude certain set of resources even if they\nare selected by the rule engine.",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "includedResources": {
            "description": "Collection of resources to include in the given group",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "rules": {
            "description": "Collection of custom group rules",
            "items": {
              "$ref": "#/components/schemas/membership-rule-group"
            },
            "type": "array"
          }
        },
        "title": "custom-group-membership",
        "type": "object"
      },
      "custom-group-property": {
        "description": "Represents a Custom Group Property",
        "properties": {
          "exclusionValue": {
            "description": "The value of exclusion",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "exclusionValue",
              "wrapped": false
            }
          },
          "inclusionValue": {
            "description": "The value of inclusion",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "inclusionValue",
              "wrapped": false
            }
          },
          "name": {
            "description": "Name of the custom group property",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          },
          "type": {
            "description": "Type of the custom group property.",
            "enum": [
              "STRING",
              "NUMERIC"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "type",
              "wrapped": false
            }
          }
        },
        "required": [
          "inclusionValue",
          "name",
          "type"
        ],
        "title": "custom-group-property",
        "type": "object"
      },
      "custom-profile": {
        "description": "Custom profile details",
        "properties": {
          "custom-profile-metrics": {
            "description": "Collection of profile metrics",
            "items": {
              "$ref": "#/components/schemas/profile-metric"
            },
            "type": "array"
          },
          "description": {
            "description": "The description of custom profile",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "description",
              "wrapped": false
            }
          },
          "id": {
            "description": "The identifier of custom profile",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "name": {
            "description": "The name of custom profile",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          },
          "objectType": {
            "$ref": "#/components/schemas/capacity-consumer",
            "description": "The object type of custom profile",
            "xml": {
              "attribute": false,
              "name": "objectType",
              "wrapped": false
            }
          }
        },
        "required": [
          "custom-profile-metrics",
          "name",
          "objectType"
        ],
        "title": "custom-profile",
        "type": "object"
      },
      "custom-profiles": {
        "properties": {
          "profiles": {
            "description": "Collection of profile metrics",
            "items": {
              "$ref": "#/components/schemas/custom-profile"
            },
            "type": "array"
          }
        },
        "title": "custom-profiles",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "custom-profiles",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "dt-stat-query": {
        "description": "Object used to define search criteria for retrieving Stats Data as well as Dynamic Thresholds\nThe query spec enforces that at least one Resource (Object) and at least one StatKey is specified.\nThe <i>begin</i> and <i>end</i> values that are used to specify the time window are optional. If\nthese are not specified the API returns 24 hours of Stats and DT data by default.",
        "properties": {
          "begin": {
            "description": "The beginning date as a long value of the range of stats to return\nValue measures the number of milliseconds since January 1, 1970 00:00:00 UTC",
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "begin",
              "wrapped": false
            }
          },
          "end": {
            "description": "The ending date as a long value of the range of stats to return\nlong value is number of milliseconds since January 1, 1970 00:00:00 UTC",
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "end",
              "wrapped": false
            }
          },
          "resourceIds": {
            "description": "Collection of Resource identifiers for which Stats and DT values need to be retrieved",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "resourceIds",
              "wrapped": false
            }
          },
          "showSmooth": {
            "description": "Flag that indicates whether stats should be smoothened or not. Default value is true",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "showSmooth",
              "wrapped": false
            }
          },
          "smoothFactor": {
            "description": "The smooth precision, default value is 2.0",
            "format": "double",
            "type": "number",
            "xml": {
              "attribute": false,
              "name": "smoothFactor",
              "wrapped": false
            }
          },
          "statKeys": {
            "description": "Collection of StatKeys for which Stats and DT values need to be retrieved",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "statKeys",
              "wrapped": false
            }
          }
        },
        "required": [
          "resourceIds",
          "statKeys"
        ],
        "title": "dt-stat-query",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "dt-stat-query",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "email-template": {
        "description": "Model object representing an email template.\nEmail templates are used by the Email Notification Plugins to render the content of an Email.\nThe system does not limit the number of Email Templates in the system.",
        "properties": {
          "html": {
            "description": "Flag that indicates whether the template is HTML or plain text",
            "type": "boolean",
            "xml": {
              "attribute": true,
              "name": "html",
              "wrapped": false
            }
          },
          "id": {
            "description": "Identifier of this template.\nAutomatically generated by the system on Create.",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "name": {
            "description": "The name of the template",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          },
          "template": {
            "description": "The body of the template",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "template",
              "wrapped": false
            }
          }
        },
        "required": [
          "html",
          "id",
          "name",
          "template"
        ],
        "title": "email-template",
        "type": "object"
      },
      "email-template-condition": {
        "description": "Condition to be set on Email Template Selection.\nBased on a condition, a particular template is selected while rendering the contents of an email.",
        "properties": {
          "alertStatus": {
            "description": "The status of the alert",
            "enum": [
              "NEW",
              "ACTIVE",
              "UPDATED",
              "CANCELED"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "alertStatus",
              "wrapped": false
            }
          },
          "alertSubType": {
            "description": "The sub type of the alert",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true,
              "name": "alertSubType",
              "wrapped": false
            }
          },
          "alertType": {
            "description": "The type of the alert",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true,
              "name": "alertType",
              "wrapped": false
            }
          },
          "emailAddress": {
            "description": "The email address of the sender",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "emailAddress",
              "wrapped": false
            }
          }
        },
        "required": [
          "alertStatus",
          "alertSubType",
          "alertType",
          "emailAddress"
        ],
        "title": "email-template-condition",
        "type": "object"
      },
      "email-template-conditions": {
        "properties": {
          "emailTemplateList": {
            "items": {
              "$ref": "#/components/schemas/email-template-condition"
            },
            "type": "array"
          }
        },
        "title": "email-template-conditions",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "email-template-conditions",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "email-templates": {
        "properties": {
          "emailTemplateList": {
            "description": "Collection of email templates",
            "items": {
              "$ref": "#/components/schemas/email-template"
            },
            "type": "array"
          }
        },
        "title": "email-templates",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "email-templates",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "entries": {
        "properties": {
          "keyValues": {
            "description": "A Collection of KeyValuesEntry objects",
            "items": {
              "$ref": "#/components/schemas/entry"
            },
            "type": "array"
          }
        },
        "title": "entries",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "entries",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "entry": {
        "description": "A pair of a Key and its associated Value(s) stored in the system",
        "properties": {
          "key": {
            "description": "Key of the (Key,Value) Pair",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "key",
              "wrapped": false
            }
          },
          "values": {
            "description": "Collection of the Values associated with the Key",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": true,
              "name": "values",
              "wrapped": false
            }
          }
        },
        "required": [
          "key"
        ],
        "title": "entry",
        "type": "object"
      },
      "event": {
        "description": "Class to represent external events.  Different event types have different required fields.",
        "properties": {
          "cancelTimeUTC": {
            "description": "Indicates that an event has been cancelled. For an externally managed event a new event with\nthe same <b><i>message</i></b> value must be sent with a cancelTime in order to cancel the\nevent.",
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": true,
              "name": "cancelTimeUTC",
              "wrapped": false
            }
          },
          "eventType": {
            "description": "The type of the event. Different event types have different required fields.",
            "enum": [
              "CHANGE",
              "NOTIFICATION",
              "RESOURCE_DOWN",
              "SYSTEM_DEGRADATION",
              "AVAILABILITY_DOWN",
              "AVAILABILITY_EXCEPTION",
              "AVAILABILITY_NOT_COLLECTING",
              "HARD_THRESHOLD"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "eventType",
              "wrapped": false
            }
          },
          "htType": {
            "description": "The type of hard threshold violation",
            "enum": [
              "EQUAL",
              "NOT_EQUAL",
              "ABOVE",
              "BELOW"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "htType",
              "wrapped": false
            }
          },
          "key": {
            "description": "The StatKey for the condition of the HardThreshold event",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "key",
              "wrapped": false
            }
          },
          "keyIndicator": {
            "description": "Whether the HardThreshold event is a key performance indicator\nTrue indicates it is a KPI. False otherwise.",
            "type": "boolean",
            "xml": {
              "attribute": true,
              "name": "keyIndicator",
              "wrapped": false
            }
          },
          "managedExternally": {
            "description": "If set to true, this event shall persist across collection cycles until another event is pushed\nto change the status. \nIf set to false, this event will be cancelled during the next collection cycle if it is not pushed again",
            "type": "boolean",
            "xml": {
              "attribute": true,
              "name": "managedExternally",
              "wrapped": false
            }
          },
          "message": {
            "description": "Event message, the message identifies the event in the system.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "message",
              "wrapped": false
            }
          },
          "resourceId": {
            "description": "The id of the resource for the event",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "resourceId",
              "wrapped": false
            }
          },
          "severity": {
            "description": "The severity of a system degradation event",
            "enum": [
              "UNKNOWN",
              "NONE",
              "INFORMATION",
              "WARNING",
              "IMMEDIATE",
              "CRITICAL",
              "AUTO"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "severity",
              "wrapped": false
            }
          },
          "startTimeUTC": {
            "description": "The start time for the event in UTC.\nThis time must be after >= 946684800000L, or January 1, 2000.  Default is 946684800000L.\nValue is ignored for Change events.",
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": true,
              "name": "startTimeUTC",
              "wrapped": false
            }
          },
          "value": {
            "description": "The current value (not the expected value) of the metric for the HardThreshold event",
            "format": "double",
            "type": "number",
            "xml": {
              "attribute": false,
              "name": "value",
              "wrapped": false
            }
          }
        },
        "required": [
          "eventType",
          "message",
          "resourceId"
        ],
        "title": "event",
        "type": "object"
      },
      "events": {
        "description": "A collection of external events",
        "properties": {
          "event": {
            "description": "Collection of events",
            "items": {
              "$ref": "#/components/schemas/event"
            },
            "type": "array"
          }
        },
        "title": "events",
        "type": "object"
      },
      "export-operation-summary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/operation-summary"
          },
          {
            "description": "Export Operation Summary",
            "properties": {
              "contentType": {
                "description": "The content type",
                "enum": [
                  "VIEW_DEFINITIONS",
                  "REPORT_DEFINITIONS",
                  "DASHBOARDS",
                  "REPORT_SCHEDULES",
                  "POLICIES",
                  "ALERT_DEFINITIONS",
                  "SYMPTOM_DEFINITIONS",
                  "RECOMMENDATION_DEFINITIONS",
                  "CUSTOM_GROUPS",
                  "SUPER_METRICS",
                  "CONFIG_FILES",
                  "COMPLIANCE_SCORECARDS",
                  "NOTIFICATION_RULES",
                  "OUTBOUND_SETTINGS",
                  "PAYLOAD_TEMPLATES",
                  "INTEGRATIONS",
                  "COST_DRIVERS",
                  "USERS",
                  "USER_GROUPS",
                  "ROLES",
                  "AUTH_SOURCES",
                  "HTTP_PROXIES",
                  "SDMP_CUSTOM_SERVICES",
                  "SDMP_CUSTOM_APPLICATIONS",
                  "CUSTOM_PROFILES",
                  "DISCOVERY_RULES",
                  "APP_DEF_ASSIGNMENTS",
                  "GLOBAL_SETTINGS",
                  "UNKNOWN"
                ],
                "type": "string",
                "xml": {
                  "attribute": false,
                  "name": "contentType",
                  "wrapped": false
                }
              },
              "state": {
                "description": "The state of the run for the content",
                "enum": [
                  "NOT_INITIALIZED",
                  "INITIALIZED",
                  "RUNNING",
                  "FAILED",
                  "FINISHED",
                  "UNKNOWN"
                ],
                "type": "string",
                "xml": {
                  "attribute": false,
                  "name": "state",
                  "wrapped": false
                }
              }
            },
            "required": [
              "contentType"
            ],
            "title": "export-operation-summary",
            "type": "object"
          }
        ],
        "description": "Export Operation Summary",
        "title": "export-operation-summary"
      },
      "extension": {
        "properties": {
          "anyObjects": {
            "items": {
              "type": "object"
            },
            "type": "array"
          }
        },
        "title": "extension",
        "type": "object"
      },
      "fault-alarm-device": {
        "properties": {
          "deviceDescription": {
            "description": "Description of the device",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "deviceDescription",
              "wrapped": false
            }
          },
          "deviceKey": {
            "description": "Key of the device",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "deviceKey",
              "wrapped": false
            }
          }
        },
        "title": "fault-alarm-device",
        "type": "object"
      },
      "fault-condition": {
        "description": "A Fault Event Condition",
        "properties": {
          "faultEvents": {
            "description": "The list of fault faultEvents that we are interested in tracking. \nThe symptom definition this condition is part of will be triggered if any of the fault faultEvents occurred.",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "faultEvents",
              "wrapped": false
            }
          },
          "faultKey": {
            "description": "The fault condition faultKey matches the Fault Event's FaultState",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "faultKey",
              "wrapped": false
            }
          }
        },
        "required": [
          "faultEvents",
          "faultKey"
        ],
        "title": "fault-condition",
        "type": "object"
      },
      "fixed-price": {
        "properties": {
          "chargePeriod": {
            "description": "The charge period",
            "enum": [
              "HOURLY",
              "DAILY",
              "WEEKLY",
              "MONTHLY",
              "UNKNOWN"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "chargePeriod",
              "wrapped": false
            }
          },
          "rate": {
            "description": "The rate of the fixed price",
            "format": "double",
            "type": "number",
            "xml": {
              "attribute": true,
              "name": "rate",
              "wrapped": false
            }
          }
        },
        "required": [
          "chargePeriod",
          "rate"
        ],
        "title": "fixed-price",
        "type": "object"
      },
      "geo-location": {
        "description": "Represents a geographical location on planet earth.",
        "properties": {
          "latitude": {
            "description": "Latitude of the location.",
            "format": "double",
            "type": "number",
            "xml": {
              "attribute": false,
              "name": "latitude",
              "wrapped": false
            }
          },
          "longitude": {
            "description": "Longitude of the location.",
            "format": "double",
            "type": "number",
            "xml": {
              "attribute": false,
              "name": "longitude",
              "wrapped": false
            }
          }
        },
        "title": "geo-location",
        "type": "object"
      },
      "global-settings-properties": {
        "description": "List of global setting properties",
        "properties": {
          "global-setting-property": {
            "description": "Collection of global setting properties",
            "items": {
              "$ref": "#/components/schemas/global-settings-property"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "global-setting-property",
              "wrapped": false
            }
          }
        },
        "required": [
          "global-setting-property"
        ],
        "title": "global-settings-properties",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "global-settings-properties",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "global-settings-property": {
        "description": "Represents the properties of global setting configuration.",
        "properties": {
          "dataType": {
            "description": "The data type of the global setting",
            "enum": [
              "STRING",
              "INTEGER",
              "HOST",
              "IP",
              "ENUM",
              "PASSWORD",
              "BOOLEAN",
              "UNKNOWN"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "dataType",
              "wrapped": false
            }
          },
          "defaultValue": {
            "description": "The default value of the global setting",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "defaultValue",
              "wrapped": false
            }
          },
          "maxValue": {
            "description": "The max value of the global setting (if dataType is NUMBER)",
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "maxValue",
              "wrapped": false
            }
          },
          "minValue": {
            "description": "The min value of the global setting (if dataType is NUMBER)",
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "minValue",
              "wrapped": false
            }
          },
          "name": {
            "description": "The name of the global setting",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "name",
              "wrapped": false
            }
          },
          "unit": {
            "description": "The unit of measurement",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "unit",
              "wrapped": false
            }
          }
        },
        "required": [
          "dataType",
          "defaultValue",
          "name"
        ],
        "title": "global-settings-property",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "global-settings-property",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "group-type": {
        "description": "A Model representing a Group Type",
        "properties": {
          "key": {
            "description": "Key of the Group Type",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "key",
              "wrapped": false
            }
          },
          "name": {
            "description": "Name of the Group Type",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "name",
              "wrapped": false
            }
          }
        },
        "required": [
          "key",
          "name"
        ],
        "title": "group-type",
        "type": "object"
      },
      "group-types": {
        "description": "Represents a Collection of Group Types",
        "properties": {
          "groupTypes": {
            "description": "Collection of Group Types",
            "items": {
              "$ref": "#/components/schemas/group-type"
            },
            "type": "array"
          }
        },
        "title": "group-types",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "group-types",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "import-operation-summary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/operation-summary"
          },
          {
            "description": "Import Operation Summary",
            "properties": {
              "contentType": {
                "description": "The content type",
                "enum": [
                  "VIEW_DEFINITIONS",
                  "REPORT_DEFINITIONS",
                  "DASHBOARDS",
                  "REPORT_SCHEDULES",
                  "POLICIES",
                  "ALERT_DEFINITIONS",
                  "SYMPTOM_DEFINITIONS",
                  "RECOMMENDATION_DEFINITIONS",
                  "CUSTOM_GROUPS",
                  "SUPER_METRICS",
                  "CONFIG_FILES",
                  "COMPLIANCE_SCORECARDS",
                  "NOTIFICATION_RULES",
                  "OUTBOUND_SETTINGS",
                  "PAYLOAD_TEMPLATES",
                  "INTEGRATIONS",
                  "COST_DRIVERS",
                  "USERS",
                  "USER_GROUPS",
                  "ROLES",
                  "AUTH_SOURCES",
                  "HTTP_PROXIES",
                  "SDMP_CUSTOM_SERVICES",
                  "SDMP_CUSTOM_APPLICATIONS",
                  "CUSTOM_PROFILES",
                  "DISCOVERY_RULES",
                  "APP_DEF_ASSIGNMENTS",
                  "GLOBAL_SETTINGS",
                  "UNKNOWN"
                ],
                "type": "string",
                "xml": {
                  "attribute": false,
                  "name": "contentType",
                  "wrapped": false
                }
              },
              "errorMessages": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "xml": {
                  "attribute": false,
                  "name": "errorMessages",
                  "wrapped": true
                }
              },
              "failed": {
                "description": "The number of failed objects in content",
                "format": "int32",
                "type": "integer",
                "xml": {
                  "attribute": false,
                  "name": "failed",
                  "wrapped": false
                }
              },
              "imported": {
                "description": "The number of objects in content",
                "format": "int32",
                "type": "integer",
                "xml": {
                  "attribute": false,
                  "name": "imported",
                  "wrapped": false
                }
              },
              "infoMessages": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "xml": {
                  "attribute": false,
                  "name": "infoMessages",
                  "wrapped": true
                }
              },
              "skipped": {
                "description": "The number of skipped objects in content",
                "format": "int32",
                "type": "integer",
                "xml": {
                  "attribute": false,
                  "name": "skipped",
                  "wrapped": false
                }
              },
              "state": {
                "description": "The state of the run for the content",
                "enum": [
                  "NOT_INITIALIZED",
                  "INITIALIZED",
                  "RUNNING",
                  "FAILED",
                  "FINISHED",
                  "UNKNOWN"
                ],
                "type": "string",
                "xml": {
                  "attribute": false,
                  "name": "state",
                  "wrapped": false
                }
              },
              "total": {
                "description": "The total number of objects in content",
                "format": "int32",
                "type": "integer",
                "xml": {
                  "attribute": false,
                  "name": "total",
                  "wrapped": false
                }
              }
            },
            "required": [
              "contentType"
            ],
            "title": "import-operation-summary",
            "type": "object"
          }
        ],
        "description": "Import Operation Summary",
        "title": "import-operation-summary"
      },
      "interval-unit": {
        "description": "Number of intervals of a particular <b><i>intervalType</i></b>",
        "properties": {
          "intervalType": {
            "description": "The interval type",
            "enum": [
              "HOURS",
              "MINUTES",
              "SECONDS",
              "DAYS",
              "WEEKS",
              "MONTHS",
              "YEARS"
            ],
            "type": "string"
          },
          "quantifier": {
            "description": "Number of the specified interval type",
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "intervalType"
        ],
        "title": "interval-unit",
        "type": "object"
      },
      "key-value": {
        "description": "Model to handle arbitrary key/value entries, with XML bindings",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "title": "key-value",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "key-value",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "latest-stat-query": {
        "description": "Object used to request latest stats (metrics) on a collection of resources.\nDefines search criteria as well as expected data set.",
        "properties": {
          "currentOnly": {
            "description": "Indicates whether to report only \"current\" stat values, i.e. skip the stat-s that haven't published any value\nduring recent collection cycles.",
            "type": "boolean"
          },
          "maxSamples": {
            "description": "The maximum number of samples to return when querying latest stats.\nDefaults to 1 so that when processing the query if it is omitted\nthe response would contain a single sample",
            "format": "int32",
            "type": "integer"
          },
          "metrics": {
            "description": "Indicates whether specified statKey-s of query should be forcibly treated as metrics (does not include instanced stats)",
            "type": "boolean"
          },
          "resourceId": {
            "description": "Array of Resource ids for which the latest stats should be fetched",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "statKey": {
            "description": "Array of stat keys for which the latest stats should be returned",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "wrapStatValues": {
            "description": "Indicates whether stat values should be wrapped for application/xml response content type.\nThis flag is false by default and not needed for application/json response.\nIf set to true \"statValues\" will be returned instead of \"values\" for all content types.",
            "type": "boolean"
          }
        },
        "title": "latest-stat-query",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "latest-stat-query",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "link": {
        "description": "Represents a HTTP 'link' element.\nIt is implicit that all the link tags support http 'GET' method.",
        "properties": {
          "description": {
            "description": "The description of the link",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "description",
              "wrapped": false
            }
          },
          "href": {
            "description": "The url part of this tag. Note that the href can be absolute or relative to the current url.\nIf the href begins with '/', then its absolute.\nIf the href begins with the protocol element(http, https), its absolute\nOtherwise its relative.",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "href",
              "wrapped": false
            }
          },
          "name": {
            "description": "The name of the link",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "name",
              "wrapped": false
            }
          },
          "rel": {
            "description": "How is this link related to its parent object",
            "enum": [
              "NEXT",
              "PREVIOUS",
              "START",
              "END",
              "RELATED",
              "SELF"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "rel",
              "wrapped": false
            }
          }
        },
        "required": [
          "href"
        ],
        "title": "link",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "link",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "localization": {
        "properties": {
          "language": {
            "description": "The language of the localized value",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "language",
              "wrapped": false
            }
          },
          "longDescription": {
            "description": "Long descriptions of the localized value",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "longDescription",
              "wrapped": true
            }
          },
          "shortDescription": {
            "description": "Short descriptions of the localized value",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "shortDescription",
              "wrapped": true
            }
          }
        },
        "required": [
          "language"
        ],
        "title": "localization",
        "type": "object"
      },
      "maintenance-schedule": {
        "description": "Represents a maintenance schedule during which resources are set to 'maintained' state. The server inturn informs the adapters that monitor these resources to stop monitoring until specified otherwise.Each maintenance schedule has an id, key and schedule. Both <i>id</i> and <i>key</i> have to be unique within the system. While <i>id</i> is automatically assigned by the server, <i>key</i> must be specified by the user.",
        "properties": {
          "id": {
            "description": "Identifier generated by the server for this schedule.",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "key": {
            "description": "Schedule key provided by user. Cannot be null during creation.",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "key",
              "wrapped": false
            }
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule",
            "description": "Schedule information.",
            "xml": {
              "attribute": false,
              "name": "schedule",
              "wrapped": false
            }
          }
        },
        "required": [
          "key",
          "schedule"
        ],
        "title": "maintenance-schedule",
        "type": "object"
      },
      "maintenance-schedules": {
        "description": "List of maintenance schedules",
        "properties": {
          "links": {
            "description": "Collection of links",
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "pageInfo": {
            "$ref": "#/components/schemas/page-info",
            "description": "Page information for result list",
            "xml": {
              "attribute": false,
              "name": "pageInfo",
              "wrapped": false
            }
          },
          "schedules": {
            "description": "Collection of maintenance schedules",
            "items": {
              "$ref": "#/components/schemas/maintenance-schedule"
            },
            "type": "array"
          }
        },
        "title": "maintenance-schedules",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "maintenance-schedules",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "membership-rule-group": {
        "description": "Group membership rule. Requires the resource kind key to specify a resource kind to be included in the group.\nOptionally the included resources can be filtered by metric key/property rules, relationship rules or resource name rules.",
        "properties": {
          "propertyConditionRules": {
            "description": "Collection of property conditions for a custom group",
            "items": {
              "$ref": "#/components/schemas/property-stat-condition-rule"
            },
            "type": "array"
          },
          "relationshipConditionRules": {
            "description": "Collection of relationship rules for a custom group",
            "items": {
              "$ref": "#/components/schemas/relationship-condition-rule"
            },
            "type": "array"
          },
          "resourceKindKey": {
            "$ref": "#/components/schemas/resource-kind-key",
            "description": "The resource kind identifier for the membership rule group\n<b>NOTE: </b> To run the rule for ALL adapter kinds' ALL resource kinds,\nset \"ALL\" for BOTH resourceKind and adapterKind parameters",
            "xml": {
              "attribute": false,
              "name": "resourceKindKey",
              "wrapped": false
            }
          },
          "resourceNameConditionRules": {
            "description": "Collection of resource name rules for a custom group",
            "items": {
              "$ref": "#/components/schemas/resource-name-condition-rule"
            },
            "type": "array"
          },
          "resourceTagConditionRules": {
            "description": "Collection of resource tag rules for a custom group",
            "items": {
              "$ref": "#/components/schemas/resource-tag-condition-rule"
            },
            "type": "array"
          },
          "statConditionRules": {
            "description": "Collection of metric conditions for a custom group",
            "items": {
              "$ref": "#/components/schemas/property-stat-condition-rule"
            },
            "type": "array"
          }
        },
        "required": [
          "resourceKindKey"
        ],
        "title": "membership-rule-group",
        "type": "object"
      },
      "message-event-condition": {
        "description": "Message Event Condition used as part of a Symptom Definition for the Event type",
        "properties": {
          "eventType": {
            "description": "Event type of the Symptom",
            "enum": [
              "RESOURCE_DOWN",
              "SYSTEM_DEGRADATION",
              "NOTIFICATION",
              "CHANGE"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "eventType",
              "wrapped": false
            }
          },
          "message": {
            "description": "The <i>message<i> is the string that the event's message must\neither match exactly if <b><i>operator</i></b> is CompareOperator.EQ or\nbe a substring if <b><i>operator</i></b> is CompareOperator.CONTAINS\n<b>NOTE:</b> Also in this case the message must be 3-128 characters long and the\n     symptom from the event must be IN the message",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "message",
              "wrapped": false
            }
          },
          "operator": {
            "description": "Default is EQ",
            "enum": [
              "EQ",
              "CONTAINS"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "operator",
              "wrapped": false
            }
          }
        },
        "required": [
          "eventType"
        ],
        "title": "message-event-condition",
        "type": "object"
      },
      "metering": {
        "properties": {
          "baseRate": {
            "description": "The base rate of the charge",
            "format": "double",
            "type": "number",
            "xml": {
              "attribute": true,
              "name": "baseRate",
              "wrapped": false
            }
          },
          "chargeBasedOn": {
            "description": "The charging type of the metering item",
            "enum": [
              "USAGE",
              "ALLOCATION",
              "RESERVATION",
              "MAX_FROM_USAGE_AND_ALLOCATION",
              "MAX_FROM_USAGE_AND_RESERVATION",
              "UNKNOWN"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "chargeBasedOn",
              "wrapped": false
            }
          },
          "chargeOnPowerState": {
            "description": "The charge type depending on the power state",
            "enum": [
              "ALWAYS",
              "ONLY_WHEN_POWERED_ON",
              "POWERED_ON_AT_LEAST_ONCE",
              "UNKNOWN"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "chargeOnPowerState",
              "wrapped": false
            }
          },
          "chargePeriod": {
            "description": "The charge period",
            "enum": [
              "HOURLY",
              "DAILY",
              "WEEKLY",
              "MONTHLY",
              "UNKNOWN"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "chargePeriod",
              "wrapped": false
            }
          },
          "conditionalBaseRates": {
            "items": {
              "$ref": "#/components/schemas/ConditionalBaseRate"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "conditionalBaseRates",
              "wrapped": true
            }
          },
          "fixedPrice": {
            "description": "The fixed price of the metering item",
            "format": "double",
            "type": "number",
            "xml": {
              "attribute": true,
              "name": "fixedPrice",
              "wrapped": false
            }
          },
          "overage": {
            "description": "Flag that indicates whether ",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "overage",
              "wrapped": false
            }
          },
          "overageRate": {
            "description": "The overage rate of the charge",
            "format": "double",
            "type": "number",
            "xml": {
              "attribute": false,
              "name": "overageRate",
              "wrapped": false
            }
          },
          "unit": {
            "description": "The unit of the underlying metric/property of metering item",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "unit",
              "wrapped": false
            }
          }
        },
        "required": [
          "baseRate",
          "chargeBasedOn",
          "fixedPrice"
        ],
        "title": "metering",
        "type": "object"
      },
      "metric-event-condition": {
        "description": "Model object for a Metric Event Condition.\nImplicitly maps to <b><i>EventType#HARD_THRESHOLD</i></b>.\nThe operator only allows for EXISTS conditions so specification of an operator\nis not necessary and <i>CompareOperator.EXISTS</i> is implicitly used.",
        "properties": {
          "hardThresholdEventType": {
            "description": "The Hard Threshold type for a metric event condition",
            "enum": [
              "EQUAL",
              "NOT_EQUAL",
              "ABOVE",
              "BELOW"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "hardThresholdEventType",
              "wrapped": false
            }
          },
          "statKey": {
            "description": "The metric key value",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "statKey",
              "wrapped": false
            }
          }
        },
        "required": [
          "hardThresholdEventType",
          "statKey"
        ],
        "title": "metric-event-condition",
        "type": "object"
      },
      "name-value": {
        "description": "Represents a single name -> value tuple.",
        "properties": {
          "name": {
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "name",
              "wrapped": false
            }
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "value"
        ],
        "title": "name-value",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "name-value",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "notification-plugin": {
        "description": "Plugin contains data required for a Plugin instance",
        "properties": {
          "certificates": {
            "description": "Any set of untrusted certificates returned by the adapter source",
            "items": {
              "$ref": "#/components/schemas/certificate"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "certificates",
              "wrapped": true
            }
          },
          "configValues": {
            "description": "The list of name value pairs for Plugin configuration",
            "items": {
              "$ref": "#/components/schemas/name-value"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "configValues",
              "wrapped": true
            }
          },
          "description": {
            "description": "The description for the configuration",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "description",
              "wrapped": false
            }
          },
          "enabled": {
            "description": "A read-only property whose value is set by the system",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "enabled",
              "wrapped": false
            }
          },
          "name": {
            "description": "The name for the configuration",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          },
          "pluginId": {
            "description": "The Plugin Id, cannot be null during update operations",
            "format": "uuid",
            "type": "string"
          },
          "pluginTypeId": {
            "description": "The plugin type identifier",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "title": "notification-plugin",
        "type": "object"
      },
      "notification-plugins": {
        "properties": {
          "notificationPluginInstances": {
            "description": "Collection of notification plugin instances",
            "items": {
              "$ref": "#/components/schemas/notification-plugin"
            },
            "type": "array"
          }
        },
        "title": "notification-plugins",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "notification-plugins",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "notification-rule": {
        "description": "Model that represents a notification rule.\nVMware Aria Operations has a rule engine that evaluates these rules against generated alerts.\nActions such as sending Email, HTTP callback is done based on matching rules.\n<b>NOTE:</b> resourceFilter and resourceKindFilter fields are deprecated, instead please use resourceFilters and resourceKindFilters fields respectively.",
        "properties": {
          "alertControlStates": {
            "description": "Set of Alert control states that the alert is expected to be in",
            "items": {
              "enum": [
                "OPEN",
                "ASSIGNED",
                "SUSPENDED",
                "SUPPRESSED"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "alertDefinitionIdFilters": {
            "$ref": "#/components/schemas/str-values",
            "description": "Filter for the rule to match Alerts that got generated because of specific Alert Definitions"
          },
          "alertImpactFilters": {
            "$ref": "#/components/schemas/str-values",
            "description": "Filter for the rule to match Alerts that have a specific Impact (Health, Risk or Efficiency).\nOne or more of the String values - \"HEALTH\", \"RISK\", \"EFFICIENCY\" - must be specified."
          },
          "alertStatuses": {
            "description": "Set of Alert states that the alert is expected to be in",
            "items": {
              "enum": [
                "NEW",
                "ACTIVE",
                "UPDATED",
                "CANCELED"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "alertTypeFilters": {
            "description": "Filter for the rule to match Alerts which are of the specified Alert type & Alert Subtypes",
            "items": {
              "$ref": "#/components/schemas/AlertTypeFilter"
            },
            "type": "array"
          },
          "collectorGroupId": {
            "description": "Filter for the rule to match Alerts triggered on resources belonging to given collector group",
            "type": "string"
          },
          "collectorUUId": {
            "description": "Filter for the rule to match Alerts triggered on resources belonging to given collector",
            "type": "string"
          },
          "criticalities": {
            "description": "Set of Alert criticalities that the alert is expected to be in",
            "items": {
              "enum": [
                "UNKNOWN",
                "NONE",
                "INFORMATION",
                "WARNING",
                "IMMEDIATE",
                "CRITICAL",
                "AUTO"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "enabled": {
            "description": "Identifier that shows if the notification rule is enabled. Enabled by default",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "enabled",
              "wrapped": false
            }
          },
          "id": {
            "description": "Identifier of this rule, automatically assigned by the system on create",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "name": {
            "description": "Name of this rule",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          },
          "pluginId": {
            "description": "Identifier of the plugin for which this rule applies",
            "type": "string"
          },
          "properties": {
            "description": "Properties associated with the given rule. This may include information such as the email addresses of\nreceivers/etc...",
            "items": {
              "$ref": "#/components/schemas/name-value"
            },
            "type": "array"
          },
          "resourceFilter": {
            "$ref": "#/components/schemas/ResourceFilter",
            "description": "(Deprecated) Filter for the rule to be matched based on the \"Resource and its Children\" for which the Alerts were generated.\n<b>NOTE:</b> this field will be ignored if resourceFilters is specified"
          },
          "resourceFilters": {
            "description": "Filters for the rule to be matched based on the \"Resource and its Children\" for which the Alerts were generated. This collection takes precedence over resourceFilter field.",
            "items": {
              "$ref": "#/components/schemas/ResourceFilter"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "resourceFilters",
              "wrapped": true
            }
          },
          "resourceKindFilter": {
            "$ref": "#/components/schemas/ResourceKindFilter",
            "description": "Filter for the rule to be matched based on the Resource Kind for which the alert was generated",
            "xml": {
              "attribute": false,
              "name": "resourceKindFilter",
              "wrapped": false
            }
          },
          "resourceKindFilters": {
            "description": "Filter for the rule to be matched based on the Resource Kind for which the alert was generated",
            "items": {
              "$ref": "#/components/schemas/resource-kind-key"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "resourceKindFilters",
              "wrapped": true
            }
          },
          "sendHeartbeat": {
            "description": "Filter for the rule to send Alerts while they are active. Defaulted to False if nothing is provided.",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "sendHeartbeat",
              "wrapped": false
            }
          },
          "templateId": {
            "description": "Identifier of the template.\n<b>NOTE:</b> For deprecated plugin types this field will be ignored. For all other plugin types, default templates will be used if this value is not specified.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "templateId",
              "wrapped": false
            }
          }
        },
        "required": [
          "name"
        ],
        "title": "notification-rule",
        "type": "object"
      },
      "notification-rules": {
        "description": "Model to represent a collection of Notification Rules",
        "properties": {
          "links": {
            "description": "Collection of links",
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "pageInfo": {
            "$ref": "#/components/schemas/page-info",
            "description": "Page information for result list",
            "xml": {
              "attribute": false,
              "name": "pageInfo",
              "wrapped": false
            }
          },
          "rules": {
            "description": "List of Notification Rules",
            "items": {
              "$ref": "#/components/schemas/notification-rule"
            },
            "type": "array"
          }
        },
        "title": "notification-rules",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "notification-rules",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "one-time-metering": {
        "properties": {
          "oneTimeFixedPrice": {
            "format": "double",
            "type": "number",
            "xml": {
              "attribute": true,
              "name": "oneTimeFixedPrice",
              "wrapped": false
            }
          }
        },
        "required": [
          "oneTimeFixedPrice"
        ],
        "title": "one-time-metering",
        "type": "object"
      },
      "operation-details": {
        "description": "Operation Details in Content Management",
        "properties": {
          "endTime": {
            "description": "The end time of the operation",
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "endTime",
              "wrapped": false
            }
          },
          "errorCode": {
            "description": "The error code of the operation",
            "enum": [
              "NONE",
              "INVALID_FILE_FORMAT",
              "INVALID_ENCRYPTION_KEY",
              "OPERATION_FAILED",
              "UNKNOWN"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "errorCode",
              "wrapped": false
            }
          },
          "errorMessages": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "errorMessages",
              "wrapped": true
            }
          },
          "id": {
            "description": "The id of operation",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "lastUpdatedTime": {
            "description": "The last update time of the operation",
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "lastUpdatedTime",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "operationSummaries": {
            "description": "Collection of Content Operation Summaries",
            "items": {
              "$ref": "#/components/schemas/operation-summary"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "operationSummaries",
              "wrapped": true
            }
          },
          "startTime": {
            "description": "The start time of the operation",
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "startTime",
              "wrapped": false
            }
          },
          "state": {
            "description": "The current state of the operation",
            "enum": [
              "NOT_INITIALIZED",
              "INITIALIZED",
              "RUNNING",
              "FAILED",
              "FINISHED",
              "UNKNOWN"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "state",
              "wrapped": false
            }
          },
          "type": {
            "description": "The type of operation",
            "enum": [
              "NOT_INITIALIZED",
              "IMPORT",
              "EXPORT",
              "UNKNOWN"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "type",
              "wrapped": false
            }
          }
        },
        "required": [
          "state"
        ],
        "title": "operation-details",
        "type": "object"
      },
      "operation-summary": {
        "description": "Base model for details of the operation.\nFor JSON the model descendants will generate with a field named \"type\" with one of the following values:\n<i> \"import\", \"export\"</i>. Submodels are : \nimport-operation-summary\nexport-operation-summary",
        "properties": {
          "contentType": {
            "description": "The content type",
            "enum": [
              "VIEW_DEFINITIONS",
              "REPORT_DEFINITIONS",
              "DASHBOARDS",
              "REPORT_SCHEDULES",
              "POLICIES",
              "ALERT_DEFINITIONS",
              "SYMPTOM_DEFINITIONS",
              "RECOMMENDATION_DEFINITIONS",
              "CUSTOM_GROUPS",
              "SUPER_METRICS",
              "CONFIG_FILES",
              "COMPLIANCE_SCORECARDS",
              "NOTIFICATION_RULES",
              "OUTBOUND_SETTINGS",
              "PAYLOAD_TEMPLATES",
              "INTEGRATIONS",
              "COST_DRIVERS",
              "USERS",
              "USER_GROUPS",
              "ROLES",
              "AUTH_SOURCES",
              "HTTP_PROXIES",
              "SDMP_CUSTOM_SERVICES",
              "SDMP_CUSTOM_APPLICATIONS",
              "CUSTOM_PROFILES",
              "DISCOVERY_RULES",
              "APP_DEF_ASSIGNMENTS",
              "GLOBAL_SETTINGS",
              "UNKNOWN"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "contentType",
              "wrapped": false
            }
          },
          "state": {
            "description": "The state of the run for the content",
            "enum": [
              "NOT_INITIALIZED",
              "INITIALIZED",
              "RUNNING",
              "FAILED",
              "FINISHED",
              "UNKNOWN"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "state",
              "wrapped": false
            }
          }
        },
        "required": [
          "contentType"
        ],
        "title": "operation-summary",
        "type": "object"
      },
      "page-info": {
        "description": "Represents page information for a paged result",
        "properties": {
          "page": {
            "description": "The current page number",
            "format": "int32",
            "type": "integer"
          },
          "pageSize": {
            "description": "Number of entries allowed in a page",
            "format": "int32",
            "type": "integer"
          },
          "sortBy": {
            "description": "A CSV list of field names. Usually found in an enumeration, e.g. ResourceField",
            "type": "string"
          },
          "sortOrder": {
            "description": "A CSV list of SortOrder values. If not specified or if list is shorter than sortFields then SortOrder.ASCENDING is assumed.",
            "type": "string"
          },
          "totalCount": {
            "description": "Total number of results",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true,
              "name": "totalCount",
              "wrapped": false
            }
          }
        },
        "title": "page-info",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "page-info",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "policy-groups": {
        "description": "Model object containing information on policy and associated groups",
        "properties": {
          "groups": {
            "description": "Collection of groups to which the policy should be applied",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": true,
              "name": "groups",
              "wrapped": false
            }
          },
          "id": {
            "description": "Policy Identifier",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          }
        },
        "required": [
          "groups",
          "id"
        ],
        "title": "policy-groups",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "policy-groups",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "policy-ref": {
        "properties": {
          "policyId": {
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "policyId",
              "wrapped": false
            }
          },
          "priority": {
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true,
              "name": "priority",
              "wrapped": false
            }
          }
        },
        "required": [
          "policyId",
          "priority"
        ],
        "title": "policy-ref",
        "type": "object"
      },
      "policy-summaries-collection": {
        "description": "Represents a Collection of Policy Summaries.",
        "properties": {
          "policySummaries": {
            "description": "Collection of Policy Summaries",
            "items": {
              "$ref": "#/components/schemas/policy-summary"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "policySummaries",
              "wrapped": true
            }
          }
        },
        "title": "policy-summaries-collection",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "policy-summaries-collection",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "policy-summary": {
        "description": "Model object containing summary of policy information",
        "properties": {
          "defaultPolicy": {
            "description": "Is policy set as default",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "defaultPolicy",
              "wrapped": false
            }
          },
          "id": {
            "description": "Policy Identifier",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "name": {
            "description": "Name of the Policy",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "name",
              "wrapped": false
            }
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "policy-summary",
        "type": "object"
      },
      "policy-update-outcome": {
        "description": "Model object containing result of policy to groups association",
        "properties": {
          "createdPolicies": {
            "description": "Array of created policies",
            "items": {
              "$ref": "#/components/schemas/policy-summary"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "createdPolicies",
              "wrapped": true
            }
          },
          "skippedPolicies": {
            "description": "Array of skipped policies",
            "items": {
              "$ref": "#/components/schemas/policy-summary"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "skippedPolicies",
              "wrapped": true
            }
          },
          "updatedPolicies": {
            "description": "Array of updated policies",
            "items": {
              "$ref": "#/components/schemas/policy-summary"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "updatedPolicies",
              "wrapped": true
            }
          }
        },
        "title": "policy-update-outcome",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "policy-update-outcome",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "populated-action": {
        "description": "Returns information about an action on particular resources with the results of the expressions that populate those resources included.",
        "properties": {
          "action-execution": {
            "$ref": "#/components/schemas/action-execution",
            "description": "The sample of information needed to submit the action with default values",
            "xml": {
              "attribute": false,
              "name": "action-execution",
              "wrapped": false
            }
          },
          "actionContext": {
            "$ref": "#/components/schemas/action-context",
            "description": "The action context information for the populated action",
            "xml": {
              "attribute": false,
              "name": "actionContext",
              "wrapped": false
            }
          },
          "id": {
            "description": "The key of the populated action",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "methodParameters": {
            "description": "The parameters for the method that was populated",
            "items": {
              "$ref": "#/components/schemas/action-parameter"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "methodParameters",
              "wrapped": true
            }
          },
          "resourceId": {
            "description": "The resource ids that apply to the populated action",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "resourceId",
              "wrapped": false
            }
          }
        },
        "required": [
          "id",
          "resourceId"
        ],
        "title": "populated-action",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "populated-action",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "pricing-policies": {
        "properties": {
          "policies": {
            "description": "Collection of Pricing policy details",
            "items": {
              "$ref": "#/components/schemas/pricing-policy"
            },
            "type": "array"
          }
        },
        "title": "pricing-policies",
        "type": "object"
      },
      "pricing-policy": {
        "description": "Pricing policy details",
        "properties": {
          "chargeModel": {
            "description": "The charge model of the pricing policy",
            "enum": [
              "ALLOCATION_POOL",
              "RESERVATION_POOL",
              "PAY_AS_YOU_GO",
              "UNKNOWN"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "chargeModel",
              "wrapped": false
            }
          },
          "createdBy": {
            "description": "The policy creator",
            "enum": [
              "VRA",
              "TA",
              "TA_VCD",
              "TA_VC",
              "VROPS",
              "UNKNOWN"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "createdBy",
              "wrapped": false
            }
          },
          "description": {
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "description",
              "wrapped": false
            }
          },
          "id": {
            "description": "The UUID of the policy.\n<br/><b>Note:</b> It is required during update.",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "lastUpdateTimestamp": {
            "description": "The last update timestamp of the policy",
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "lastUpdateTimestamp",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "meterings": {
            "description": "Collection of metering items",
            "items": {
              "$ref": "#/components/schemas/MeteringItem"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "meterings",
              "wrapped": true
            }
          },
          "name": {
            "description": "The pricing policy name",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "name",
              "wrapped": false
            }
          },
          "namedMeterings": {
            "description": "Collection of named metering items",
            "items": {
              "$ref": "#/components/schemas/NamedMeteringItem"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "namedMeterings",
              "wrapped": true
            }
          },
          "oneTimeMeterings": {
            "items": {
              "$ref": "#/components/schemas/OneTimeMeteringItem"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "oneTimeMeterings",
              "wrapped": true
            }
          },
          "tagBasedMeterings": {
            "description": "Collection of tag based metering items",
            "items": {
              "$ref": "#/components/schemas/TagBasedMeteringItem"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "tagBasedMeterings",
              "wrapped": true
            }
          },
          "tagBasedOneTimeMeterings": {
            "items": {
              "$ref": "#/components/schemas/TagBasedOneTimeMeteringItem"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "tagBasedOneTimeMeterings",
              "wrapped": true
            }
          },
          "tagBasedPolicyRefs": {
            "items": {
              "$ref": "#/components/schemas/TagBasedPolicyRefItem"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "tagBasedPolicyRefs",
              "wrapped": true
            }
          },
          "tagBasedRateFactors": {
            "items": {
              "$ref": "#/components/schemas/TagBasedRateFactorItem"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "tagBasedRateFactors",
              "wrapped": true
            }
          },
          "unconditionalMeterings": {
            "description": "Collection of unconditional metering items",
            "items": {
              "$ref": "#/components/schemas/UnconditionalMeteringItem"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "unconditionalMeterings",
              "wrapped": true
            }
          }
        },
        "required": [
          "chargeModel",
          "name"
        ],
        "title": "pricing-policy",
        "type": "object"
      },
      "privilege": {
        "description": "Represents a privilege object in the system.",
        "properties": {
          "description": {
            "description": "The description of the Privilege.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "description",
              "wrapped": false
            }
          },
          "key": {
            "description": "The key that uniquely identifies the privilege.",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "key",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "name": {
            "description": "The name of the Privilege.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          }
        },
        "required": [
          "key"
        ],
        "title": "privilege",
        "type": "object"
      },
      "privilege-group": {
        "description": "Represents a privilege group object in the system.",
        "properties": {
          "description": {
            "description": "The description of the Privilege group.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "description",
              "wrapped": false
            }
          },
          "key": {
            "description": "The key that uniquely identifies the privilege group.",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "key",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "name": {
            "description": "The name of the Privilege group.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          }
        },
        "required": [
          "key"
        ],
        "title": "privilege-group",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "privilege-group",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "privilege-groups": {
        "description": "List of privilege groups",
        "properties": {
          "privilegeGroups": {
            "description": "Collection of privilege groups",
            "items": {
              "$ref": "#/components/schemas/privilege-group"
            },
            "type": "array"
          }
        },
        "title": "privilege-groups",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "privilege-groups",
          "wrapped": false
        }
      },
      "privilege-keys": {
        "description": "List of only the Privilege key values",
        "properties": {
          "privilege-key": {
            "description": "Collection of privilege keys",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "privilege-key",
              "wrapped": false
            }
          }
        },
        "required": [
          "privilege-key"
        ],
        "title": "privilege-keys",
        "type": "object"
      },
      "privileges": {
        "description": "List of privileges",
        "properties": {
          "privileges": {
            "description": "Collection of privileges",
            "items": {
              "$ref": "#/components/schemas/privilege"
            },
            "type": "array"
          }
        },
        "title": "privileges",
        "type": "object"
      },
      "profile-metric": {
        "description": "Metric details of custom profile",
        "properties": {
          "metric": {
            "description": "The name of the metric",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "metric",
              "wrapped": false
            }
          },
          "unit": {
            "description": "The unit of the metric",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "unit",
              "wrapped": false
            }
          },
          "value": {
            "description": "The value of the metric",
            "format": "double",
            "type": "number",
            "xml": {
              "attribute": false,
              "name": "value",
              "wrapped": false
            }
          }
        },
        "required": [
          "metric",
          "unit",
          "value"
        ],
        "title": "profile-metric",
        "type": "object"
      },
      "properties": {
        "description": "Represents a collection of auth source type properties",
        "properties": {
          "property": {
            "description": "Collection of auth source type properties",
            "items": {
              "$ref": "#/components/schemas/auth-source-property"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "property",
              "wrapped": false
            }
          }
        },
        "title": "properties",
        "type": "object"
      },
      "properties-query": {
        "description": "Object used to request properties on a collection of resources",
        "properties": {
          "instanced": {
            "description": "Indicates whether specified property keys of query should be forcibly treated as instanced properties",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "instanced",
              "wrapped": false
            }
          },
          "propertyKeys": {
            "description": "Array of property keys to fetch the latest values for",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "propertyKeys",
              "wrapped": false
            }
          },
          "resourceIds": {
            "description": "Array of resource ids to fetch the properties for",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "resourceIds",
              "wrapped": false
            }
          }
        },
        "required": [
          "propertyKeys",
          "resourceIds"
        ],
        "title": "properties-query",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "properties-query",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "property-content": {
        "description": "Represents the Property Content posted by the user.\nThe data posted by the user can be numeric data or string data.\nHowever both types of the data cannot be sent together.",
        "properties": {
          "data": {
            "description": "The array of numeric data that is being posted",
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "data",
              "wrapped": false
            }
          },
          "statKey": {
            "description": "Stat Key for which the data is being posted",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "statKey",
              "wrapped": false
            }
          },
          "timestamps": {
            "description": "The array of timestamps at which the data is being posted. All the timestamps must be in milliseconds.",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "timestamps",
              "wrapped": false
            }
          },
          "values": {
            "description": "The array of string values that are being posted",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "values",
              "wrapped": false
            }
          }
        },
        "required": [
          "statKey",
          "timestamps"
        ],
        "title": "property-content",
        "type": "object"
      },
      "property-contents": {
        "description": "Represents the Property Contents posted by the user",
        "properties": {
          "property-content": {
            "description": "Collection of property contents",
            "items": {
              "$ref": "#/components/schemas/property-content"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "property-content",
              "wrapped": false
            }
          }
        },
        "required": [
          "property-content"
        ],
        "title": "property-contents",
        "type": "object"
      },
      "property-stat-condition-rule": {
        "description": "Condition on the metric or property key. Value is either a string or double.",
        "properties": {
          "compareOperator": {
            "description": "Comparison operator.",
            "enum": [
              "EQ",
              "NOT_EQ",
              "LT",
              "GT",
              "CONTAINS",
              "NOT_CONTAINS",
              "EXISTS",
              "NOT_EXISTS",
              "EMPTY",
              "NOT_EMPTY",
              "STARTS_WITH",
              "NOT_STARTS_WITH",
              "ENDS_WITH",
              "NOT_ENDS_WITH",
              "REGEX",
              "NOT_REGEX"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "compareOperator",
              "wrapped": false
            }
          },
          "doubleValue": {
            "description": "Double value of the condition",
            "format": "double",
            "type": "number",
            "xml": {
              "attribute": false,
              "name": "doubleValue",
              "wrapped": false
            }
          },
          "key": {
            "description": "Key for the property or stat",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "key",
              "wrapped": false
            }
          },
          "stringValue": {
            "description": "String value of the condition",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "stringValue",
              "wrapped": false
            }
          }
        },
        "required": [
          "compareOperator",
          "key"
        ],
        "title": "property-stat-condition-rule",
        "type": "object"
      },
      "recommendation": {
        "description": "The <i>Recommendation</i> encapsulates information and possible action needed to resolve a problem in the system.\nThe <i>Recommendation</i> optionally includes a <i>RecommendedAction</i>.\n<p> In other words, a recommendation may have textual data and no associated action\nor it can have both.\nThe <i>Recommendation</i> is uniquely identified by an identifier\nwhich is generated by the system during its creation.",
        "properties": {
          "action": {
            "$ref": "#/components/schemas/recommended-action",
            "description": "An optional recommended action to associate with the recommendation",
            "xml": {
              "attribute": false,
              "name": "action",
              "wrapped": false
            }
          },
          "description": {
            "description": "The description for the recommendation",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "description",
              "wrapped": false
            }
          },
          "id": {
            "description": "The recommendation id. Must be null during creation (System generated identifier)",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "id",
              "wrapped": false
            }
          }
        },
        "required": [
          "description"
        ],
        "title": "recommendation",
        "type": "object"
      },
      "recommendations": {
        "properties": {
          "recommendations": {
            "description": "Collection of recommendations",
            "items": {
              "$ref": "#/components/schemas/recommendation"
            },
            "type": "array"
          }
        },
        "title": "recommendations",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "recommendations",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "recommended-action": {
        "description": "Identifies an action the system may take to solve a problem.",
        "properties": {
          "actionAdapterKindId": {
            "description": "The Adapter Kind that defined this Recommended Action\nAn example could be the Out-of-the-box Remediation Adapter Kind ID",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "actionAdapterKindId",
              "wrapped": false
            }
          },
          "targetAdapterKindId": {
            "description": "The Adapter Kind for which this Recommended Action is applicable.\nAn example could be the Out-of-the-box VC Adapter Kind ID viz. \"VMWARE\"",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "targetAdapterKindId",
              "wrapped": false
            }
          },
          "targetMethod": {
            "description": "Name of the remediation action that needs to be performed on the resource\nAn example could be a few of the VM lifecycle operations viz. \"shutdown\", \"reset\" etc.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "targetMethod",
              "wrapped": false
            }
          },
          "targetResourceKindId": {
            "description": "Resource Kind of the Adapter Kind <i>targetAdapterKindId</i>\non which this Recommended Action is applicable.\nFor certain recommended actions, this can be null.\nThe system supports a scenario where the Recommended Action is only\nassociated with <i>targetAdapterKindId</i> only.\nAn example could be the Out-of-the-box VC Resource Kind ID viz. \"VirtualMachine\"",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "targetResourceKindId",
              "wrapped": false
            }
          }
        },
        "required": [
          "actionAdapterKindId",
          "targetAdapterKindId",
          "targetMethod"
        ],
        "title": "recommended-action",
        "type": "object"
      },
      "relationship-condition-rule": {
        "description": "Model represents relationship rules for a custom group",
        "properties": {
          "compareOperator": {
            "description": "Comparison operator",
            "enum": [
              "EQ",
              "NOT_EQ",
              "CONTAINS",
              "NOT_CONTAINS",
              "STARTS_WITH",
              "NOT_STARTS_WITH",
              "ENDS_WITH",
              "NOT_ENDS_WITH",
              "REGEX",
              "NOT_REGEX"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "compareOperator",
              "wrapped": false
            }
          },
          "name": {
            "description": "Name of the resource",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "name",
              "wrapped": false
            }
          },
          "relation": {
            "description": "Type of the relationship",
            "enum": [
              "PARENT",
              "CHILD",
              "ANCESTOR",
              "DESCENDANT"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "relation",
              "wrapped": false
            }
          },
          "travesalSpecId": {
            "description": "Traversal spec identifier",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "travesalSpecId",
              "wrapped": false
            }
          }
        },
        "required": [
          "compareOperator",
          "name",
          "relation",
          "travesalSpecId"
        ],
        "title": "relationship-condition-rule",
        "type": "object"
      },
      "report": {
        "description": "Model representing a Report",
        "properties": {
          "completionTime": {
            "description": "Time when the Report Generation completed.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "completionTime",
              "wrapped": false
            }
          },
          "description": {
            "description": "Description of the Report.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "description",
              "wrapped": false
            }
          },
          "id": {
            "description": "Identifier of the Report.",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "name": {
            "description": "Name of the Report.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          },
          "owner": {
            "description": "Owner (user) who created/executed the Report Generation.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "owner",
              "wrapped": false
            }
          },
          "reportDefinitionId": {
            "description": "Identifier of the Report Definition used to generate this Report.",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "reportDefinitionId",
              "wrapped": false
            }
          },
          "resourceId": {
            "description": "Resource identifier for which the Report needs to be generated.",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "resourceId",
              "wrapped": false
            }
          },
          "status": {
            "description": "Status of Report Generation - whether the Report got generated successfully or not.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "status",
              "wrapped": false
            }
          },
          "subject": {
            "description": "Subjects of the Report.",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "subject",
              "wrapped": false
            }
          },
          "traversalSpec": {
            "$ref": "#/components/schemas/traversal-spec",
            "description": "The traversal spec for which the Report Definition needs to be applied.",
            "xml": {
              "attribute": false,
              "name": "traversalSpec",
              "wrapped": false
            }
          }
        },
        "required": [
          "reportDefinitionId",
          "resourceId"
        ],
        "title": "report",
        "type": "object"
      },
      "report-definition": {
        "description": "Model to represent a Report Definition",
        "properties": {
          "active": {
            "description": "Whether the Report Definition is Active or not.",
            "type": "boolean",
            "xml": {
              "attribute": true,
              "name": "active",
              "wrapped": false
            }
          },
          "creationTime": {
            "description": "Creation time of the Report Definition",
            "format": "date-time",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "creationTime",
              "wrapped": false
            }
          },
          "description": {
            "description": "Description of the Report Definition",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "description",
              "wrapped": false
            }
          },
          "id": {
            "description": "Identifier of the Report Definition. \nThis is system generated and uniquely identifies a Report Definition in the system.",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "lastRunTime": {
            "description": "Last Run time of the Report Definition",
            "format": "date-time",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "lastRunTime",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "name": {
            "description": "Name of the Report Definition",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          },
          "owner": {
            "description": "Owner of the Report Definition",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "owner",
              "wrapped": false
            }
          },
          "subject": {
            "description": "Subjects of the Report Definition",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "subject",
              "wrapped": false
            }
          },
          "traversal-specs": {
            "$ref": "#/components/schemas/traversal-specs",
            "description": "Traversal Specs applicable for the Report Definition",
            "xml": {
              "attribute": false,
              "name": "traversal-specs",
              "wrapped": false
            }
          }
        },
        "required": [
          "creationTime",
          "id",
          "name",
          "subject"
        ],
        "title": "report-definition",
        "type": "object"
      },
      "report-definitions": {
        "description": "Represents a Collection of Report Definitions.",
        "properties": {
          "links": {
            "description": "Collection of links",
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "pageInfo": {
            "$ref": "#/components/schemas/page-info",
            "description": "Page information for result list",
            "xml": {
              "attribute": false,
              "name": "pageInfo",
              "wrapped": false
            }
          },
          "reportDefinitions": {
            "description": "The Collection of Report Definitions",
            "items": {
              "$ref": "#/components/schemas/report-definition"
            },
            "type": "array"
          }
        },
        "title": "report-definitions",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "report-definitions",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "report-schedule": {
        "description": "Model to represent a Report Schedule",
        "properties": {
          "dayOfTheMonth": {
            "description": "The days of the month when the Schedule will run - Valid values are from 1-31",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "dayOfTheMonth",
              "wrapped": false
            }
          },
          "daysOfTheWeek": {
            "description": "The days of the week this Schedule repeats - SUNDAY, MONDAY, TUESDAY etc.",
            "items": {
              "enum": [
                "UNKNOWN",
                "SUNDAY",
                "MONDAY",
                "TUESDAY",
                "WEDNESDAY",
                "THURSDAY",
                "FRIDAY",
                "SATURDAY"
              ],
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "daysOfTheWeek",
              "wrapped": false
            }
          },
          "emailAddresses": {
            "description": "Comma separated Email addresses of the recipients for the Report",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "emailAddresses",
              "wrapped": false
            }
          },
          "emailBccAddresses": {
            "description": "Comma separated Email addresses of the recipients with Bcc for the Report",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "emailBccAddresses",
              "wrapped": false
            }
          },
          "emailCcAddresses": {
            "description": "Comma separated Email addresses of the recipients with Cc for the Report",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "emailCcAddresses",
              "wrapped": false
            }
          },
          "emailPluginId": {
            "description": "Identifier of the email plugin for which this rule applies.",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "emailPluginId",
              "wrapped": false
            }
          },
          "id": {
            "description": "UUID of the schedule",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "networkSharePluginId": {
            "description": "Identifier of the network share plugin for which this rule applies.",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "networkSharePluginId",
              "wrapped": false
            }
          },
          "recurrence": {
            "description": "Indicates the recurrence period of the Schedule. Defaults to 1.",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "recurrence",
              "wrapped": false
            }
          },
          "relativePath": {
            "description": "Network file share folder names where the reports should be stored",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "relativePath",
              "wrapped": false
            }
          },
          "reportDefinitionId": {
            "description": "Report Definition identifier",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "reportDefinitionId",
              "wrapped": false
            }
          },
          "reportScheduleType": {
            "description": "The type of schedule - MONTHLY, WEEKLY etc.",
            "enum": [
              "UNKNOWN",
              "DAILY",
              "WEEKLY",
              "MONTHLY",
              "YEARLY"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "reportScheduleType",
              "wrapped": false
            }
          },
          "resourceId": {
            "description": "Resource identifiers for which the schedule will be created. Currently we support Schedules for a single Resource.",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "resourceId",
              "wrapped": false
            }
          },
          "startDate": {
            "description": "Starting time when the Report Schedule comes into effect. Defaults to the current date.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "startDate",
              "wrapped": false
            }
          },
          "startHour": {
            "description": "The hour of the day when the Schedule runs. Defaults to 8.",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "startHour",
              "wrapped": false
            }
          },
          "startMinute": {
            "description": "The minutes of the hour when the Schedule runs. Defaults to 0.",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "startMinute",
              "wrapped": false
            }
          },
          "traversalSpec": {
            "$ref": "#/components/schemas/traversal-spec",
            "description": "Traversal spec used for evaluating the set of Resources for which the Report will be generated. This is used in conjunction with the report definition that will be used when creating the Report Schedule",
            "xml": {
              "attribute": false,
              "name": "traversalSpec",
              "wrapped": false
            }
          },
          "weekOfMonth": {
            "description": "The week of the month of this Report Schedule, if the schedule of recurrence is monthly",
            "enum": [
              "UNKNOWNN",
              "FIRST",
              "SECOND",
              "THIRD",
              "FOURTH",
              "LAST"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "weekOfMonth",
              "wrapped": false
            }
          }
        },
        "required": [
          "dayOfTheMonth",
          "emailAddresses",
          "id",
          "recurrence",
          "relativePath",
          "reportDefinitionId",
          "startDate"
        ],
        "title": "report-schedule",
        "type": "object"
      },
      "report-schedules": {
        "description": "Represents a Collection of Report schedules",
        "properties": {
          "reportSchedules": {
            "description": "The Collection of Report schedules",
            "items": {
              "$ref": "#/components/schemas/report-schedule"
            },
            "type": "array"
          }
        },
        "title": "report-schedules",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "report-schedules",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "reports": {
        "description": "Represents a Collection of Reports",
        "properties": {
          "links": {
            "description": "Collection of links",
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "pageInfo": {
            "$ref": "#/components/schemas/page-info",
            "description": "Page information for result list",
            "xml": {
              "attribute": false,
              "name": "pageInfo",
              "wrapped": false
            }
          },
          "reports": {
            "description": "Collection of reports",
            "items": {
              "$ref": "#/components/schemas/report"
            },
            "type": "array"
          }
        },
        "title": "reports",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "reports",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "resource": {
        "description": "Represents the external representation of a Resource.",
        "properties": {
          "badges": {
            "description": "The various major and minor badges and their values for a Resource. If certain badges are not present in the list then either those badges are not applicable to this resource or the calculation of those badges has been disabled for this resource.",
            "items": {
              "$ref": "#/components/schemas/badge"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "badges",
              "wrapped": true
            }
          },
          "creationTime": {
            "description": "Time the Resource was created in the system. This is a 'read-only' property and is system generated.The server ignores any changes to this field when trying to update a resource.",
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": true,
              "name": "creationTime",
              "wrapped": false
            }
          },
          "credentialInstanceId": {
            "description": "Credential instance identifier assigned to this Resource",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "credentialInstanceId",
              "wrapped": false
            }
          },
          "description": {
            "description": "Description of the Resource",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "description",
              "wrapped": false
            }
          },
          "dtEnabled": {
            "description": "DT calculation enabled or not. By default DT calculation for a resource is enabled (during its creation).",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "dtEnabled",
              "wrapped": false
            }
          },
          "extension": {
            "$ref": "#/components/schemas/extension",
            "xml": {
              "attribute": false,
              "name": "extension",
              "wrapped": false
            }
          },
          "geoLocation": {
            "$ref": "#/components/schemas/geo-location",
            "description": "Geographical location of the resource.",
            "xml": {
              "attribute": false,
              "name": "geoLocation",
              "wrapped": false
            }
          },
          "identifier": {
            "description": "Identifier of the Resource (typically a UUID).",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "identifier",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "monitoringInterval": {
            "description": "Minutes part of the monitoring Interval of the resource",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "monitoringInterval",
              "wrapped": false
            }
          },
          "monitoringIntervalMinutes": {
            "format": "int32",
            "type": "integer"
          },
          "monitoringIntervalSeconds": {
            "description": "Seconds part of the monitoring Interval of the resource",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "monitoringIntervalSeconds",
              "wrapped": false
            }
          },
          "relatedResources": {
            "description": "Collection of related resource identifiers",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "relatedResources",
              "wrapped": true
            }
          },
          "resourceHealth": {
            "description": "Health of the Resource. This is a 'read-only' property and its value is computed by the system. The server ignores any changes to this field when trying to update a resource.",
            "enum": [
              "GREEN",
              "YELLOW",
              "ORANGE",
              "RED",
              "GREY"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "resourceHealth",
              "wrapped": false
            }
          },
          "resourceHealthValue": {
            "description": "Resource Health Score. This is a 'read-only' property and its value is computed by the system. The server ignores any changes to this field when trying to update a resource.",
            "format": "double",
            "type": "number",
            "xml": {
              "attribute": false,
              "name": "resourceHealthValue",
              "wrapped": false
            }
          },
          "resourceKey": {
            "$ref": "#/components/schemas/resource-key",
            "description": "Resource key of the Resource.",
            "xml": {
              "attribute": false,
              "name": "resourceKey",
              "wrapped": false
            }
          },
          "resourceStatusStates": {
            "description": "The resource status and resource state for this resource as reported by one or more adapter instances. The server ignores any changes to this field when trying to update a resource.",
            "items": {
              "$ref": "#/components/schemas/resource-status-state"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "resourceStatusStates",
              "wrapped": true
            }
          }
        },
        "required": [
          "creationTime",
          "identifier",
          "resourceHealth",
          "resourceHealthValue",
          "resourceKey",
          "resourceStatusStates"
        ],
        "title": "resource",
        "type": "object"
      },
      "resource-credential": {
        "properties": {
          "addRuntimeUser": {
            "description": "Flag that indicates whether to add runtime user on resource or no",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "addRuntimeUser",
              "wrapped": false
            }
          },
          "password": {
            "description": "The password of the resource",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "password",
              "wrapped": false
            }
          },
          "resourceId": {
            "description": "The id of the resource",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "resourceId",
              "wrapped": false
            }
          },
          "username": {
            "description": "The username of the resource",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "username",
              "wrapped": false
            }
          }
        },
        "required": [
          "password",
          "resourceId",
          "username"
        ],
        "title": "resource-credential",
        "type": "object"
      },
      "resource-credentials": {
        "properties": {
          "resourceCredentials": {
            "description": "List of resource credentials",
            "items": {
              "$ref": "#/components/schemas/resource-credential"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "resourceCredentials",
              "wrapped": true
            }
          }
        },
        "required": [
          "resourceCredentials"
        ],
        "title": "resource-credentials",
        "type": "object"
      },
      "resource-identifier": {
        "description": "A key,value pair that encapsulates the identity of the resource",
        "properties": {
          "identifierType": {
            "$ref": "#/components/schemas/resource-identifier-type",
            "description": "The Resource Identifier Configuration",
            "xml": {
              "attribute": false,
              "name": "identifierType",
              "wrapped": false
            }
          },
          "key": {
            "type": "string"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "uniquelyIdentifying": {
            "type": "boolean"
          },
          "value": {
            "description": "The resource identifier value",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "value",
              "wrapped": false
            }
          }
        },
        "title": "resource-identifier",
        "type": "object"
      },
      "resource-identifier-type": {
        "description": "Meta-data for a Resource Identifier",
        "properties": {
          "dataType": {
            "description": "Data type for the identifierBy default the data type of the value of a resource identifier is assumed to be a String",
            "enum": [
              "STRING",
              "INTEGER",
              "HOST",
              "IP",
              "ENUM",
              "PASSWORD",
              "BOOLEAN",
              "UNKNOWN"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "dataType",
              "wrapped": false
            }
          },
          "extension": {
            "$ref": "#/components/schemas/extension",
            "xml": {
              "attribute": false,
              "name": "extension",
              "wrapped": false
            }
          },
          "isPartOfUniqueness": {
            "description": "True if this ResourceIdentifier is used to uniquely identify the Resource in the system. By default the resource identifier is considered to be part of uniqueness",
            "type": "boolean",
            "xml": {
              "attribute": true,
              "name": "isPartOfUniqueness",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "name": {
            "description": "The name of the identifier",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "name",
              "wrapped": false
            }
          }
        },
        "required": [
          "name"
        ],
        "title": "resource-identifier-type",
        "type": "object"
      },
      "resource-key": {
        "description": "Represents a composite key for uniquely identifying a Resource.",
        "properties": {
          "adapterKindKey": {
            "description": "Adapter Kind to which the resource belongs to",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "adapterKindKey",
              "wrapped": false
            }
          },
          "extension": {
            "$ref": "#/components/schemas/extension",
            "xml": {
              "attribute": false,
              "name": "extension",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "name": {
            "description": "Name of the Resource",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          },
          "resourceIdentifiers": {
            "description": "A collection of Resource Identifiers",
            "items": {
              "$ref": "#/components/schemas/resource-identifier"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "resourceIdentifiers",
              "wrapped": true
            }
          },
          "resourceKindKey": {
            "description": "Resource Kind to which the resource belongs to",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "resourceKindKey",
              "wrapped": false
            }
          }
        },
        "required": [
          "adapterKindKey",
          "name",
          "resourceKindKey"
        ],
        "title": "resource-key",
        "type": "object"
      },
      "resource-kind": {
        "description": "The DTO representing a Resource Kind",
        "properties": {
          "adapterKind": {
            "description": "The Adapter Kind to which this Resource Kind belongs to",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "adapterKind",
              "wrapped": false
            }
          },
          "adapterKindName": {
            "description": "Localized name of the Adapter Kind to which this Resource Kind belongs to",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "adapterKindName",
              "wrapped": false
            }
          },
          "extension": {
            "$ref": "#/components/schemas/extension",
            "xml": {
              "attribute": false,
              "name": "extension",
              "wrapped": false
            }
          },
          "key": {
            "description": "The Resource Kind identifier",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "key",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "localizations": {
            "description": "Localized names of the Resource Kind for all localizations",
            "items": {
              "$ref": "#/components/schemas/localization"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "localizations",
              "wrapped": true
            }
          },
          "name": {
            "description": "The Localized name of the Resource Kind",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          },
          "resourceIdentifierTypes": {
            "description": "Resource identifiers associated with this Resource Kind",
            "items": {
              "$ref": "#/components/schemas/resource-identifier-type"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "resourceIdentifierTypes",
              "wrapped": true
            }
          },
          "resourceKindSubType": {
            "description": "The Sub Category to which the Resource Kind belongs to",
            "enum": [
              "GEO",
              "ENTERPRISE",
              "GROUP_RULES_MANAGED",
              "GROUP_ADAPTER_MANAGED",
              "GROUP_WORLD",
              "NONE"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "resourceKindSubType",
              "wrapped": false
            }
          },
          "resourceKindType": {
            "description": "The Category to which the Resource Kind belongs to",
            "enum": [
              "GENERAL",
              "BUSINESS_SERVICE",
              "TIER",
              "TAG",
              "ADAPTER_INSTANCE",
              "GROUP",
              "APPLICATION",
              "NONE"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "resourceKindType",
              "wrapped": false
            }
          }
        },
        "required": [
          "key"
        ],
        "title": "resource-kind",
        "type": "object"
      },
      "resource-kind-attribute": {
        "description": "Represents meta-data for Resource Kind Attributes",
        "properties": {
          "attributeKey": {
            "description": "The attribute key",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "attributeKey",
              "wrapped": false
            }
          },
          "dataType": {
            "description": "<b>Deprecated, will be removed after couple of releases. Please use dataType2 instead</b><br/>\nThe data type of the attribute",
            "enum": [
              "STRING",
              "INTEGER",
              "HOST",
              "IP",
              "ENUM",
              "PASSWORD",
              "BOOLEAN",
              "UNKNOWN"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "dataType",
              "wrapped": false
            }
          },
          "dataType2": {
            "description": "The data type of the attribute",
            "enum": [
              "STRING",
              "INTEGER",
              "HOST",
              "IP",
              "ENUM",
              "PASSWORD",
              "BOOLEAN",
              "FLOAT",
              "UNKNOWN"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "dataType2",
              "wrapped": false
            }
          },
          "defaultMonitored": {
            "description": "Set True if the attribute is monitored by default",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "defaultMonitored",
              "wrapped": false
            }
          },
          "description": {
            "description": "The description of the attribute",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "description",
              "wrapped": false
            }
          },
          "dtSubtype": {
            "description": "The dynamic threshold sub type",
            "enum": [
              "linear",
              "common",
              "cusum",
              "noise",
              "sparse",
              "multinomial",
              "abnormalitydegree"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "dtSubType",
              "wrapped": false
            }
          },
          "instanceType": {
            "description": "The instance type of the attribute",
            "enum": [
              "INSTANCED",
              "AGGREGATED"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "instanceType",
              "wrapped": false
            }
          },
          "key": {
            "description": "The key",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "key",
              "wrapped": false
            }
          },
          "localizations": {
            "description": "Localized names of the attribute for all localizations",
            "items": {
              "$ref": "#/components/schemas/localization"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "localizations",
              "wrapped": true
            }
          },
          "monitoring": {
            "description": "<b>Deprecated, will be removed after couple of releases.</b><br/>\nThe monitoring flag for the attribute",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "monitoring",
              "wrapped": false
            }
          },
          "name": {
            "description": "The localized name of the attribute",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          },
          "property": {
            "description": "Set True if the attribute is a property",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "property",
              "wrapped": false
            }
          },
          "rollUpType": {
            "description": "The roll up type of the attribute",
            "enum": [
              "SUM",
              "AVG",
              "MIN",
              "MAX",
              "NONE",
              "LATEST",
              "COUNT"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "rollupType",
              "wrapped": false
            }
          },
          "unit": {
            "description": "The unit of the attribute",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "unit",
              "wrapped": false
            }
          },
          "unitLocalizations": {
            "description": "Localized names of the unit for all localizations",
            "items": {
              "$ref": "#/components/schemas/localization"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "unitLocalizations",
              "wrapped": true
            }
          }
        },
        "required": [
          "dataType",
          "dataType2",
          "key",
          "property"
        ],
        "title": "resource-kind-attribute",
        "type": "object"
      },
      "resource-kind-attributes": {
        "properties": {
          "resourceTypeAttributes": {
            "description": "Collection of resource type attributes",
            "items": {
              "$ref": "#/components/schemas/resource-kind-attribute"
            },
            "type": "array"
          }
        },
        "title": "resource-kind-attributes",
        "type": "object"
      },
      "resource-kind-key": {
        "description": "Resource type details.(adapter kind, resource kinds)",
        "properties": {
          "adapterKind": {
            "description": "The adapter kind of the resource",
            "type": "string"
          },
          "resourceKind": {
            "description": "The resource kind of the resource",
            "type": "string"
          }
        },
        "required": [
          "adapterKind",
          "resourceKind"
        ],
        "title": "resource-kind-key",
        "type": "object"
      },
      "resource-kinds": {
        "description": "The DTO representing a collection of Resource Kinds for a particular Adapter Kind",
        "properties": {
          "adapterKind": {
            "description": "The adapter Kind of all the specified resource kinds",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "adapterKind",
              "wrapped": false
            }
          },
          "links": {
            "description": "Collection of links",
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "pageInfo": {
            "$ref": "#/components/schemas/page-info",
            "description": "Page information for result list",
            "xml": {
              "attribute": false,
              "name": "pageInfo",
              "wrapped": false
            }
          },
          "resource-kind": {
            "description": "List of Resource Kinds",
            "items": {
              "$ref": "#/components/schemas/resource-kind"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "resource-kind",
              "wrapped": false
            }
          }
        },
        "required": [
          "adapterKind"
        ],
        "title": "resource-kinds",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "resource-kinds",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "resource-name-condition-rule": {
        "description": "Model represents resource name rules for a custom group",
        "properties": {
          "compareOperator": {
            "description": "Comparison operator",
            "enum": [
              "EQ",
              "NOT_EQ",
              "CONTAINS",
              "NOT_CONTAINS",
              "STARTS_WITH",
              "NOT_STARTS_WITH",
              "ENDS_WITH",
              "NOT_ENDS_WITH",
              "REGEX",
              "NOT_REGEX"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "compareOperator",
              "wrapped": false
            }
          },
          "name": {
            "description": "Name of the resource",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "name",
              "wrapped": false
            }
          }
        },
        "required": [
          "compareOperator",
          "name"
        ],
        "title": "resource-name-condition-rule",
        "type": "object"
      },
      "resource-parameters": {
        "properties": {
          "contextResourceIDs": {
            "description": "Collection of resource IDs",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "contextResourceIDs",
              "wrapped": true
            }
          }
        },
        "required": [
          "contextResourceIDs"
        ],
        "title": "resource-parameters",
        "type": "object"
      },
      "resource-properties": {
        "description": "List of ResourceProperties instances",
        "properties": {
          "resourcePropertiesList": {
            "description": "Collection of resource properties",
            "items": {
              "$ref": "#/components/schemas/resource-property"
            },
            "type": "array"
          }
        },
        "title": "resource-properties",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "resource-properties",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "resource-property": {
        "description": "The resource property details",
        "properties": {
          "property": {
            "description": "The list of Property name/value pairs",
            "items": {
              "$ref": "#/components/schemas/name-value"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "property",
              "wrapped": false
            }
          },
          "resourceId": {
            "description": "The resource id",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "resourceId",
              "wrapped": false
            }
          }
        },
        "title": "resource-property",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "resource-property",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "resource-property-contents": {
        "description": "Represents the Property Contents for a given resource",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/property-contents",
            "description": "The property values of the resource"
          },
          "resourceId": {
            "description": "The resource Id",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "resourceId",
              "wrapped": false
            }
          }
        },
        "required": [
          "properties",
          "resourceId"
        ],
        "title": "resource-property-contents",
        "type": "object"
      },
      "resource-query": {
        "description": "Object used to lookup resources with various filtering criteria",
        "properties": {
          "adapterInstanceId": {
            "description": "Array of uuids that identify adapter instances",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "adapterKind": {
            "description": "Array of Adapter Kind keys",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "collectorId": {
            "description": "Array of Collector Identifiers",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "collectorName": {
            "description": "Array of Collector names",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "credentialId": {
            "description": "Array of CredentialIDs",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "includeRelated": {
            "description": "None null value specifies to include related resource ids of given relationship type in resource result.\nUses the RelationshipType.representation value.\n",
            "enum": [
              "PARENT",
              "CHILD"
            ],
            "type": "string"
          },
          "maintenanceScheduleId": {
            "description": "Array of {@link UUID} that identify Maintenance Schedules.\nSince vROps 6.1.0 release onwards, we don't support search\nand look up of Resources using Maintenance Schedules' identifiers.",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "Array of resource names to query for.\n<b>NOTE:</b> Currently, only single element supported",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "parentId": {
            "description": "Array of UUID of object that are the parent resource in a parent child relationship",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "propertyConditions": {
            "$ref": "#/components/schemas/stat-or-property-condition-query",
            "description": "Property conditions query to be used for filtering.\n<b>NOTE:</b> If this filter is specified only the resources that have resource status 'DATA_RECEIVING' will be returned.",
            "xml": {
              "attribute": false,
              "name": "propertyConditions",
              "wrapped": false
            }
          },
          "propertyName": {
            "description": "Name of property. Query only supports filtering for a single property.",
            "type": "string"
          },
          "propertyValue": {
            "description": "Value of property. Omitting the property value will check for existence\nof the property name on the resource.\n<b>NOTE:</b> Use 'propertyConditions' to specify lookup of Resource using multiple properties.",
            "type": "string"
          },
          "recentlyAdded": {
            "description": "Return resources created after the specified value. Value is the number of seconds since Midnight January 1, 1970 GMT.",
            "format": "int64",
            "type": "integer"
          },
          "regex": {
            "description": "Array of resource names in java regex format.\n<b>NOTE:</b> <i>regex</i> and <i>name</i> are mutually exclusive. If both are specified, <i>name</i> is given preference.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "resourceHealth": {
            "description": "Array of resource health",
            "items": {
              "enum": [
                "GREEN",
                "YELLOW",
                "ORANGE",
                "RED",
                "GREY"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "resourceId": {
            "description": "Array of Resource Identifiers",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "resourceKind": {
            "description": "Array of Resource Kind keys",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "resourceState": {
            "description": "Array of resource states",
            "items": {
              "enum": [
                "STOPPED",
                "STARTING",
                "STARTED",
                "STOPPING",
                "UPDATING",
                "FAILED",
                "MAINTAINED",
                "MAINTAINED_MANUAL",
                "REMOVING",
                "NOT_EXISTING",
                "NONE",
                "UNKNOWN"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "resourceStatus": {
            "description": "Array of resource data collection stats",
            "items": {
              "enum": [
                "NONE",
                "ERROR",
                "UNKNOWN",
                "DOWN",
                "DATA_RECEIVING",
                "OLD_DATA_RECEIVING",
                "NO_DATA_RECEIVING",
                "NO_PARENT_MONITORING",
                "COLLECTOR_DOWN"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "resourceTag": {
            "description": "Property used for tag filtering.\n<b>NOTE:</b> If specified, only the resources with the tags will be returned.",
            "items": {
              "$ref": "#/components/schemas/resourceTag"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "resourceTag",
              "wrapped": false
            }
          },
          "statConditions": {
            "$ref": "#/components/schemas/stat-or-property-condition-query",
            "description": "Stat conditions query to be used for filtering. \n<b>NOTE:</b> If this filter is specified only the resources that have resource status 'DATA_RECEIVING' will be returned.",
            "xml": {
              "attribute": false,
              "name": "statConditions",
              "wrapped": false
            }
          },
          "statKey": {
            "description": "Name of resource StatKey to validate value is within a range.\nUse with statKeyLowerBound, statKeyUpperBound and statKeyInclusive to create comparison conditions\n<b>NOTE:</b> Use 'statConditions' to specify lookup of Resource using multiple stat keys.",
            "type": "string"
          },
          "statKeyInclusive": {
            "description": "Filtering by statKey values is inclusive or exclusive of boundary values.  Defaults to true",
            "type": "boolean"
          },
          "statKeyLowerBound": {
            "description": "StatKey value matching range lower bound",
            "format": "double",
            "type": "number"
          },
          "statKeyUpperBound": {
            "description": "StatKey value matching range upper bound",
            "format": "double",
            "type": "number"
          }
        },
        "title": "resource-query",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "resource-query",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "resource-relation": {
        "description": "This object contains a resource, its relation type and the list of objects to which this resource is related.",
        "properties": {
          "links": {
            "description": "Collection of links",
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "pageInfo": {
            "$ref": "#/components/schemas/page-info",
            "description": "Page information for result list",
            "xml": {
              "attribute": false,
              "name": "pageInfo",
              "wrapped": false
            }
          },
          "relationshipType": {
            "description": "The relationship type to the target collection",
            "enum": [
              "PARENT",
              "CHILD",
              "CONTAINS",
              "CONTAINED_BY",
              "REFERENCES",
              "REFERENCED_BY",
              "USES",
              "USED_BY",
              "SELF",
              "DESCENDANT",
              "ANCESTOR",
              "TST",
              "ALL"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "relationshipType",
              "wrapped": false
            }
          },
          "resourceList": {
            "description": "The list of resources having relation",
            "items": {
              "$ref": "#/components/schemas/resource"
            },
            "type": "array"
          }
        },
        "title": "resource-relation",
        "type": "object"
      },
      "resource-relations": {
        "description": "Represents a Collection of Resources",
        "properties": {
          "extension": {
            "$ref": "#/components/schemas/extension",
            "xml": {
              "attribute": false,
              "name": "extension",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "relatedResources": {
            "description": "Identifiers of query Resources to which the above Resource is related.",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "relatedResources",
              "wrapped": false
            }
          },
          "resource": {
            "$ref": "#/components/schemas/resource",
            "description": "Resource info",
            "xml": {
              "attribute": false,
              "name": "resource",
              "wrapped": false
            }
          }
        },
        "required": [
          "relatedResources",
          "resource"
        ],
        "title": "resource-relations",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "resource-relations",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "resource-relationships-query": {
        "description": "Object used to lookup resources satisfying various filtering criteria and related to given set of resources\nwith given relation type.",
        "properties": {
          "hierarchyDepth": {
            "description": "Relation hierarchy depth. Used with relationship types DESCENDANT, ANCESTOR and ALL. Defaults to 10.",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "hierarchyDepth",
              "wrapped": false
            }
          },
          "relationshipType": {
            "description": "The relationship type of the resources to be extracted. Uses the RelationshipType.representation value.",
            "enum": [
              "PARENT",
              "CHILD",
              "DESCENDANT",
              "ANCESTOR",
              "ALL"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "relationshipType",
              "wrapped": false
            }
          },
          "resourceIds": {
            "description": "Resource uuids to get the related resources for",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "resourceIds",
              "wrapped": false
            }
          },
          "resourceQuery": {
            "$ref": "#/components/schemas/resource-query",
            "description": "Extra filtering criteria for resources to be extracted.",
            "xml": {
              "attribute": false,
              "name": "resourceQuery",
              "wrapped": false
            }
          }
        },
        "required": [
          "relationshipType",
          "resourceIds"
        ],
        "title": "resource-relationships-query",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "resource-relationships-query",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "resource-stat": {
        "description": "Class associates a single Stat with a ResourceId. The class is backed by the Stat argument\npassed, so changes to this class will effect the Stat object data.",
        "properties": {
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "resourceId": {
            "description": "The resource identifier",
            "format": "uuid",
            "type": "string"
          },
          "stat": {
            "$ref": "#/components/schemas/stats",
            "description": "The Stat object"
          }
        },
        "title": "resource-stat",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "resource-stat",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "resource-stat-content": {
        "description": "Represents a Resource and Stats associated with the Resource.",
        "properties": {
          "id": {
            "description": "Identifier of the Resource (typically a UUID).",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "resourceKey": {
            "$ref": "#/components/schemas/resource-key",
            "description": "ResourceKey of the Resource - not used and should not be specified.",
            "xml": {
              "attribute": false,
              "name": "resourceKey",
              "wrapped": false
            }
          },
          "stat-contents": {
            "description": "The stats (numeric or string) data for one or more StatKeys. The stats (numeric or string) data for one or more StatKeys.",
            "items": {
              "$ref": "#/components/schemas/stat-content"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "stat-contents",
              "wrapped": true
            }
          }
        },
        "required": [
          "id"
        ],
        "title": "resource-stat-content",
        "type": "object"
      },
      "resource-stat-group": {
        "properties": {
          "groupKey": {
            "description": "Should be a UUID or a StatKey as String",
            "type": "string"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "resourceStats": {
            "description": "Collection of Resource stats",
            "items": {
              "$ref": "#/components/schemas/resource-stat"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "resourceStats",
              "wrapped": true
            }
          }
        },
        "title": "resource-stat-group",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "resource-stat-group",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "resource-status-state": {
        "description": "Contains the Adapter Instance ResourceDataCollectionStatus and ResourceState for a Resource. A Resource will have a ResourceStatusState instance for each Adapter Instance that collects information about the resource.",
        "properties": {
          "adapterInstanceId": {
            "description": "The Adapter Instance identifier associated with the status and state",
            "format": "uuid",
            "type": "string"
          },
          "resourceState": {
            "description": "The resource state",
            "enum": [
              "STOPPED",
              "STARTING",
              "STARTED",
              "STOPPING",
              "UPDATING",
              "FAILED",
              "MAINTAINED",
              "MAINTAINED_MANUAL",
              "REMOVING",
              "NOT_EXISTING",
              "NONE",
              "UNKNOWN"
            ],
            "type": "string"
          },
          "resourceStatus": {
            "description": "The resource data collection status",
            "enum": [
              "NONE",
              "ERROR",
              "UNKNOWN",
              "DOWN",
              "DATA_RECEIVING",
              "OLD_DATA_RECEIVING",
              "NO_DATA_RECEIVING",
              "NO_PARENT_MONITORING",
              "COLLECTOR_DOWN"
            ],
            "type": "string"
          },
          "statusMessage": {
            "description": "A human readable status message",
            "type": "string"
          }
        },
        "title": "resource-status-state",
        "type": "object"
      },
      "resource-tag-condition-rule": {
        "description": "Model represents resource tag rules for a custom group",
        "properties": {
          "category": {
            "description": "Category of the resource tag",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "category",
              "wrapped": false
            }
          },
          "compareOperator": {
            "description": "Comparison operator",
            "enum": [
              "EQ",
              "NOT_EQ",
              "CONTAINS",
              "NOT_CONTAINS",
              "EXISTS",
              "NOT_EXISTS",
              "STARTS_WITH",
              "NOT_STARTS_WITH",
              "ENDS_WITH",
              "NOT_ENDS_WITH",
              "REGEX",
              "NOT_REGEX"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "compareOperator",
              "wrapped": false
            }
          },
          "stringValue": {
            "description": "String value of the tag",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "stringValue",
              "wrapped": false
            }
          }
        },
        "required": [
          "category",
          "compareOperator",
          "stringValue"
        ],
        "title": "resource-tag-condition-rule",
        "type": "object"
      },
      "resourceTag": {
        "description": "Object used to define filtering criteria based on the pair of category and tag",
        "properties": {
          "category": {
            "description": "The localized name of the category",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "category",
              "wrapped": false
            }
          },
          "name": {
            "description": "The localized name of the tag",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "name",
              "wrapped": false
            }
          }
        },
        "required": [
          "category"
        ],
        "title": "resourceTag",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "resourceTag",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "resources": {
        "description": "Represents a Collection of Resources.",
        "properties": {
          "links": {
            "description": "Collection of links",
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "pageInfo": {
            "$ref": "#/components/schemas/page-info",
            "description": "Page information for result list",
            "xml": {
              "attribute": false,
              "name": "pageInfo",
              "wrapped": false
            }
          },
          "resourceList": {
            "description": "The Collection of Resources",
            "items": {
              "$ref": "#/components/schemas/resource"
            },
            "type": "array"
          }
        },
        "title": "resources",
        "type": "object"
      },
      "resources-property-contents": {
        "properties": {
          "values": {
            "description": "Collection of resource property contents",
            "items": {
              "$ref": "#/components/schemas/resource-property-contents"
            },
            "type": "array"
          }
        },
        "title": "resources-property-contents",
        "type": "object"
      },
      "resources-relation": {
        "description": "This object contains a resource, its relation type and the list of objects to which this resource is related",
        "properties": {
          "links": {
            "description": "Collection of links",
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "pageInfo": {
            "$ref": "#/components/schemas/page-info",
            "description": "Page information for result list",
            "xml": {
              "attribute": false,
              "name": "pageInfo",
              "wrapped": false
            }
          },
          "relationshipType": {
            "description": "The relationship type of the resources",
            "enum": [
              "PARENT",
              "CHILD",
              "CONTAINS",
              "CONTAINED_BY",
              "REFERENCES",
              "REFERENCED_BY",
              "USES",
              "USED_BY",
              "SELF",
              "DESCENDANT",
              "ANCESTOR",
              "TST",
              "ALL"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "relationshipType",
              "wrapped": false
            }
          },
          "resourcesRelations": {
            "description": "Resources info combined with lists of query resource identifiers to which they are related",
            "items": {
              "$ref": "#/components/schemas/resource-relations"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "resourcesRelations",
              "wrapped": true
            }
          }
        },
        "required": [
          "relationshipType",
          "resourcesRelations"
        ],
        "title": "resources-relation",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "resources-relation",
          "wrapped": false
        }
      },
      "resources-stat-contents": {
        "description": "Represents a Collection of Resources and Stats associated with each Resource.",
        "properties": {
          "list": {
            "items": {
              "$ref": "#/components/schemas/resource-stat-content"
            },
            "type": "array"
          }
        },
        "title": "resources-stat-contents",
        "type": "object"
      },
      "role-permission": {
        "description": "Represents role based permissions to objects.  The role's privileges will apply to all of the objects identified by the traversal specification. Optionally permission can be flagged to allow all objects ignoring traversal specifications.",
        "properties": {
          "allowAllObjects": {
            "description": "If true then ignore traversal specifications and allow all objects",
            "type": "boolean",
            "xml": {
              "attribute": true,
              "name": "allowAllObjects",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "roleName": {
            "description": "The role name.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "roleName",
              "wrapped": false
            }
          },
          "scopeId": {
            "description": "The id of the scope",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "scopeId",
              "wrapped": false
            }
          },
          "traversal-spec-instances": {
            "description": "Collection of traversal specification instances",
            "items": {
              "$ref": "#/components/schemas/traversal-spec-instance"
            },
            "type": "array"
          }
        },
        "required": [
          "roleName"
        ],
        "title": "role-permission",
        "type": "object"
      },
      "role-permissions": {
        "description": "Collection of Role Permission objects",
        "properties": {
          "permissions": {
            "description": "list of role permissions",
            "items": {
              "$ref": "#/components/schemas/role-permission"
            },
            "type": "array"
          }
        },
        "title": "role-permissions",
        "type": "object"
      },
      "schedule": {
        "description": "Schedule represents the meta information required by the server to set resources in maintenance mode at the right interval/time. To construct specific schedules, please see some of the static helper utilities in this class.",
        "properties": {
          "dayOfTheMonth": {
            "description": "<b>Deprecated, will be removed after couple of releases.</b><br/>Day of the month on which the job should be triggered. Must be specified only when <code>scheduleType = MONTHLY</code>. Mutually exclusive with daysOfTheMonth and weeksOfTheMonth.",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "dayOfTheMonth",
              "wrapped": false
            }
          },
          "daysOfTheMonth": {
            "description": "The list of the days of the month on which the job should be triggered. Applicable values are {1,2,...,31,LAST}. Must be specified only when <code>scheduleType = MONTHLY</code>. Mutually exclusive with dayOfTheMonth and weeksOfTheMonth.",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "daysOfTheMonth",
              "wrapped": false
            }
          },
          "daysOfTheWeek": {
            "description": "Days of the week on which the job should be triggered. Must be specified only when <code>scheduleType = WEEKLY</code> or <code>scheduleType = MONTHLY</code>.<br/>When <code>scheduleType = MONTHLY</code> this parameter is mutually exclusive with dayOfTheMonth and daysOfTheMonth, should be specified together with daysOfTheWeek.",
            "items": {
              "enum": [
                "UNKNOWN",
                "SUNDAY",
                "MONDAY",
                "TUESDAY",
                "WEDNESDAY",
                "THURSDAY",
                "FRIDAY",
                "SATURDAY"
              ],
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "daysOfTheWeek",
              "wrapped": false
            }
          },
          "duration": {
            "description": "Duration of the schedule in minutes.",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "duration",
              "wrapped": false
            }
          },
          "expirationDate": {
            "description": "The expiration date of the schedule. Should be in format MM/DD/YYYY. Mutually exclusive with expireRuns and either of them should be always defined when <code>scheduleType != ONCE</code>.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "expirationDate",
              "wrapped": false
            }
          },
          "expireRuns": {
            "description": "The number of run after which the schedule should expire. Mutually exclusive with expirationDate and either of them should be always defined when <code>scheduleType != ONCE</code>.",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "expireRuns",
              "wrapped": false
            }
          },
          "hour": {
            "description": "The beginning hour of the schedule.",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "hour",
              "wrapped": false
            }
          },
          "minuteOfTheHour": {
            "description": "The beginning minutes of the schedule.",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "minuteOfTheHour",
              "wrapped": false
            }
          },
          "month": {
            "description": "<b>Deprecated, will be removed after couple of releases.</b><br/>Month of the year on which the job should be triggered. Must be specified only when <code>scheduleType = MONTHLY</code>. Mutually exclusive with months.",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "month",
              "wrapped": false
            }
          },
          "months": {
            "description": "Months of the year on which the job should be triggered. Must be specified only when <code>scheduleType = MONTHLY</code>. Mutually exclusive with month.",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "months",
              "wrapped": false
            }
          },
          "recurrence": {
            "description": "Configures how the schedule is repeated within the provided interval, e.g. if <code>scheduleType = DAILY</code> then setting <code>recurrence = 2</code> would trigger the job every 2 days.<br/>Applicable only when <code>scheduleType = DAILY</code> or <code>scheduleType = WEEKLY</code>.",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "recurrence",
              "wrapped": false
            }
          },
          "scheduleType": {
            "description": "Type of the schedule. <b>NOTE:</b> Currently schedule type 'YEARLY' is not supported.",
            "enum": [
              "UNKNOWN",
              "ONCE",
              "DAILY",
              "WEEKLY",
              "MONTHLY",
              "YEARLY"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "scheduleType",
              "wrapped": false
            }
          },
          "startDate": {
            "description": "Start date for the schedule. Should be in format MM/DD/YYYY and if not specified current date is used.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "startDate",
              "wrapped": false
            }
          },
          "timeZone": {
            "description": "Time Zone of the schedule.<br/>If not provided, defaults to the time of the VMware Aria Operations server.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "timeZone",
              "wrapped": false
            }
          },
          "weeksOfTheMonth": {
            "description": "The list of the week indices of the month on which the job should be triggered. Must be specified only when <code>scheduleType = MONTHLY</code>. Mutually exclusive with dayOfTheMonth and daysOfTheMonth, should be specified together with daysOfTheWeek.",
            "items": {
              "enum": [
                "UNKNOWNN",
                "FIRST",
                "SECOND",
                "THIRD",
                "FOURTH",
                "LAST"
              ],
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "weeksOfTheMonth",
              "wrapped": false
            }
          }
        },
        "required": [
          "duration",
          "hour",
          "minuteOfTheHour",
          "scheduleType"
        ],
        "title": "schedule",
        "type": "object"
      },
      "scope": {
        "description": "Represents a VMware Aria Operations Manager system.",
        "properties": {
          "description": {
            "description": "Description of scope.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "description",
              "wrapped": false
            }
          },
          "id": {
            "description": "Identifier of the Scope in the system.",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "name": {
            "description": "Name of the scope.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          },
          "traversalSpecInstances": {
            "description": "List of traversal spec instances.",
            "items": {
              "$ref": "#/components/schemas/traversal-spec-instance"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "traversalSpecInstances",
              "wrapped": true
            }
          }
        },
        "required": [
          "name"
        ],
        "title": "scope",
        "type": "object"
      },
      "scope-details": {
        "description": "Represents a Scope VMware Aria Operations Manager system.",
        "properties": {
          "createdBy": {
            "description": "The user id who created the scope.",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "createdBy",
              "wrapped": false
            }
          },
          "creationTime": {
            "description": "Creation time of the scope",
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "creationTime",
              "wrapped": false
            }
          },
          "description": {
            "description": "Description of the scope.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "description",
              "wrapped": false
            }
          },
          "id": {
            "description": "Identifier of the scope in the system.",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "lastModifiedBy": {
            "description": "The user id who last modified the scope.",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "lastModifiedBy",
              "wrapped": false
            }
          },
          "lastModifiedTime": {
            "description": "Last Modification time of the scope",
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "lastModifiedTime",
              "wrapped": false
            }
          },
          "name": {
            "description": "Name of the scope.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          },
          "traversalSpecInstances": {
            "description": "List of traversal spec instances.",
            "items": {
              "$ref": "#/components/schemas/traversal-spec-instance"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "traversalSpecInstances",
              "wrapped": true
            }
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "scope-details",
        "type": "object"
      },
      "scopes-details": {
        "description": "Collection of Scopes Details",
        "properties": {
          "scopesDetails": {
            "description": "list of role permissions",
            "items": {
              "$ref": "#/components/schemas/scope-details"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "scopesDetails",
              "wrapped": true
            }
          }
        },
        "title": "scopes-details",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "scopes-details",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "service-configuration": {
        "properties": {
          "parameters": {
            "description": "Collection of service configurations",
            "items": {
              "$ref": "#/components/schemas/key-value"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "parameters",
              "wrapped": true
            }
          },
          "configName": {
            "description": "The name of the configuration",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "configName",
              "wrapped": false
            }
          },
          "isActivated": {
            "description": "Flag that indicates whether to activate configuration or no",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "isActivated",
              "wrapped": false
            }
          }
        },
        "required": [
          "configName",
          "parameters"
        ],
        "title": "service-configuration",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "service-configuration",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "service-configuration-delete-parameter": {
        "properties": {
          "configNames": {
            "description": "Collection of configurations to be deleted",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "configNames",
              "wrapped": true
            }
          },
          "serviceName": {
            "description": "The name of the application service",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "serviceName",
              "wrapped": false
            }
          }
        },
        "required": [
          "configNames",
          "serviceName"
        ],
        "title": "service-configuration-delete-parameter",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "service-configuration-delete-parameter",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "service-configuration-delete-parameters": {
        "properties": {
          "services": {
            "description": "Collection of applications service configurations",
            "items": {
              "$ref": "#/components/schemas/service-configuration-delete-parameter"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "services",
              "wrapped": true
            }
          }
        },
        "required": [
          "services"
        ],
        "title": "service-configuration-delete-parameters",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "service-configuration-delete-parameters",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "service-configurations": {
        "properties": {
          "configurations": {
            "description": "Collection of applications service configurations",
            "items": {
              "$ref": "#/components/schemas/service-configuration"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "configurations",
              "wrapped": true
            }
          }
        },
        "required": [
          "configurations"
        ],
        "title": "service-configurations",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "service-configurations",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "service-configurations-parameters": {
        "properties": {
          "configurations": {
            "description": "Collection of applications service configurations",
            "items": {
              "$ref": "#/components/schemas/service-configuration"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "configurations",
              "wrapped": true
            }
          },
          "serviceName": {
            "description": "The name of applications service configuration",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "serviceName",
              "wrapped": false
            }
          }
        },
        "required": [
          "configurations",
          "serviceName"
        ],
        "title": "service-configurations-parameters",
        "type": "object"
      },
      "stat-content": {
        "description": "Represents the Stat Content posted by the user.\nThe data posted by the user can be numeric data or string data.\nHowever both types of the data cannot be sent together.",
        "properties": {
          "data": {
            "description": "The numeric data that is being posted",
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "data",
              "wrapped": false
            }
          },
          "statKey": {
            "description": "Stat Key for which the data is being posted",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "statKey",
              "wrapped": false
            }
          },
          "timestamps": {
            "description": "The array of timestamps at which the data is being posted. All the timestamps must be in milliseconds.",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "timestamps",
              "wrapped": false
            }
          },
          "values": {
            "description": "The string values that are being posted",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "values",
              "wrapped": false
            }
          }
        },
        "required": [
          "statKey",
          "timestamps"
        ],
        "title": "stat-content",
        "type": "object"
      },
      "stat-contents": {
        "description": "Represents the Stat Contents posted by the user",
        "properties": {
          "stat-content": {
            "description": "Collection of stat contents",
            "items": {
              "$ref": "#/components/schemas/stat-content"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "stat-content",
              "wrapped": false
            }
          }
        },
        "required": [
          "stat-content"
        ],
        "title": "stat-contents",
        "type": "object"
      },
      "stat-key": {
        "description": "Unique representation of a metric-key/stat stored and exposed by the stats platform",
        "properties": {
          "key": {
            "description": "The stat key",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "key",
              "wrapped": false
            }
          }
        },
        "required": [
          "key"
        ],
        "title": "stat-key",
        "type": "object"
      },
      "stat-keys": {
        "description": "Container for a List of StatKey values",
        "properties": {
          "stat-key": {
            "description": "Collection of stat keys",
            "items": {
              "$ref": "#/components/schemas/stat-key"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "stat-key",
              "wrapped": false
            }
          }
        },
        "title": "stat-keys",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "stat-keys",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "stat-list": {
        "properties": {
          "stat": {
            "description": "Collection of stats",
            "items": {
              "$ref": "#/components/schemas/stats"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "stat",
              "wrapped": false
            }
          }
        },
        "title": "stat-list",
        "type": "object"
      },
      "stat-or-property-condition": {
        "description": "Model that represents a Property Condition",
        "properties": {
          "doubleValue": {
            "description": "Double value to which we need to compare to",
            "format": "double",
            "type": "number",
            "xml": {
              "attribute": false,
              "name": "doubleValue",
              "wrapped": false
            }
          },
          "key": {
            "description": "The name of the StatKey or Property to which the condition applies",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "key",
              "wrapped": false
            }
          },
          "operator": {
            "description": "Comparison operator to use. <br/>Default value is EXISTS, i.e. checks the existence of stat or property.",
            "enum": [
              "EQ",
              "NOT_EQ",
              "LIKE",
              "LT",
              "GT",
              "LT_EQ",
              "GT_EQ",
              "IN",
              "NOT_IN",
              "EXISTS",
              "CONTAINS",
              "STARTS_WITH",
              "ENDS_WITH",
              "NOT_STARTS_WITH",
              "NOT_ENDS_WITH",
              "NOT_CONTAINS",
              "REGEX",
              "NOT_REGEX",
              "NOT_EXISTS",
              "EMPTY",
              "NOT_EMPTY"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "operator",
              "wrapped": false
            }
          },
          "stringValue": {
            "description": "String value to which we need to compare to",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "stringValue",
              "wrapped": false
            }
          }
        },
        "required": [
          "key",
          "operator"
        ],
        "title": "stat-or-property-condition",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "stat-or-property-condition",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "stat-or-property-condition-query": {
        "description": "Object used to define filtering criteria based on multiple stats/properties with possibility to specify the conjunction operator",
        "properties": {
          "conditions": {
            "description": "Array of condition to be used for filtering",
            "items": {
              "$ref": "#/components/schemas/stat-or-property-condition"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "conditions",
              "wrapped": true
            }
          },
          "conjunctionOperator": {
            "description": "Indicates the conjunction of the filtering criteria\nEither all of the filtering criteria apply together (AND operation) or any of the filtering criteria could be applied (OR operation)\nDefaults to OR.",
            "enum": [
              "AND",
              "OR"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "conjunctionOperator",
              "wrapped": false
            }
          }
        },
        "required": [
          "conditions"
        ],
        "title": "stat-or-property-condition-query",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "stat-or-property-condition-query",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "stat-query": {
        "description": "Object used to request stats(metrics) on a collection of resources.\nDefines search criteria as well as expected data set.",
        "properties": {
          "begin": {
            "description": "The beginning date as a long value of the range of stats to return\nValue measures the number of milliseconds since January 1, 1970 00:00:00 UTC\nNOTE: If not provided, 24 hour rearward of ending date is used",
            "format": "int64",
            "type": "integer"
          },
          "currentOnly": {
            "description": "Indicates whether to report only \"current\" stat values, i.e. skip the stat-s that haven't published any value\nduring recent collection cycles.",
            "type": "boolean"
          },
          "dt": {
            "description": "Indicates that the requested stats are based on some dynamic threshold.\n<b>Defaults to false which indicates that stats are not based on dynamic threshold.",
            "type": "boolean"
          },
          "end": {
            "description": "The ending date as a long value of the range of stats to return\nLong value is number of milliseconds since January 1, 1970 00:00:00 UTC\nNOTE: The ending date must not be less than the beginning date.\nIf not provided, current time as UTC milliseconds is used",
            "format": "int64",
            "type": "integer"
          },
          "intervalQuantifier": {
            "description": "Number for the interval type",
            "format": "int32",
            "type": "integer"
          },
          "intervalType": {
            "description": "Interval type requested by the user (e.g: Days, Weeks, Months etc.)",
            "enum": [
              "HOURS",
              "MINUTES",
              "SECONDS",
              "DAYS",
              "WEEKS",
              "MONTHS",
              "YEARS"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "intervalType",
              "wrapped": false
            }
          },
          "latestMaxSamples": {
            "description": "The maximum number of samples to return when querying latest.\nWhen processing the get latest stats query if it is omitted a value of 1 is assumed.\nA query for the latest samples is not compatible with specifying the RollUpType value.",
            "format": "int32",
            "type": "integer"
          },
          "metrics": {
            "description": "Indicates whether specified statKey-s of query should be forcibly treated as metrics (does not include instanced stats)",
            "type": "boolean"
          },
          "resourceId": {
            "description": "Array of Resource ids for which the stats should be fetched",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "rollUpType": {
            "description": "Rollup Type requested by the user (e.g.: AVG, MIN, MAX etc.)",
            "enum": [
              "SUM",
              "AVG",
              "MIN",
              "MAX",
              "NONE",
              "LATEST",
              "COUNT"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "rollUpType",
              "wrapped": false
            }
          },
          "statKey": {
            "description": "Array of stat keys for which the stats should be returned",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "wrapStatValues": {
            "description": "Indicates whether stat values should be wrapped for application/xml response content type.\nThis flag is false by default and not needed for application/json response.\nIf set to true \"statValues\" will be returned instead of \"values\" for all content types.",
            "type": "boolean"
          }
        },
        "title": "stat-query",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "stat-query",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "stats": {
        "description": "Stats Data Response Object",
        "properties": {
          "data": {
            "description": "The numeric data",
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          },
          "dtTimestamps": {
            "description": "Time stamps at which dt thresholds data is available",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "intervalUnit": {
            "$ref": "#/components/schemas/interval-unit",
            "description": "The interval unit",
            "xml": {
              "attribute": false,
              "name": "intervalUnit",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "maxThresholdData": {
            "description": "Data for available max dt thresholds timestamps",
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          },
          "minThresholdData": {
            "description": "Data for available min dt thresholds timestamps",
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          },
          "rollUpType": {
            "description": "The roll up type",
            "enum": [
              "SUM",
              "AVG",
              "MIN",
              "MAX",
              "NONE",
              "LATEST",
              "COUNT"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "rollUpType",
              "wrapped": false
            }
          },
          "smoothValues": {
            "description": "The smooth values",
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          },
          "statKey": {
            "$ref": "#/components/schemas/stat-key",
            "description": "The stat key",
            "xml": {
              "attribute": false,
              "name": "statKey",
              "wrapped": false
            }
          },
          "statValues": {
            "description": "The string data wrapped.\nThis is equivalent to the \"values\" field, with the sole difference of having values wrapped in separate elements when content type is application/xml.",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "statValues",
              "wrapped": true
            }
          },
          "timestamps": {
            "description": "Time stamps at which data is available",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "values": {
            "description": "The string data",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "statKey",
          "timestamps"
        ],
        "title": "stats",
        "type": "object"
      },
      "stats-of-resource": {
        "description": "Resource-Stat model",
        "properties": {
          "resourceId": {
            "description": "The resource id",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "resourceId",
              "wrapped": false
            }
          },
          "stats": {
            "$ref": "#/components/schemas/stat-list",
            "description": "The stats for the corresponding resource id"
          }
        },
        "title": "stats-of-resource",
        "type": "object"
      },
      "stats-of-resources": {
        "properties": {
          "values": {
            "description": "Collection of resource-stat objects",
            "items": {
              "$ref": "#/components/schemas/stats-of-resource"
            },
            "type": "array"
          }
        },
        "title": "stats-of-resources",
        "type": "object"
      },
      "str-values": {
        "properties": {
          "values": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "values",
              "wrapped": false
            }
          }
        },
        "title": "str-values",
        "type": "object"
      },
      "supermetric": {
        "description": "Model object that represents a SuperMetric",
        "properties": {
          "description": {
            "description": "The description of the SuperMetric",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "description",
              "wrapped": false
            }
          },
          "formula": {
            "description": "The formula expression of the SuperMetric",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "formula",
              "wrapped": false
            }
          },
          "id": {
            "description": "The unique ID of the SuperMetric. This will be null when creating a\nSuperMetric, but it is required when updating an existing SuperMetric.",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "id",
              "wrapped": false
            }
          },
          "modificationTime": {
            "description": "Last modification time of the SuperMetric",
            "format": "date-time",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "modificationTime",
              "wrapped": false
            }
          },
          "name": {
            "description": "The name of the SuperMetric",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          }
        },
        "required": [
          "formula",
          "name"
        ],
        "title": "supermetric",
        "type": "object"
      },
      "supermetrics": {
        "description": "Abstract class for lists of objects that support pagination.",
        "properties": {
          "links": {
            "description": "Collection of links",
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "pageInfo": {
            "$ref": "#/components/schemas/page-info",
            "description": "Page information for result list",
            "xml": {
              "attribute": false,
              "name": "pageInfo",
              "wrapped": false
            }
          },
          "superMetrics": {
            "items": {
              "$ref": "#/components/schemas/supermetric"
            },
            "type": "array"
          }
        },
        "title": "supermetrics",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "supermetrics",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "symptom": {
        "properties": {
          "alarmInfo": {
            "description": "Additional information of the symptom.\n<b>NOTE:</b> General recommendation is not to rely on the current format of the message content\nsince it can be changed by the source of alarm information at any time.\nSo, backward compatibility of the content of the message format is not guaranteed.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "alarmInfo",
              "wrapped": false
            }
          },
          "cancelTimeUTC": {
            "description": "Time when the symptom was canceled",
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "cancelTimeUTC",
              "wrapped": false
            }
          },
          "extension": {
            "$ref": "#/components/schemas/extension",
            "xml": {
              "attribute": false,
              "name": "extension",
              "wrapped": false
            }
          },
          "faultDevices": {
            "description": "Additional information of the faulted devices.",
            "items": {
              "$ref": "#/components/schemas/fault-alarm-device"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "faultDevices",
              "wrapped": true
            }
          },
          "id": {
            "description": "The ID which identifies the Symptom",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "kpi": {
            "description": "True, if the symptom is a KPI, false otherwise",
            "type": "boolean",
            "xml": {
              "attribute": true,
              "name": "kpi",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "message": {
            "description": "The message associated with a symptom.\nThis is usually applicable for Event based Symptoms",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "message",
              "wrapped": false
            }
          },
          "resourceId": {
            "description": "The ID of the resource on which the Symptom was generated",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "resourceId",
              "wrapped": false
            }
          },
          "startTimeUTC": {
            "description": "Start time of the symptom",
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "startTimeUTC",
              "wrapped": false
            }
          },
          "statKey": {
            "description": "Hierarchical structure of the metric",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "statKey",
              "wrapped": false
            }
          },
          "symptomCriticality": {
            "description": "The Criticality of the Symptom",
            "enum": [
              "UNKNOWN",
              "NONE",
              "INFORMATION",
              "WARNING",
              "IMMEDIATE",
              "CRITICAL",
              "AUTO"
            ],
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "symptomCriticality",
              "wrapped": false
            }
          },
          "symptomDefinitionId": {
            "description": "The Symptom Definition describing the violated rule for this Symptom",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "symptomDefinitionId",
              "wrapped": false
            }
          },
          "updateTimeUTC": {
            "description": "Last updated time of the symptom",
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "updateTimeUTC",
              "wrapped": false
            }
          }
        },
        "required": [
          "resourceId",
          "startTimeUTC",
          "symptomCriticality",
          "updateTimeUTC"
        ],
        "title": "symptom",
        "type": "object"
      },
      "symptom-definition": {
        "description": "A Symptom Definition defines conditions and properties which define when an alarm is triggered",
        "properties": {
          "adapterKindKey": {
            "description": "The adapter kind identifier for the SymptomDefinition",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "adapterKindKey",
              "wrapped": false
            }
          },
          "cancelCycles": {
            "description": "The number of consecutive cycles to wait when a symptom state is false before a symptom is cancelled",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true,
              "name": "cancelCycles",
              "wrapped": false
            }
          },
          "id": {
            "description": "The identifier for the SymptomDefinition. Must be null during create.",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "id",
              "wrapped": false
            }
          },
          "name": {
            "description": "The name of the SymptomDefinition",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          },
          "realtimeMonitoringEnabled": {
            "description": "Indicates whether real-time monitoring is enabled for the symptom or not. (This field is only visible in SaaS)",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "realtimeMonitoringEnabled",
              "wrapped": false
            }
          },
          "resourceKindKey": {
            "description": "The resource kind identifier for the SymptomDefinition",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "resourceKindKey",
              "wrapped": false
            }
          },
          "state": {
            "$ref": "#/components/schemas/symptom-state",
            "description": "The symptom state associated with this symptom definition",
            "xml": {
              "attribute": false,
              "name": "state",
              "wrapped": false
            }
          },
          "waitCycles": {
            "description": "The number of consecutive cycles to wait when a symptom state is true before a symptom is triggered",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true,
              "name": "waitCycles",
              "wrapped": false
            }
          }
        },
        "required": [
          "adapterKindKey",
          "resourceKindKey"
        ],
        "title": "symptom-definition",
        "type": "object"
      },
      "symptom-definitions": {
        "description": "Collection of Symptom Definition objects",
        "properties": {
          "links": {
            "description": "Collection of links",
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "pageInfo": {
            "$ref": "#/components/schemas/page-info",
            "description": "Page information for result list",
            "xml": {
              "attribute": false,
              "name": "pageInfo",
              "wrapped": false
            }
          },
          "symptomDefinitions": {
            "description": "The collection of symptom definitions",
            "items": {
              "$ref": "#/components/schemas/symptom-definition"
            },
            "type": "array"
          }
        },
        "title": "symptom-definitions",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "symptom-definitions",
          "wrapped": false
        }
      },
      "symptom-query": {
        "description": "Query for Symptoms using various criteria.\nComposition of filtering criteria controlled via the <i>compositeOperator<i> property.\nPagination of the Symptoms that are returned can be controlled via the <i>PageInfo</i> object.\nSorting of the Symptoms is specified via the <i>SymptomField</i> object and the <i>SortOrder</i>\nobject controls the order in which the Symptoms are sorted.\nIf a sort field is not specified but pagination is requested the Symptoms will be sorted\nby the <b><i>alarmId</i></b> property.",
        "properties": {
          "activeOnly": {
            "description": "Include Symptoms that are currently Active.\nBy default, only active Symptoms are included in the result",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "activeOnly",
              "wrapped": false
            }
          },
          "alarmCriticality": {
            "description": "Return Symptoms that have the specified list of Symptom Criticalities",
            "items": {
              "enum": [
                "UNKNOWN",
                "NONE",
                "INFORMATION",
                "WARNING",
                "IMMEDIATE",
                "CRITICAL",
                "AUTO"
              ],
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "alarmCriticality",
              "wrapped": false
            }
          },
          "alarmType": {
            "description": "Return Symptoms that have the specified list of Symptom Types",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "alarmType",
              "wrapped": false
            }
          },
          "cancelTimeRange": {
            "$ref": "#/components/schemas/time-range",
            "description": "Return Symptoms that have the specified cancel time",
            "xml": {
              "attribute": false,
              "name": "cancelTimeRange",
              "wrapped": false
            }
          },
          "compositeOperator": {
            "description": "Indicates the composition of the filtering criteria. <br/>\nEither all of the filtering criteria apply together (AND operation)\nor any of the filtering criteria could be applied (OR operation)\n<b>NOTE:</b>  OR is currently not supported.",
            "enum": [
              "AND",
              "OR"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "compositeOperator",
              "wrapped": false
            }
          },
          "includeAlarmInfo": {
            "description": "Boolean that controls the retrieval of alarm information of the symptom",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "includeAlarmInfo",
              "wrapped": false
            }
          },
          "includeChildrenResources": {
            "description": "Whether to include Symptoms of all the children of resources identified by <i>resourceIds</i>",
            "type": "boolean",
            "xml": {
              "attribute": false,
              "name": "includeChildrenResources",
              "wrapped": false
            }
          },
          "resource-query": {
            "$ref": "#/components/schemas/resource-query",
            "description": "Return alarms associated with resources matching query criteria",
            "xml": {
              "attribute": false,
              "name": "resource-query",
              "wrapped": false
            }
          },
          "startTimeRange": {
            "$ref": "#/components/schemas/time-range",
            "description": "Return Symptoms that have the specified start time",
            "xml": {
              "attribute": false,
              "name": "startTimeRange",
              "wrapped": false
            }
          },
          "statKey": {
            "description": "Return Symptoms that have been generated because of violations on the Stat Keys specified",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "statKey",
              "wrapped": false
            }
          },
          "symptomDefinitionId": {
            "description": "Return Symptoms that have the specified list of Symptom Definitions",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "symptomDefinitionId",
              "wrapped": false
            }
          },
          "symptomId": {
            "description": "Return Symptoms that have the specified list of Symptom identifiers",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "symptomId",
              "wrapped": false
            }
          }
        },
        "title": "symptom-query",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "symptom-query",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "symptom-set": {
        "allOf": [
          {
            "$ref": "#/components/schemas/base-symptom-set"
          },
          {
            "description": "A reference to the symptoms by <i>symptomDefinitionReferences</i> which is full of symptom definition id values, on a related resource found by the relation.\n",
            "properties": {
              "adapterKindKey": {
                "description": "The adapter kind key of the Adapter Kind that the symptom definitions and conditions applies to",
                "type": "string",
                "xml": {
                  "attribute": false,
                  "name": "adapterKindKey",
                  "wrapped": false
                }
              },
              "aggregation": {
                "description": "Specifies how the symptoms are aggregated",
                "enum": [
                  "PERCENT",
                  "COUNT",
                  "ANY",
                  "ALL"
                ],
                "type": "string",
                "xml": {
                  "attribute": false,
                  "name": "aggregation",
                  "wrapped": false
                }
              },
              "alertConditions": {
                "description": "Set of conditions",
                "items": {
                  "$ref": "#/components/schemas/alert-condition"
                },
                "type": "array",
                "xml": {
                  "attribute": false,
                  "name": "alertConditions",
                  "wrapped": true
                }
              },
              "populationOperator": {
                "description": "The operator used in population rule",
                "enum": [
                  "EQ",
                  "NOT_EQ",
                  "LIKE",
                  "LT",
                  "GT",
                  "LT_EQ",
                  "GT_EQ",
                  "IN",
                  "NOT_IN",
                  "EXISTS",
                  "CONTAINS",
                  "STARTS_WITH",
                  "ENDS_WITH",
                  "NOT_STARTS_WITH",
                  "NOT_ENDS_WITH",
                  "NOT_CONTAINS",
                  "REGEX",
                  "NOT_REGEX",
                  "NOT_EXISTS",
                  "EMPTY",
                  "NOT_EMPTY"
                ],
                "type": "string",
                "xml": {
                  "attribute": false,
                  "name": "populationOperator",
                  "wrapped": false
                }
              },
              "relation": {
                "description": "Specifies how the symptom object relates and applies to the alert object",
                "enum": [
                  "SELF",
                  "PARENT",
                  "CHILD",
                  "DESCENDANT",
                  "ANCESTOR"
                ],
                "type": "string",
                "xml": {
                  "attribute": false,
                  "name": "relation",
                  "wrapped": false
                }
              },
              "resourceKindKey": {
                "description": "The resource kind key for the Resource Kind that the symptom definitions and conditions applies to",
                "type": "string",
                "xml": {
                  "attribute": false,
                  "name": "resourceKindKey",
                  "wrapped": false
                }
              },
              "symptomDefinitionIds": {
                "description": "Identifier of the Symptom Definition to which this object refers.The reference can be negated to indicate a NOT EXISTS reference by prefixing the symptomDefinitionReference with the \"!\" operator .\n",
                "items": {
                  "type": "string"
                },
                "type": "array",
                "xml": {
                  "attribute": false,
                  "name": "symptomDefinitionIds",
                  "wrapped": true
                }
              },
              "symptomSetOperator": {
                "description": "The operator used among the set of symptoms",
                "enum": [
                  "AND",
                  "OR"
                ],
                "type": "string",
                "xml": {
                  "attribute": false,
                  "name": "symptomSetOperator",
                  "wrapped": false
                }
              },
              "traversalSpecType": {
                "description": "Specifies an optional traversal spec type by name",
                "type": "string",
                "xml": {
                  "attribute": false,
                  "name": "traversalSpecType",
                  "wrapped": false
                }
              },
              "value": {
                "description": "The value for the population",
                "format": "double",
                "type": "number",
                "xml": {
                  "attribute": false,
                  "name": "value",
                  "wrapped": false
                }
              }
            },
            "required": [
              "relation"
            ],
            "title": "symptom-set",
            "type": "object"
          }
        ],
        "description": "A reference to the symptoms by <i>symptomDefinitionReferences</i> which is full of symptom definition id values, on a related resource found by the relation.\n",
        "title": "symptom-set"
      },
      "symptom-state": {
        "description": "The SymptomState is a product of the severity and a condition.  A symptom definition may have one SymptomState per severity level.",
        "properties": {
          "condition": {
            "$ref": "#/components/schemas/condition",
            "description": "The condition that triggers this symptom state",
            "xml": {
              "attribute": false,
              "name": "condition",
              "wrapped": false
            }
          },
          "severity": {
            "description": "The severity of the SymptomState.  Automatic is allowed only if the associated condition is a message event condition.",
            "enum": [
              "UNKNOWN",
              "NONE",
              "INFORMATION",
              "WARNING",
              "IMMEDIATE",
              "CRITICAL",
              "AUTO"
            ],
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "severity",
              "wrapped": false
            }
          }
        },
        "required": [
          "condition",
          "severity"
        ],
        "title": "symptom-state",
        "type": "object"
      },
      "symptoms": {
        "properties": {
          "links": {
            "description": "Collection of links",
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "pageInfo": {
            "$ref": "#/components/schemas/page-info",
            "description": "Page information for result list",
            "xml": {
              "attribute": false,
              "name": "pageInfo",
              "wrapped": false
            }
          },
          "symptom": {
            "description": "List of Symptoms",
            "items": {
              "$ref": "#/components/schemas/symptom"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "symptom",
              "wrapped": false
            }
          }
        },
        "title": "symptoms",
        "type": "object"
      },
      "system-audit-object": {
        "description": "Model representing system audit object",
        "properties": {
          "audits": {
            "description": "Collection of audit objects",
            "items": {
              "$ref": "#/components/schemas/system-audit-object"
            },
            "type": "array"
          },
          "count": {
            "description": "The number of objects in the audit",
            "format": "int32",
            "type": "integer",
            "xml": {
              "attribute": true,
              "name": "count",
              "wrapped": false
            }
          },
          "name": {
            "description": "The name of the audit",
            "type": "string",
            "xml": {
              "attribute": true,
              "name": "name",
              "wrapped": false
            }
          }
        },
        "required": [
          "name"
        ],
        "title": "system-audit-object",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "system-audit-object",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "system-audit-reports": {
        "properties": {
          "auditReports": {
            "description": "Collection of audit reports",
            "items": {
              "$ref": "#/components/schemas/system-audit-object"
            },
            "type": "array"
          }
        },
        "title": "system-audit-reports",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "system-audit-reports",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "time-range": {
        "properties": {
          "endTime": {
            "description": "UTC end time",
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "endTime",
              "wrapped": false
            }
          },
          "startTime": {
            "description": "UTC start time",
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "startTime",
              "wrapped": false
            }
          }
        },
        "title": "time-range",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "time-range",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "traversal-spec": {
        "description": "Represents traversal specs. These are templates in the system using which admins can assign specific set of resources to their users.",
        "properties": {
          "adapterInstanceAssociation": {
            "description": "When true the traversal spec templates applies to adapter kind associations.  A traversal spec instance based on this template must specify the included adapter kinds it applies to.",
            "type": "boolean",
            "xml": {
              "attribute": true,
              "name": "adapterInstanceAssociation",
              "wrapped": false
            }
          },
          "description": {
            "description": "The description of the traversal spec",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "description",
              "wrapped": false
            }
          },
          "name": {
            "description": "The name of the traversal spec",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          },
          "rootAdapterKindKey": {
            "description": "The adapter kind of the root resource",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "rootAdapterKindKey",
              "wrapped": false
            }
          },
          "rootResourceKindKey": {
            "description": "The resource kind of the root resource.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "rootResourceKindKey",
              "wrapped": false
            }
          }
        },
        "required": [
          "name"
        ],
        "title": "traversal-spec",
        "type": "object"
      },
      "traversal-spec-instance": {
        "description": "Represents traversal spec type. This can be used by users and user groups in a permission objects.",
        "properties": {
          "adapterKind": {
            "description": "The root Adapter kind of the Traversal Specification.  Together with <code>resourceKind</code> and <code>name</code> these values uniquely identify the traversal specification used by this instance.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "adapterKind",
              "wrapped": false
            }
          },
          "includedAdapterKinds": {
            "description": "The adapter kinds that apply to this traversal specification instance.  <b>Only</b> applicable for traversal specification templates with a filter type of ADAPTER_ASSOCIATION. If this is present, then all adapter instances of this kind are selected as part of the hierarchy.",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "includedAdapterKinds",
              "wrapped": true
            }
          },
          "name": {
            "description": "The name of the Traversal Specification.  Together with <code>adapterKind</code> and <code>resourceKind</code> these values uniquely identify a traversal specification used by this instance.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          },
          "resourceKind": {
            "description": "The root Resource kind of the Traversal Specification.  Together with <code>adapterKind</code> and <code>name</code> these values uniquely identify a traversal specification used by this instance.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "resourceKind",
              "wrapped": false
            }
          },
          "resourceSelection": {
            "description": "List of root resource id selections",
            "items": {
              "$ref": "#/components/schemas/ResourceSelection"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "resourceSelection",
              "wrapped": false
            }
          },
          "selectAllResources": {
            "description": "When flag is true system will ignore resource selections and include all resources in the tree defined by the traversal specification templat.",
            "type": "boolean",
            "xml": {
              "attribute": true,
              "name": "selectAllResources",
              "wrapped": false
            }
          }
        },
        "required": [
          "adapterKind",
          "name"
        ],
        "title": "traversal-spec-instance",
        "type": "object"
      },
      "traversal-specs": {
        "properties": {
          "specs": {
            "description": "Collection of traversal specification templates",
            "items": {
              "$ref": "#/components/schemas/traversal-spec"
            },
            "type": "array"
          }
        },
        "title": "traversal-specs",
        "type": "object"
      },
      "type": "object",
      "user": {
        "description": "Represents a local user of VMware Aria Operations system.",
        "properties": {
          "distinguishedName": {
            "description": "distinguished name of the current user.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "distinguishedName",
              "wrapped": false
            }
          },
          "emailAddress": {
            "description": "The email address of the current user",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "emailAddress",
              "wrapped": false
            }
          },
          "enabled": {
            "description": "Is the current user's account enabled?",
            "type": "boolean",
            "xml": {
              "attribute": true,
              "name": "enabled",
              "wrapped": false
            }
          },
          "firstName": {
            "description": "First name of the current user.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "firstName",
              "wrapped": false
            }
          },
          "groupIds": {
            "description": "The list of group ids to which the current user belongs to.",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "description": "Identifier of the user in the system.",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "id",
              "wrapped": false
            }
          },
          "lastLoginTime": {
            "description": "Last login time",
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": false,
              "name": "lastLoginTime",
              "wrapped": false
            }
          },
          "lastName": {
            "description": "The last name of the current user.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "lastName",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "password": {
            "description": "Password of the user object. When creating a new local user, this field has to be specified.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "password",
              "wrapped": false
            }
          },
          "role-permissions": {
            "description": "List of role permissions assigned to this user. May be null.  Replaces and takes precedence over <code>roleNames</code>",
            "items": {
              "$ref": "#/components/schemas/role-permission"
            },
            "type": "array"
          },
          "roleNames": {
            "description": "(Deprecated) List of role names assigned to the user. May be null.",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "roleNames",
              "wrapped": true
            }
          },
          "username": {
            "description": "Username of the current user.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "username",
              "wrapped": false
            }
          }
        },
        "required": [
          "password",
          "username"
        ],
        "title": "user",
        "type": "object"
      },
      "user-group": {
        "description": "Represents a user group",
        "properties": {
          "authSourceId": {
            "description": "The identifier of the auth source. If it is null, a local user group will be created.",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "authSourceId",
              "wrapped": false
            }
          },
          "description": {
            "description": "A description about this group.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "description",
              "wrapped": false
            }
          },
          "displayName": {
            "description": "The displayName of this group.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "displayName",
              "wrapped": false
            }
          },
          "id": {
            "description": "The identifier of this group.(unique)<br><br><b>Note:</b>&nbsp;Required when updating or deleting the user group.",
            "format": "uuid",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "id",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "name": {
            "description": "The name of this group.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          },
          "role-permissions": {
            "description": "The list of role permissions assigned to this group.  May be null.  Replaces and takes precedence over <code>roleNames</code>.",
            "items": {
              "$ref": "#/components/schemas/role-permission"
            },
            "type": "array"
          },
          "roleNames": {
            "description": "(Deprecated) List of role names assigned to the user group.  May be null.",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "roleNames",
              "wrapped": true
            }
          },
          "userIds": {
            "description": "The list of users who are members of this group.",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "userIds",
              "wrapped": true
            }
          }
        },
        "required": [
          "name"
        ],
        "title": "user-group",
        "type": "object"
      },
      "user-groups": {
        "properties": {
          "userGroups": {
            "description": "Collection of UserGroups",
            "items": {
              "$ref": "#/components/schemas/user-group"
            },
            "type": "array"
          }
        },
        "title": "user-groups",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "user-groups",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "user-list": {
        "description": "Represents a list of users",
        "properties": {
          "users": {
            "description": "List of users",
            "items": {
              "$ref": "#/components/schemas/user"
            },
            "type": "array"
          }
        },
        "title": "user-list",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "user-list",
          "namespace": "http://webservice.vmware.com/vRealizeOpsMgr/1.0/",
          "wrapped": false
        }
      },
      "user-role": {
        "description": "Represents a role object in the system.",
        "properties": {
          "description": {
            "description": "The description for the role.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "description",
              "wrapped": false
            }
          },
          "displayName": {
            "description": "A role name suitable for display.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "displayName",
              "wrapped": false
            }
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "name": {
            "description": "The name of the role.",
            "type": "string",
            "xml": {
              "attribute": false,
              "name": "name",
              "wrapped": false
            }
          },
          "privilege-keys": {
            "description": "The collection of privilege keys",
            "items": {
              "type": "string"
            },
            "type": "array",
            "xml": {
              "attribute": false,
              "name": "privilege-keys",
              "wrapped": true
            }
          },
          "system-created": {
            "description": "True if this role was created by the system",
            "type": "boolean",
            "xml": {
              "attribute": true,
              "name": "system-created",
              "wrapped": false
            }
          }
        },
        "required": [
          "name"
        ],
        "title": "user-role",
        "type": "object"
      },
      "user-roles": {
        "properties": {
          "userRoles": {
            "description": "Collection of user roles",
            "items": {
              "$ref": "#/components/schemas/user-role"
            },
            "type": "array"
          }
        },
        "title": "user-roles",
        "type": "object",
        "xml": {
          "attribute": false,
          "name": "user-roles",
          "wrapped": false
        }
      },
      "uuid-values": {
        "properties": {
          "uuids": {
            "description": "Represents a list of UUID(s)",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          }
        },
        "title": "uuid-values",
        "type": "object"
      }
    }
  },
  "tags": [
    {
      "description": "<i>/api/actions, /api/actiondefinitions</i> - APIs for performing action and action definition based operations",
      "name": "Actions"
    },
    {
      "description": "<i>/api/adapterkinds</i> - APIs for managing adapter kinds and associated metadata",
      "name": "Adapter Kinds"
    },
    {
      "description": "<i>/api/adapters</i> - APIs for performing operations related to adapter management",
      "name": "Adapters"
    },
    {
      "description": "<i>/api/alertplugins</i> - APIs for performing operations on alert plugins and alert plugin types",
      "name": "Alert Plugins"
    },
    {
      "description": "<i>/api/alerts, /api/alertdefinitions</i> - APIs for performing alert and Alert definition based operations",
      "name": "Alerts"
    },
    {
      "description": "<i>/api/applications</i> - APIs for application monitoring specific operations",
      "name": "Applications"
    },
    {
      "description": "<i>/api/audit</i> - APIs for Audit specific operations",
      "name": "Audit"
    },
    {
      "description": "<i>/api/auth</i> - APIs for performing authentication specific operations",
      "name": "Auth"
    },
    {
      "description": "<i>/api/certificate</i> - APIs for performing certificate related operations",
      "name": "Certificate"
    },
    {
      "description": "<i>/api/collectorgroups</i> - APIs for managing Collector Groups",
      "name": "Collector Groups"
    },
    {
      "description": "<i>/api/collectors</i> - APIs for managing collectors and associated metadata",
      "name": "Collectors"
    },
    {
      "description": "<i>/api/configurations</i> - APIs for managing configurations files",
      "name": "Configuration Management"
    },
    {
      "description": "<i>/api/content</i> - APIs for managing content in the system",
      "name": "Content Management"
    },
    {
      "description": "<i>/api/costconfig</i> - APIs for managing cost configuration",
      "name": "Cost Configuration"
    },
    {
      "description": "<i>/api/credentials, /api/credentialkinds</i> - Controllers for credential instances and credential kinds",
      "name": "Credentials"
    },
    {
      "description": "<i>/api/deployment</i> - APIs for performing deployment based operations",
      "name": "Deployment"
    },
    {
      "description": "<i>/api/events</i> - APIs for performing event based operations",
      "name": "Events"
    },
    {
      "description": "<i>/api/maintenanceschedules</i> - APIs for CRUD operations on Maintenance Schedules",
      "name": "Maintenance Schedules"
    },
    {
      "description": "<i>/api/notifications</i> - APIs for managing notification rules, notification plugin instances and emails",
      "name": "Notifications"
    },
    {
      "description": "<i>/api/policies</i> - APIs for managing policies",
      "name": "Policies"
    },
    {
      "description": "<i>/api/pricing</i> - APIa for handling pricing policies and resources in the system",
      "name": "Pricing Policies"
    },
    {
      "description": "<i>/api/recommendations</i> - APIs for managing recommendations",
      "name": "Recommendations"
    },
    {
      "description": "<i>/api/reports, /api/reportdefinitions</i> - APIs for managing reports, report definitions and report schedules in the system",
      "name": "Reports"
    },
    {
      "description": "<i>/api/resources/{id}</i> APIs for performing operations on single resource",
      "name": "Resource"
    },
    {
      "description": "<i>/api/resources</i> APIs for performing operations on numerous of resources ",
      "name": "Resources"
    },
    {
      "description": "<i>/api/supermetrics</i> - APIs for managing super metrics",
      "name": "Super Metrics"
    },
    {
      "description": "<i>/api/symptoms, /api/symptomdefinitions</i> - APIs for performing symptom definitions and symptoms based operations",
      "name": "Symptoms"
    }
  ]
}
